{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x60806040526006805460a060020a60ff021916905534801561002057600080fd5b50604051610ee7380380610ee7833981016040908152815160208084015192840151918401805190949390930192849184918491610063916000918601906100aa565b5081516100779060019060208501906100aa565b506002805460ff90921660ff19909216919091179055505060068054600160a060020a0319163317905550610145915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100eb57805160ff1916838001178555610118565b82800160010185558215610118579182015b828111156101185782518255916020019190600101906100fd565b50610124929150610128565b5090565b61014291905b80821115610124576000815560010161012e565b90565b610d93806101546000396000f3006080604052600436106100df5760003560e01c63ffffffff16806305d2035b146100e457806306fdde031461010d578063095ea7b31461019757806318160ddd146101bb57806323b872dd146101e2578063313ce5671461020c57806340c10f191461023757806342966c681461025b578063661884631461027557806370a0823114610299578063715018a6146102ba5780637d64bcb4146102cf5780638da5cb5b146102e457806395d89b4114610315578063a9059cbb1461032a578063d73dd6231461034e578063dd62ed3e14610372578063f2fde38b14610399575b600080fd5b3480156100f057600080fd5b506100f96103ba565b604080519115158252519081900360200190f35b34801561011957600080fd5b506101226103db565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015c578181015183820152602001610144565b50505050905090810190601f1680156101895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a357600080fd5b506100f9600160a060020a0360043516602435610469565b3480156101c757600080fd5b506101d06104cf565b60408051918252519081900360200190f35b3480156101ee57600080fd5b506100f9600160a060020a03600435811690602435166044356104d5565b34801561021857600080fd5b5061022161063a565b6040805160ff9092168252519081900360200190f35b34801561024357600080fd5b506100f9600160a060020a0360043516602435610643565b34801561026757600080fd5b5061027360043561076e565b005b34801561028157600080fd5b506100f9600160a060020a036004351660243561077b565b3480156102a557600080fd5b506101d0600160a060020a036004351661086a565b3480156102c657600080fd5b50610273610885565b3480156102db57600080fd5b506100f96108f3565b3480156102f057600080fd5b506102f9610999565b60408051600160a060020a039092168252519081900360200190f35b34801561032157600080fd5b506101226109a8565b34801561033657600080fd5b506100f9600160a060020a0360043516602435610a02565b34801561035a57600080fd5b506100f9600160a060020a0360043516602435610ad1565b34801561037e57600080fd5b506101d0600160a060020a0360043581169060243516610b6a565b3480156103a557600080fd5b50610273600160a060020a0360043516610b95565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045490565b600160a060020a0383166000908152600360205260408120548211156104fa57600080fd5b600160a060020a038416600090815260056020908152604080832033845290915290205482111561052a57600080fd5b600160a060020a038316151561053f57600080fd5b600160a060020a038416600090815260036020526040902054610568908363ffffffff610bb516565b600160a060020a03808616600090815260036020526040808220939093559085168152205461059d908363ffffffff610bc716565b600160a060020a0380851660009081526003602090815260408083209490945591871681526005825282812033825290915220546105e1908363ffffffff610bb516565b600160a060020a0380861660008181526005602090815260408083203384528252918290209490945580518681529051928716939192600080516020610d48833981519152929181900390910190a35060019392505050565b60025460ff1681565b600654600090600160a060020a031633148061067257507306af07097c9eeb7fd685c692751d5c66db49c21533145b151561067d57600080fd5b60065474010000000000000000000000000000000000000000900460ff16156106a557600080fd5b6004546106b8908363ffffffff610bc716565b600455600160a060020a0383166000908152600360205260409020546106e4908363ffffffff610bc716565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a03851691600091600080516020610d488339815191529181900360200190a350600192915050565b6107783382610bda565b50565b336000908152600560209081526040808320600160a060020a03861684529091528120548083106107cf57336000908152600560209081526040808320600160a060020a0388168452909152812055610804565b6107df818463ffffffff610bb516565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a0316331461089c57600080fd5b600654604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26006805473ffffffffffffffffffffffffffffffffffffffff19169055565b600654600090600160a060020a0316331461090d57600080fd5b60065474010000000000000000000000000000000000000000900460ff161561093557600080fd5b6006805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600654600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104615780601f1061043657610100808354040283529160200191610461565b33600090815260036020526040812054821115610a1e57600080fd5b600160a060020a0383161515610a3357600080fd5b33600090815260036020526040902054610a53908363ffffffff610bb516565b3360009081526003602052604080822092909255600160a060020a03851681522054610a85908363ffffffff610bc716565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191923392600080516020610d488339815191529281900390910190a350600192915050565b336000908152600560209081526040808320600160a060020a0386168452909152812054610b05908363ffffffff610bc716565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600654600160a060020a03163314610bac57600080fd5b61077881610cc9565b600082821115610bc157fe5b50900390565b81810182811015610bd457fe5b92915050565b600160a060020a038216600090815260036020526040902054811115610bff57600080fd5b600160a060020a038216600090815260036020526040902054610c28908263ffffffff610bb516565b600160a060020a038316600090815260036020526040902055600454610c54908263ffffffff610bb516565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a03851691600080516020610d488339815191529181900360200190a35050565b600160a060020a0381161515610cde57600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820bd66130f7a4bdd75c65d2da958b4098d7abdf99c1443ca783be965be83d7db8b0029",
    "sourceMap": "242:396:45:-;;;436:35:139;;;-1:-1:-1;;;;;;436:35:139;;;314:171:45;5:2:-1;;;;30:1;27;20:12;5:2;314:171:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:12:136;;314:171:45;;;;;;;;;;;;;463:12:136;;:4;;:12;;;;:::i;:::-;-1:-1:-1;481:16:136;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:136;:20;;;;;;-1:-1:-1;;503:20:136;;;;;;;;;-1:-1:-1;;567:5:133;:18;;-1:-1:-1;;;;;;567:18:133;575:10;567:18;;;-1:-1:-1;242:396:45;;-1:-1:-1;;242:396:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;242:396:45;;;-1:-1:-1;242:396:45;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100df5760003560e01c63ffffffff16806305d2035b146100e457806306fdde031461010d578063095ea7b31461019757806318160ddd146101bb57806323b872dd146101e2578063313ce5671461020c57806340c10f191461023757806342966c681461025b578063661884631461027557806370a0823114610299578063715018a6146102ba5780637d64bcb4146102cf5780638da5cb5b146102e457806395d89b4114610315578063a9059cbb1461032a578063d73dd6231461034e578063dd62ed3e14610372578063f2fde38b14610399575b600080fd5b3480156100f057600080fd5b506100f96103ba565b604080519115158252519081900360200190f35b34801561011957600080fd5b506101226103db565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015c578181015183820152602001610144565b50505050905090810190601f1680156101895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a357600080fd5b506100f9600160a060020a0360043516602435610469565b3480156101c757600080fd5b506101d06104cf565b60408051918252519081900360200190f35b3480156101ee57600080fd5b506100f9600160a060020a03600435811690602435166044356104d5565b34801561021857600080fd5b5061022161063a565b6040805160ff9092168252519081900360200190f35b34801561024357600080fd5b506100f9600160a060020a0360043516602435610643565b34801561026757600080fd5b5061027360043561076e565b005b34801561028157600080fd5b506100f9600160a060020a036004351660243561077b565b3480156102a557600080fd5b506101d0600160a060020a036004351661086a565b3480156102c657600080fd5b50610273610885565b3480156102db57600080fd5b506100f96108f3565b3480156102f057600080fd5b506102f9610999565b60408051600160a060020a039092168252519081900360200190f35b34801561032157600080fd5b506101226109a8565b34801561033657600080fd5b506100f9600160a060020a0360043516602435610a02565b34801561035a57600080fd5b506100f9600160a060020a0360043516602435610ad1565b34801561037e57600080fd5b506101d0600160a060020a0360043581169060243516610b6a565b3480156103a557600080fd5b50610273600160a060020a0360043516610b95565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045490565b600160a060020a0383166000908152600360205260408120548211156104fa57600080fd5b600160a060020a038416600090815260056020908152604080832033845290915290205482111561052a57600080fd5b600160a060020a038316151561053f57600080fd5b600160a060020a038416600090815260036020526040902054610568908363ffffffff610bb516565b600160a060020a03808616600090815260036020526040808220939093559085168152205461059d908363ffffffff610bc716565b600160a060020a0380851660009081526003602090815260408083209490945591871681526005825282812033825290915220546105e1908363ffffffff610bb516565b600160a060020a0380861660008181526005602090815260408083203384528252918290209490945580518681529051928716939192600080516020610d48833981519152929181900390910190a35060019392505050565b60025460ff1681565b600654600090600160a060020a031633148061067257507306af07097c9eeb7fd685c692751d5c66db49c21533145b151561067d57600080fd5b60065474010000000000000000000000000000000000000000900460ff16156106a557600080fd5b6004546106b8908363ffffffff610bc716565b600455600160a060020a0383166000908152600360205260409020546106e4908363ffffffff610bc716565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a03851691600091600080516020610d488339815191529181900360200190a350600192915050565b6107783382610bda565b50565b336000908152600560209081526040808320600160a060020a03861684529091528120548083106107cf57336000908152600560209081526040808320600160a060020a0388168452909152812055610804565b6107df818463ffffffff610bb516565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a0316331461089c57600080fd5b600654604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26006805473ffffffffffffffffffffffffffffffffffffffff19169055565b600654600090600160a060020a0316331461090d57600080fd5b60065474010000000000000000000000000000000000000000900460ff161561093557600080fd5b6006805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600654600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104615780601f1061043657610100808354040283529160200191610461565b33600090815260036020526040812054821115610a1e57600080fd5b600160a060020a0383161515610a3357600080fd5b33600090815260036020526040902054610a53908363ffffffff610bb516565b3360009081526003602052604080822092909255600160a060020a03851681522054610a85908363ffffffff610bc716565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191923392600080516020610d488339815191529281900390910190a350600192915050565b336000908152600560209081526040808320600160a060020a0386168452909152812054610b05908363ffffffff610bc716565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600654600160a060020a03163314610bac57600080fd5b61077881610cc9565b600082821115610bc157fe5b50900390565b81810182811015610bd457fe5b92915050565b600160a060020a038216600090815260036020526040902054811115610bff57600080fd5b600160a060020a038216600090815260036020526040902054610c28908263ffffffff610bb516565b600160a060020a038316600090815260036020526040902055600454610c54908263ffffffff610bb516565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a03851691600080516020610d488339815191529181900360200190a35050565b600160a060020a0381161515610cde57600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820bd66130f7a4bdd75c65d2da958b4098d7abdf99c1443ca783be965be83d7db8b0029",
    "sourceMap": "242:396:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:35:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:139;;;;;;;;;;;;;;;;;;;;;;319:18:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1814:188:140;-1:-1:-1;;;;;1814:188:140;;;;;;;389:83:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:134;;;;;;;;;;;;;;;;;;;;726:470:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;726:470:140;-1:-1:-1;;;;;726:470:140;;;;;;;;;;;;365:21:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:136;;;;;;;;;;;;;;;;;;;;;;;854:312:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;854:312:139;-1:-1:-1;;;;;854:312:139;;;;;;;353:73:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:135;;;;;;;3679:432:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:140;-1:-1:-1;;;;;3679:432:140;;;;;;;1149:99:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:134;-1:-1:-1;;;;;1149:99:134;;;;;1001:111:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:133;;;;1280:140:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1280:140:139;;;;238:20:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:133;;;;;;;;-1:-1:-1;;;;;238:20:133;;;;;;;;;;;;;;341::136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:136;;;;626:321:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;626:321:134;-1:-1:-1;;;;;626:321:134;;;;;;;2926:296:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:140;-1:-1:-1;;;;;2926:296:140;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:140;-1:-1:-1;;;;;2321:153:140;;;;;;;;;;1274:103:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:133;-1:-1:-1;;;;;1274:103:133;;;;;436:35:139;;;;;;;;;:::o;319:18:136:-;;;;;;;;;;;;;;;-1:-1:-1;;319:18:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:140:-;1901:10;1881:4;1893:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1893:29:140;;;;;;;;;;;:38;;;1942;;;;;;;1881:4;;1893:29;;1901:10;;1942:38;;;;;;;;-1:-1:-1;1993:4:140;1814:188;;;;:::o;389:83:134:-;455:12;;389:83;:::o;726:470:140:-;-1:-1:-1;;;;;864:15:140;;832:4;864:15;;;:8;:15;;;;;;854:25;;;846:34;;;;;;-1:-1:-1;;;;;904:14:140;;;;;;:7;:14;;;;;;;;919:10;904:26;;;;;;;;894:36;;;886:45;;;;;;-1:-1:-1;;;;;945:17:140;;;;937:26;;;;;;-1:-1:-1;;;;;988:15:140;;;;;;:8;:15;;;;;;:27;;1008:6;988:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;970:15:140;;;;;;;:8;:15;;;;;;:45;;;;1037:13;;;;;;;:25;;1055:6;1037:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1021:13:140;;;;;;;:8;:13;;;;;;;;:41;;;;1097:14;;;;;:7;:14;;;;;1112:10;1097:26;;;;;;;:38;;1128:6;1097:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1068:14:140;;;;;;;:7;:14;;;;;;;;1083:10;1068:26;;;;;;;;:67;;;;1146:28;;;;;;;;;;;1068:14;;-1:-1:-1;;;;;;;;;;;1146:28:140;;;;;;;;;;-1:-1:-1;1187:4:140;726:470;;;;;:::o;365:21:136:-;;;;;;:::o;854:312:139:-;552:5:45;;968:4:139;;-1:-1:-1;;;;;552:5:45;538:10;:19;;:79;;-1:-1:-1;575:42:45;561:10;:56;538:79;530:88;;;;;;;;511:15:139;;;;;;;510:16;502:25;;;;;;997:12;;:25;;1014:7;997:25;:16;:25;:::i;:::-;982:12;:40;-1:-1:-1;;;;;1044:13:139;;;;;;:8;:13;;;;;;:26;;1062:7;1044:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;1028:13:139;;;;;;:8;:13;;;;;;;;;:42;;;;1081:18;;;;;;;1028:13;;1081:18;;;;;;;;;1110:34;;;;;;;;-1:-1:-1;;;;;1110:34:139;;;1127:1;;-1:-1:-1;;;;;;;;;;;1110:34:139;;;;;;;;-1:-1:-1;1157:4:139;854:312;;;;:::o;353:73:135:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;3679:432:140:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:140;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:140;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:140;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:140;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;4028:61;;;;;;;;;;;-1:-1:-1;4102:4:140;;3679:432;-1:-1:-1;;;3679:432:140:o;1149:99:134:-;-1:-1:-1;;;;;1227:16:134;1205:7;1227:16;;;:8;:16;;;;;;;1149:99::o;1001:111:133:-;719:5;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1077:5;;1058:25;;-1:-1:-1;;;;;1077:5:133;;;;1058:25;;1077:5;;1058:25;1089:5;:18;;-1:-1:-1;;1089:18:133;;;1001:111::o;1280:140:139:-;719:5:133;;1339:4:139;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;511:15:139;;;;;;;510:16;502:25;;;;;;1351:15;:22;;-1:-1:-1;;1351:22:139;;;;;1384:14;;;;1351:22;;1384:14;-1:-1:-1;1411:4:139;1280:140;:::o;238:20:133:-;;;-1:-1:-1;;;;;238:20:133;;:::o;341::136:-;;;;;;;;;;;;;;;-1:-1:-1;;341:20:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:321:134;728:10;689:4;719:20;;;:8;:20;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:134;;;;746:26;;;;;;811:10;802:20;;;;:8;:20;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;856:13:134;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:134;;;;;;:8;:13;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;-1:-1:-1;;;;;;;;;;;892:33:134;;;;;;;;;-1:-1:-1;938:4:134;626:321;;;;:::o;2926:296:140:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:140;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:140;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;3139:61;;;;;;;;;;;-1:-1:-1;3213:4:140;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:140;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;1274:103:133:-;719:5;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;1060:116:132:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:132;;;1060:116::o;1238:128::-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;430:438:135:-;-1:-1:-1;;;;;508:14:135;;;;;;:8;:14;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:135;;;;;;:8;:14;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:135;;;;;;:8;:14;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:135;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:135;;;-1:-1:-1;;;;;;;;;;;829:34:135;;;;;;;;430:438;;:::o;1512:171:133:-;-1:-1:-1;;;;;1582:23:133;;;;1574:32;;;;;;1638:5;;1617:38;;-1:-1:-1;;;;;1617:38:133;;;;1638:5;;1617:38;;1638:5;;1617:38;1661:5;:17;;-1:-1:-1;;1661:17:133;-1:-1:-1;;;;;1661:17:133;;;;;;;;;;1512:171::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "decimals()": "313ce567",
    "decreaseApproval(address,uint256)": "66188463",
    "finishMinting()": "7d64bcb4",
    "increaseApproval(address,uint256)": "d73dd623",
    "mint(address,uint256)": "40c10f19",
    "mintingFinished()": "05d2035b",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"_value\":\"The amount of token to be burned.\"}},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\",\"return\":\"True if the operation was successful.\"},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address that will receive the minted tokens.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":openzeppelin-solidity/=node_modules/openzeppelin-solidity/\"]},\"sources\":{\"contracts/mocks/ERC20Mock.sol\":{\"keccak256\":\"0xc8aba9082017f171e7bd6fb93342ec5df3d4e7f6b950921b0dcbb401547364f9\",\"urls\":[\"bzzr://f449c4fa1d8fdbe68035e1a16380f13bd8c3b26fb7ea87acf5c033b3cfdebd14\"]},\"node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol\":{\"keccak256\":\"0x778b4d37fcf8c94acb52b3cf086f3a4ebc5da2b38672590294a371391cd44648\",\"urls\":[\"bzzr://826669d1888f24b726bbbd09cbd83f21461f1148d0291b27d2259d73ae641044\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\":{\"keccak256\":\"0xa9927296145433fad9195e7ce0388d6f07cfeb6c1c45df07f1c800f4196dd272\",\"urls\":[\"bzzr://59df43cea2bdda3527bc27aa56ea1838ead92e1e6ebc8254034b619d6b97003e\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\":{\"keccak256\":\"0x08394b7d7e6327085c15e8b7652cc9f4f9ddf3a9c614d9c8c3a3cff04fb781bf\",\"urls\":[\"bzzr://a0d8fca9e3eb8900f618afce5012ba48c4c664ebb6bf8ac7536367120c43fde7\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.4.24+commit.e67f0147"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mintingFinished",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseApproval",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finishMinting",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseApproval",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": null,
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": null,
              "name": "_decimals",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MintFinished",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipRenounced",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "burner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        }
      ],
      "devdoc": {
        "methods": {
          "allowance(address,address)": {
            "details": "Function to check the amount of tokens that an owner allowed to a spender.",
            "params": {
              "_owner": "address The address which owns the funds.",
              "_spender": "address The address which will spend the funds."
            },
            "return": "A uint256 specifying the amount of tokens still available for the spender."
          },
          "approve(address,uint256)": {
            "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
            "params": {
              "_spender": "The address which will spend the funds.",
              "_value": "The amount of tokens to be spent."
            }
          },
          "balanceOf(address)": {
            "details": "Gets the balance of the specified address.",
            "params": {
              "_owner": "The address to query the the balance of."
            },
            "return": "An uint256 representing the amount owned by the passed address."
          },
          "burn(uint256)": {
            "details": "Burns a specific amount of tokens.",
            "params": {
              "_value": "The amount of token to be burned."
            }
          },
          "decreaseApproval(address,uint256)": {
            "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
            "params": {
              "_spender": "The address which will spend the funds.",
              "_subtractedValue": "The amount of tokens to decrease the allowance by."
            }
          },
          "finishMinting()": {
            "details": "Function to stop minting new tokens.",
            "return": "True if the operation was successful."
          },
          "increaseApproval(address,uint256)": {
            "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
            "params": {
              "_addedValue": "The amount of tokens to increase the allowance by.",
              "_spender": "The address which will spend the funds."
            }
          },
          "mint(address,uint256)": {
            "details": "Function to mint tokens",
            "params": {
              "_amount": "The amount of tokens to mint.",
              "_to": "The address that will receive the minted tokens."
            },
            "return": "A boolean that indicates if the operation was successful."
          },
          "renounceOwnership()": {
            "details": "Allows the current owner to relinquish control of the contract."
          },
          "totalSupply()": {
            "details": "Total number of tokens in existence"
          },
          "transfer(address,uint256)": {
            "details": "Transfer token for a specified address",
            "params": {
              "_to": "The address to transfer to.",
              "_value": "The amount to be transferred."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfer tokens from one address to another",
            "params": {
              "_from": "address The address which you want to send tokens from",
              "_to": "address The address which you want to transfer to",
              "_value": "uint256 the amount of tokens to be transferred"
            }
          },
          "transferOwnership(address)": {
            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
            "params": {
              "_newOwner": "The address to transfer ownership to."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "renounceOwnership()": {
            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":openzeppelin-solidity/=node_modules/openzeppelin-solidity/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/mocks/ERC20Mock.sol": "ERC20Mock"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/mocks/ERC20Mock.sol": {
        "keccak256": "0xc8aba9082017f171e7bd6fb93342ec5df3d4e7f6b950921b0dcbb401547364f9",
        "urls": [
          "bzzr://f449c4fa1d8fdbe68035e1a16380f13bd8c3b26fb7ea87acf5c033b3cfdebd14"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol": {
        "keccak256": "0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef",
        "urls": [
          "bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol": {
        "keccak256": "0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc",
        "urls": [
          "bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol": {
        "keccak256": "0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1",
        "urls": [
          "bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol": {
        "keccak256": "0x778b4d37fcf8c94acb52b3cf086f3a4ebc5da2b38672590294a371391cd44648",
        "urls": [
          "bzzr://826669d1888f24b726bbbd09cbd83f21461f1148d0291b27d2259d73ae641044"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol": {
        "keccak256": "0xa9927296145433fad9195e7ce0388d6f07cfeb6c1c45df07f1c800f4196dd272",
        "urls": [
          "bzzr://59df43cea2bdda3527bc27aa56ea1838ead92e1e6ebc8254034b619d6b97003e"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b",
        "urls": [
          "bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
        "keccak256": "0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419",
        "urls": [
          "bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol": {
        "keccak256": "0x08394b7d7e6327085c15e8b7652cc9f4f9ddf3a9c614d9c8c3a3cff04fb781bf",
        "urls": [
          "bzzr://a0d8fca9e3eb8900f618afce5012ba48c4c664ebb6bf8ac7536367120c43fde7"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol": {
        "keccak256": "0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98",
        "urls": [
          "bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mocks/ERC20Mock.sol",
    "id": 6039,
    "exportedSymbols": {
      "ERC20Mock": [
        6038
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:639:45",
    "nodes": [
      {
        "id": 5997,
        "nodeType": "PragmaDirective",
        "src": "0:23:45",
        "nodes": [],
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ]
      },
      {
        "id": 5998,
        "nodeType": "ImportDirective",
        "src": "25:71:45",
        "nodes": [],
        "absolutePath": "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "scope": 6039,
        "sourceUnit": 19691,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5999,
        "nodeType": "ImportDirective",
        "src": "97:71:45",
        "nodes": [],
        "absolutePath": "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "scope": 6039,
        "sourceUnit": 19510,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6000,
        "nodeType": "ImportDirective",
        "src": "169:71:45",
        "nodes": [],
        "absolutePath": "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "scope": 6039,
        "sourceUnit": 19476,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6038,
        "nodeType": "ContractDefinition",
        "src": "242:396:45",
        "nodes": [
          {
            "id": 6021,
            "nodeType": "FunctionDefinition",
            "src": "314:171:45",
            "nodes": [],
            "body": {
              "id": 6020,
              "nodeType": "Block",
              "src": "421:64:45",
              "nodes": [],
              "statements": []
            },
            "documentation": null,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6015,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6008,
                    "src": "394:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6016,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6010,
                    "src": "401:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6017,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6012,
                    "src": "410:9:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 6018,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6014,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19509,
                  "src": "380:13:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$19509_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "380:40:45"
              }
            ],
            "name": "",
            "parameters": {
              "id": 6013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6008,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 6021,
                  "src": "326:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6007,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6010,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 6021,
                  "src": "340:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6012,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 6021,
                  "src": "356:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6011,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:47:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 6019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:45"
            },
            "scope": 6038,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 6037,
            "nodeType": "ModifierDefinition",
            "src": "491:145:45",
            "nodes": [],
            "body": {
              "id": 6036,
              "nodeType": "Block",
              "src": "520:116:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6024,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19966,
                              "src": "538:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "538:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 6026,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19226,
                            "src": "552:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "538:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6028,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19966,
                              "src": "561:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "561:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "307830364146303730393743394565623766443638356336393237353144354336366442343963323135",
                            "id": 6030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "575:42:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x06AF07097C9Eeb7fD685c692751D5C66dB49c215"
                          },
                          "src": "561:56:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "538:79:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "530:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "530:88:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6034,
                  "nodeType": "ExpressionStatement",
                  "src": "530:88:45"
                },
                {
                  "id": 6035,
                  "nodeType": "PlaceholderStatement",
                  "src": "628:1:45"
                }
              ]
            },
            "documentation": null,
            "name": "hasMintPermission",
            "parameters": {
              "id": 6022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "517:2:45"
            },
            "visibility": "internal"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6001,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19509,
              "src": "264:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$19509",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 6002,
            "nodeType": "InheritanceSpecifier",
            "src": "264:13:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6003,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19475,
              "src": "279:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$19475",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 6004,
            "nodeType": "InheritanceSpecifier",
            "src": "279:13:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6005,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19690,
              "src": "294:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$19690",
                "typeString": "contract MintableToken"
              }
            },
            "id": 6006,
            "nodeType": "InheritanceSpecifier",
            "src": "294:13:45"
          }
        ],
        "contractDependencies": [
          19308,
          19404,
          19475,
          19509,
          19552,
          19584,
          19690,
          19937
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6038,
          19690,
          19308,
          19937,
          19475,
          19404,
          19509,
          19552,
          19584
        ],
        "name": "ERC20Mock",
        "scope": 6039
      }
    ]
  },
  "id": 45
}