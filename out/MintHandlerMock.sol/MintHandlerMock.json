{
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "removeBridge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isBridge",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "addBridge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405160208061048c833981016040525160008054600160a060020a0319908116331790915560018054600160a060020a039093169290911691909117905561042d8061005f6000396000f3006080604052600436106100715760003560e01c63ffffffff16806304df017d1461007657806340c10f1914610099578063715018a6146100d1578063726600ce146100e65780638da5cb5b146101075780639712fdf814610138578063f2fde38b14610159578063fc0c546a1461017a575b600080fd5b34801561008257600080fd5b50610097600160a060020a036004351661018f565b005b3480156100a557600080fd5b506100bd600160a060020a03600435166024356101c7565b604080519115158252519081900360200190f35b3480156100dd57600080fd5b50610097610287565b3480156100f257600080fd5b506100bd600160a060020a03600435166102f3565b34801561011357600080fd5b5061011c610308565b60408051600160a060020a039092168252519081900360200190f35b34801561014457600080fd5b50610097600160a060020a0360043516610317565b34801561016557600080fd5b50610097600160a060020a0360043516610352565b34801561018657600080fd5b5061011c610375565b600054600160a060020a031633146101a657600080fd5b600160a060020a03166000908152600260205260409020805460ff19169055565b3360009081526002602052604081205460ff1615156101e557600080fd5b600154604080517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015260248201869052915191909216916340c10f199160448083019260209291908290030181600087803b15801561025457600080fd5b505af1158015610268573d6000803e3d6000fd5b505050506040513d602081101561027e57600080fd5b50519392505050565b600054600160a060020a0316331461029e57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60026020526000908152604090205460ff1681565b600054600160a060020a031681565b600054600160a060020a0316331461032e57600080fd5b600160a060020a03166000908152600260205260409020805460ff19166001179055565b600054600160a060020a0316331461036957600080fd5b61037281610384565b50565b600154600160a060020a031681565b600160a060020a038116151561039957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820cac8e14ed58f87e049cadd693c2ba0b6edfd68f6ba43ac205ef30b79352514170029",
    "sourceMap": "188:617:54:-;;;339:96;8:9:-1;5:2;;;30:1;27;20:12;5:2;339:96:54;;;;;;;;;;;;;567:5:133;:18;;-1:-1:-1;;;;;;567:18:133;;;575:10;567:18;;;;;384:44:54;;-1:-1:-1;;;;;384:44:54;;;;;;;;;;;;;188:617;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100715760003560e01c63ffffffff16806304df017d1461007657806340c10f1914610099578063715018a6146100d1578063726600ce146100e65780638da5cb5b146101075780639712fdf814610138578063f2fde38b14610159578063fc0c546a1461017a575b600080fd5b34801561008257600080fd5b50610097600160a060020a036004351661018f565b005b3480156100a557600080fd5b506100bd600160a060020a03600435166024356101c7565b604080519115158252519081900360200190f35b3480156100dd57600080fd5b50610097610287565b3480156100f257600080fd5b506100bd600160a060020a03600435166102f3565b34801561011357600080fd5b5061011c610308565b60408051600160a060020a039092168252519081900360200190f35b34801561014457600080fd5b50610097600160a060020a0360043516610317565b34801561016557600080fd5b50610097600160a060020a0360043516610352565b34801561018657600080fd5b5061011c610375565b600054600160a060020a031633146101a657600080fd5b600160a060020a03166000908152600260205260409020805460ff19169055565b3360009081526002602052604081205460ff1615156101e557600080fd5b600154604080517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015260248201869052915191909216916340c10f199160448083019260209291908290030181600087803b15801561025457600080fd5b505af1158015610268573d6000803e3d6000fd5b505050506040513d602081101561027e57600080fd5b50519392505050565b600054600160a060020a0316331461029e57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60026020526000908152604090205460ff1681565b600054600160a060020a031681565b600054600160a060020a0316331461032e57600080fd5b600160a060020a03166000908152600260205260409020805460ff19166001179055565b600054600160a060020a0316331461036957600080fd5b61037281610384565b50565b600154600160a060020a031681565b600160a060020a038116151561039957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820cac8e14ed58f87e049cadd693c2ba0b6edfd68f6ba43ac205ef30b79352514170029",
    "sourceMap": "188:617:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;543:99:54;-1:-1:-1;;;;;543:99:54;;;;;;;648:155;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;648:155:54;-1:-1:-1;;;;;648:155:54;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:133;;;;292:40:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;292:40:54;-1:-1:-1;;;;;292:40:54;;;;;238:20:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:133;;;;;;;;-1:-1:-1;;;;;238:20:133;;;;;;;;;;;;;;441:96:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;441:96:54;-1:-1:-1;;;;;441:96:54;;;;;1274:103:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:133;-1:-1:-1;;;;;1274:103:133;;;;;244:41:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;244:41:54;;;;543:99;719:5:133;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;-1:-1:-1;;;;;618:17:54;;;;;:8;:17;;;;;611:24;;-1:-1:-1;;611:24:54;;;543:99::o;648:155::-;743:10;710:4;734:20;;;:8;:20;;;;;;;;726:29;;;;;;;;772:5;;:24;;;;;;-1:-1:-1;;;;;772:24:54;;;;;;;;;;;;;;;:5;;;;;:10;;:24;;;;;;;;;;;;;;:5;;:24;;;5:2:-1;;;;30:1;27;20:12;5:2;772:24:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;772:24:54;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;772:24:54;;648:155;-1:-1:-1;;;648:155:54:o;1001:111:133:-;719:5;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:133;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:133;;;1001:111::o;292:40:54:-;;;;;;;;;;;;;;;:::o;238:20:133:-;;;-1:-1:-1;;;;;238:20:133;;:::o;441:96:54:-;719:5:133;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;-1:-1:-1;;;;;506:17:54;;;;;:8;:17;;;;;:24;;-1:-1:-1;;506:24:54;526:4;506:24;;;441:96::o;1274:103:133:-;719:5;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;244:41:54:-;;;-1:-1:-1;;;;;244:41:54;;:::o;1512:171:133:-;-1:-1:-1;;;;;1582:23:133;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:133;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:133;-1:-1:-1;;;;;1661:17:133;;;;;;;;;;1512:171::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addBridge(address)": "9712fdf8",
    "isBridge(address)": "726600ce",
    "mint(address,uint256)": "40c10f19",
    "owner()": "8da5cb5b",
    "removeBridge(address)": "04df017d",
    "renounceOwnership()": "715018a6",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"removeBridge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBridge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"addBridge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MintHandlerMock.sol\":\"MintHandlerMock\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":openzeppelin-solidity/=node_modules/openzeppelin-solidity/\"]},\"sources\":{\"contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"contracts/interfaces/IBurnableMintableERC677Token.sol\":{\"keccak256\":\"0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1\",\"urls\":[\"bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef\"]},\"contracts/interfaces/IMintHandler.sol\":{\"keccak256\":\"0xa2a73b3fcc16a2fe00fe3e9be86e590255945fa8cf74755ae062ab3959896ad7\",\"urls\":[\"bzzr://42a46f317e5ac87f8e75082211b8b826f4fa79d1b85c7b0b41d3bad1a2de9a62\"]},\"contracts/mocks/MintHandlerMock.sol\":{\"keccak256\":\"0xcf1e273655938d3992aa1ff9e29c93d6ffdb3c4e0f2ec0281031c452197ba62e\",\"urls\":[\"bzzr://dc12741650fa111f1b34dea3ac6c2d2ebaacfcc26947875ab394d2d771957360\"]},\"node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.4.24+commit.e67f0147"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_bridge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeBridge"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBridge",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_bridge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addBridge"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipRenounced",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        }
      ],
      "devdoc": {
        "methods": {
          "renounceOwnership()": {
            "details": "Allows the current owner to relinquish control of the contract."
          },
          "transferOwnership(address)": {
            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
            "params": {
              "_newOwner": "The address to transfer ownership to."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "renounceOwnership()": {
            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":openzeppelin-solidity/=node_modules/openzeppelin-solidity/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/mocks/MintHandlerMock.sol": "MintHandlerMock"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/ERC677.sol": {
        "keccak256": "0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca",
        "urls": [
          "bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b"
        ],
        "license": null
      },
      "contracts/interfaces/IBurnableMintableERC677Token.sol": {
        "keccak256": "0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1",
        "urls": [
          "bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef"
        ],
        "license": null
      },
      "contracts/interfaces/IMintHandler.sol": {
        "keccak256": "0xa2a73b3fcc16a2fe00fe3e9be86e590255945fa8cf74755ae062ab3959896ad7",
        "urls": [
          "bzzr://42a46f317e5ac87f8e75082211b8b826f4fa79d1b85c7b0b41d3bad1a2de9a62"
        ],
        "license": null
      },
      "contracts/mocks/MintHandlerMock.sol": {
        "keccak256": "0xcf1e273655938d3992aa1ff9e29c93d6ffdb3c4e0f2ec0281031c452197ba62e",
        "urls": [
          "bzzr://dc12741650fa111f1b34dea3ac6c2d2ebaacfcc26947875ab394d2d771957360"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol": {
        "keccak256": "0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc",
        "urls": [
          "bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b",
        "urls": [
          "bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
        "keccak256": "0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419",
        "urls": [
          "bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mocks/MintHandlerMock.sol",
    "id": 7135,
    "exportedSymbols": {
      "MintHandlerMock": [
        7134
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:806:54",
    "nodes": [
      {
        "id": 7058,
        "nodeType": "PragmaDirective",
        "src": "0:23:54",
        "nodes": [],
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ]
      },
      {
        "id": 7059,
        "nodeType": "ImportDirective",
        "src": "25:40:54",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IMintHandler.sol",
        "file": "../interfaces/IMintHandler.sol",
        "scope": 7135,
        "sourceUnit": 4070,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7060,
        "nodeType": "ImportDirective",
        "src": "66:56:54",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IBurnableMintableERC677Token.sol",
        "file": "../interfaces/IBurnableMintableERC677Token.sol",
        "scope": 7135,
        "sourceUnit": 3935,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7061,
        "nodeType": "ImportDirective",
        "src": "123:63:54",
        "nodes": [],
        "absolutePath": "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "scope": 7135,
        "sourceUnit": 19309,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7134,
        "nodeType": "ContractDefinition",
        "src": "188:617:54",
        "nodes": [
          {
            "id": 7067,
            "nodeType": "VariableDeclaration",
            "src": "244:41:54",
            "nodes": [],
            "constant": false,
            "name": "token",
            "scope": 7134,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$3934",
              "typeString": "contract IBurnableMintableERC677Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 7066,
              "name": "IBurnableMintableERC677Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3934,
              "src": "244:28:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$3934",
                "typeString": "contract IBurnableMintableERC677Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 7071,
            "nodeType": "VariableDeclaration",
            "src": "292:40:54",
            "nodes": [],
            "constant": false,
            "name": "isBridge",
            "scope": 7134,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7070,
              "keyType": {
                "id": 7068,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "300:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "292:24:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7069,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "311:4:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 7083,
            "nodeType": "FunctionDefinition",
            "src": "339:96:54",
            "nodes": [],
            "body": {
              "id": 7082,
              "nodeType": "Block",
              "src": "374:61:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7076,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7067,
                      "src": "384:5:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$3934",
                        "typeString": "contract IBurnableMintableERC677Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7078,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7073,
                          "src": "421:6:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7077,
                        "name": "IBurnableMintableERC677Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3934,
                        "src": "392:28:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBurnableMintableERC677Token_$3934_$",
                          "typeString": "type(contract IBurnableMintableERC677Token)"
                        }
                      },
                      "id": 7079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "392:36:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$3934",
                        "typeString": "contract IBurnableMintableERC677Token"
                      }
                    },
                    "src": "384:44:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$3934",
                      "typeString": "contract IBurnableMintableERC677Token"
                    }
                  },
                  "id": 7081,
                  "nodeType": "ExpressionStatement",
                  "src": "384:44:54"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "parameters": {
              "id": 7074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7073,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 7083,
                  "src": "351:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:16:54"
            },
            "payable": false,
            "returnParameters": {
              "id": 7075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "374:0:54"
            },
            "scope": 7134,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 7097,
            "nodeType": "FunctionDefinition",
            "src": "441:96:54",
            "nodes": [],
            "body": {
              "id": 7096,
              "nodeType": "Block",
              "src": "496:41:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7090,
                        "name": "isBridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7071,
                        "src": "506:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7092,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7091,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7085,
                        "src": "515:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "506:17:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "526:4:54",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "506:24:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7095,
                  "nodeType": "ExpressionStatement",
                  "src": "506:24:54"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 7088,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7087,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19256,
                  "src": "486:9:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "486:9:54"
              }
            ],
            "name": "addBridge",
            "parameters": {
              "id": 7086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7085,
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 7097,
                  "src": "460:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "459:17:54"
            },
            "payable": false,
            "returnParameters": {
              "id": 7089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:54"
            },
            "scope": 7134,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 7110,
            "nodeType": "FunctionDefinition",
            "src": "543:99:54",
            "nodes": [],
            "body": {
              "id": 7109,
              "nodeType": "Block",
              "src": "601:41:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "611:24:54",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7104,
                        "name": "isBridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7071,
                        "src": "618:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7106,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7105,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7099,
                        "src": "627:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "618:17:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7108,
                  "nodeType": "ExpressionStatement",
                  "src": "611:24:54"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 7102,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7101,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19256,
                  "src": "591:9:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "591:9:54"
              }
            ],
            "name": "removeBridge",
            "parameters": {
              "id": 7100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7099,
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 7110,
                  "src": "565:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "564:17:54"
            },
            "payable": false,
            "returnParameters": {
              "id": 7103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:54"
            },
            "scope": 7134,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 7133,
            "nodeType": "FunctionDefinition",
            "src": "648:155:54",
            "nodes": [],
            "body": {
              "id": 7132,
              "nodeType": "Block",
              "src": "716:87:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7120,
                          "name": "isBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7071,
                          "src": "734:8:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 7123,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7121,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19966,
                            "src": "743:3:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "743:10:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "734:20:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "726:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:29:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7125,
                  "nodeType": "ExpressionStatement",
                  "src": "726:29:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7128,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7112,
                        "src": "783:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7129,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7114,
                        "src": "788:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7126,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7067,
                        "src": "772:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnableMintableERC677Token_$3934",
                          "typeString": "contract IBurnableMintableERC677Token"
                        }
                      },
                      "id": 7127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3921,
                      "src": "772:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 7130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:24:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7118,
                  "id": 7131,
                  "nodeType": "Return",
                  "src": "765:31:54"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "parameters": {
              "id": 7115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7112,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7133,
                  "src": "662:11:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7114,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7133,
                  "src": "675:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "661:30:54"
            },
            "payable": false,
            "returnParameters": {
              "id": 7118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7117,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7133,
                  "src": "710:4:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "709:6:54"
            },
            "scope": 7134,
            "stateMutability": "nonpayable",
            "superFunction": 4068,
            "visibility": "external"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7062,
              "name": "IMintHandler",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4069,
              "src": "216:12:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMintHandler_$4069",
                "typeString": "contract IMintHandler"
              }
            },
            "id": 7063,
            "nodeType": "InheritanceSpecifier",
            "src": "216:12:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7064,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19308,
              "src": "230:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$19308",
                "typeString": "contract Ownable"
              }
            },
            "id": 7065,
            "nodeType": "InheritanceSpecifier",
            "src": "230:7:54"
          }
        ],
        "contractDependencies": [
          4069,
          19308
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7134,
          19308,
          4069
        ],
        "name": "MintHandlerMock",
        "scope": 7135
      }
    ]
  },
  "id": 54
}