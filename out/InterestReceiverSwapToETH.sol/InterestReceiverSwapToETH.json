{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "wethToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uniswapRouterV2",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minReceivedFraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "compToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "onInterestReceived",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minFraction",
          "type": "uint256"
        }
      ],
      "name": "setMinFractionReceived",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x60806040819052600060018190558054600160a060020a031916331781557f095ea7b3000000000000000000000000000000000000000000000000000000008252737a250d5630b4cf539739df2c5dacb4c659f2488d60845260001960a452736b175474e89094c44da98b954eedeac495271d0f9163095ea7b39160c491602091604490829087803b15801561009457600080fd5b505af11580156100a8573d6000803e3d6000fd5b505050506040513d60208110156100be57600080fd5b5050604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152737a250d5630b4cf539739df2c5dacb4c659f2488d60048201526000196024820152905173c00e94cb662c3520282e6f5717214004a7f268889163095ea7b39160448083019260209291908290030181600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b505050506040513d602081101561017257600080fd5b50506109f1806101836000396000f3006080604052600436106100925760003560e01c63ffffffff1680634b57b0be14610094578063596fa9e3146100c55780635adc334e146100da5780636605dfa71461010157806369ffa08a14610116578063715018a61461013d57806381e3f276146101525780638da5cb5b14610173578063be22f54614610188578063e3e323f61461019d578063f2fde38b146101b5575b005b3480156100a057600080fd5b506100a96101d6565b60408051600160a060020a039092168252519081900360200190f35b3480156100d157600080fd5b506100a96101ee565b3480156100e657600080fd5b506100ef610206565b60408051918252519081900360200190f35b34801561010d57600080fd5b506100a961020c565b34801561012257600080fd5b50610092600160a060020a0360043581169060243516610224565b34801561014957600080fd5b50610092610249565b34801561015e57600080fd5b50610092600160a060020a03600435166102b5565b34801561017f57600080fd5b506100a96106a2565b34801561019457600080fd5b506100a96106b1565b3480156101a957600080fd5b506100926004356106c9565b3480156101c157600080fd5b50610092600160a060020a03600435166106f9565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b60015481565b73c00e94cb662c3520282e6f5717214004a7f2688881565b600054600160a060020a0316331461023b57600080fd5b610245828261071c565b5050565b600054600160a060020a0316331461026057600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60408051600280825260608281019093526000918291816020016020820280388339019050509250838360008151811015156102ed57fe5b600160a060020a03909216602092830290910190910152825173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2908490600190811061032957fe5b600160a060020a039283166020918202909201810191909152604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051928716926370a08231926024808401939192918290030181600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b505050506040513d60208110156103c457600080fd5b5051604080517fd06ca61f000000000000000000000000000000000000000000000000000000008152670de0b6b3a764000060048201818152602483019384528751604484015287519496506ec097ce7bc90715b34b9f100000000094737a250d5630b4cf539739df2c5dacb4c659f2488d9463d06ca61f948a93926064909101906020858101910280838360005b8381101561046b578181015183820152602001610453565b505050509050019350505050600060405180830381600087803b15801561049157600080fd5b505af11580156104a5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156104ce57600080fd5b8101908080516401000000008111156104e657600080fd5b820160208101848111156104f957600080fd5b815185602082028301116401000000008211171561051657600080fd5b50508051909350600192508210905061052b57fe5b9060200190602002015183600154020281151561054457fe5b049050737a250d5630b4cf539739df2c5dacb4c659f2488d600160a060020a03166318cbafe583838630426040518663ffffffff1660e01b8152600401808681526020018581526020018060200184600160a060020a0316600160a060020a03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156105e85781810151838201526020016105d0565b505050509050019650505050505050600060405180830381600087803b15801561061157600080fd5b505af1158015610625573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561064e57600080fd5b81019080805164010000000081111561066657600080fd5b8201602081018481111561067957600080fd5b815185602082028301116401000000008211171561069657600080fd5b50505050505050505050565b600054600160a060020a031681565b736b175474e89094c44da98b954eedeac495271d0f81565b600054600160a060020a031633146106e057600080fd5b670de0b6b3a764000081106106f457600080fd5b600155565b600054600160a060020a0316331461071057600080fd5b6107198161075f565b50565b80600160a060020a038116151561073257600080fd5b600160a060020a03831615156107505761074b826107dc565b61075a565b61075a83836107e8565b505050565b600160a060020a038116151561077457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b3031610245828261089b565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561084d57600080fd5b505af1158015610861573d6000803e3d6000fd5b505050506040513d602081101561087757600080fd5b50519050610895600160a060020a038516848363ffffffff61090316565b50505050565b604051600160a060020a0383169082156108fc029083906000818181858888f1935050505015156102455780826108d0610995565b600160a060020a039091168152604051908190036020019082f0801580156108fc573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e01b81526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b505050503d1561075a5760206000803e600051151561075a57600080fd5b6040516021806109a5833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a7230582074b7e7f38801f6cac8958ad4d51d510fe32c46aab8b76704a18773384d5d523a0029",
    "sourceMap": "374:939:93:-;;;;;985:1:91;948:38;;;;567:18:133;;-1:-1:-1;;;;;;567:18:133;575:10;567:18;;;1024:55:91;;;898:42;1024:55;;-1:-1:-1;;1024:55:91;;603:42;;1024:16;;:55;;;;;;374:939:93;;603:42:91;1024:55;;;5:2:-1;;;;30:1;27;20:12;5:2;1024:55:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1024:55:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;1089:56:91;;;;;;898:42;1089:56;;;;-1:-1:-1;;1089:56:91;;;;;;692:42;;1089:17;;:56;;;;;1024:55;;1089:56;;;;;;;-1:-1:-1;692:42:91;1089:56;;;5:2:-1;;;;30:1;27;20:12;5:2;1089:56:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1089:56:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;374:939:93;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100925760003560e01c63ffffffff1680634b57b0be14610094578063596fa9e3146100c55780635adc334e146100da5780636605dfa71461010157806369ffa08a14610116578063715018a61461013d57806381e3f276146101525780638da5cb5b14610173578063be22f54614610188578063e3e323f61461019d578063f2fde38b146101b5575b005b3480156100a057600080fd5b506100a96101d6565b60408051600160a060020a039092168252519081900360200190f35b3480156100d157600080fd5b506100a96101ee565b3480156100e657600080fd5b506100ef610206565b60408051918252519081900360200190f35b34801561010d57600080fd5b506100a961020c565b34801561012257600080fd5b50610092600160a060020a0360043581169060243516610224565b34801561014957600080fd5b50610092610249565b34801561015e57600080fd5b50610092600160a060020a03600435166102b5565b34801561017f57600080fd5b506100a96106a2565b34801561019457600080fd5b506100a96106b1565b3480156101a957600080fd5b506100926004356106c9565b3480156101c157600080fd5b50610092600160a060020a03600435166106f9565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b60015481565b73c00e94cb662c3520282e6f5717214004a7f2688881565b600054600160a060020a0316331461023b57600080fd5b610245828261071c565b5050565b600054600160a060020a0316331461026057600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60408051600280825260608281019093526000918291816020016020820280388339019050509250838360008151811015156102ed57fe5b600160a060020a03909216602092830290910190910152825173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2908490600190811061032957fe5b600160a060020a039283166020918202909201810191909152604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051928716926370a08231926024808401939192918290030181600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b505050506040513d60208110156103c457600080fd5b5051604080517fd06ca61f000000000000000000000000000000000000000000000000000000008152670de0b6b3a764000060048201818152602483019384528751604484015287519496506ec097ce7bc90715b34b9f100000000094737a250d5630b4cf539739df2c5dacb4c659f2488d9463d06ca61f948a93926064909101906020858101910280838360005b8381101561046b578181015183820152602001610453565b505050509050019350505050600060405180830381600087803b15801561049157600080fd5b505af11580156104a5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156104ce57600080fd5b8101908080516401000000008111156104e657600080fd5b820160208101848111156104f957600080fd5b815185602082028301116401000000008211171561051657600080fd5b50508051909350600192508210905061052b57fe5b9060200190602002015183600154020281151561054457fe5b049050737a250d5630b4cf539739df2c5dacb4c659f2488d600160a060020a03166318cbafe583838630426040518663ffffffff1660e01b8152600401808681526020018581526020018060200184600160a060020a0316600160a060020a03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156105e85781810151838201526020016105d0565b505050509050019650505050505050600060405180830381600087803b15801561061157600080fd5b505af1158015610625573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561064e57600080fd5b81019080805164010000000081111561066657600080fd5b8201602081018481111561067957600080fd5b815185602082028301116401000000008211171561069657600080fd5b50505050505050505050565b600054600160a060020a031681565b736b175474e89094c44da98b954eedeac495271d0f81565b600054600160a060020a031633146106e057600080fd5b670de0b6b3a764000081106106f457600080fd5b600155565b600054600160a060020a0316331461071057600080fd5b6107198161075f565b50565b80600160a060020a038116151561073257600080fd5b600160a060020a03831615156107505761074b826107dc565b61075a565b61075a83836107e8565b505050565b600160a060020a038116151561077457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b3031610245828261089b565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561084d57600080fd5b505af1158015610861573d6000803e3d6000fd5b505050506040513d602081101561087757600080fd5b50519050610895600160a060020a038516848363ffffffff61090316565b50505050565b604051600160a060020a0383169082156108fc029083906000818181858888f1935050505015156102455780826108d0610995565b600160a060020a039091168152604051908190036020019082f0801580156108fc573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e01b81526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b505050503d1561075a5760206000803e600051151561075a57600080fd5b6040516021806109a5833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a7230582074b7e7f38801f6cac8958ad4d51d510fe32c46aab8b76704a18773384d5d523a0029",
    "sourceMap": "374:939:93:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:83:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;741:83:91;;;;;;;;-1:-1:-1;;;;;741:83:91;;;;;;;;;;;;;;830:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;830:111:91;;;;948:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:38:91;;;;;;;;;;;;;;;;;;;;652:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;652:83:91;;;;1923:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1923:110:91;-1:-1:-1;;;;;1923:110:91;;;;;;;;;;1001:111:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:133;;;;627:508:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;627:508:93;-1:-1:-1;;;;;627:508:93;;;;;238:20:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:133;;;;564:82:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;564:82:91;;;;1437:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1437:165:91;;;;;1274:103:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:133;-1:-1:-1;;;;;1274:103:133;;;;;741:83:91;781:42;741:83;:::o;830:111::-;898:42;830:111;:::o;948:38::-;;;;:::o;652:83::-;692:42;652:83;:::o;1923:110::-;719:5:133;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;2002:24:91;2014:6;2022:3;2002:11;:24::i;:::-;1923:110;;:::o;1001:111:133:-;719:5;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:133;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:133;;;1001:111::o;627:508:93:-;714:16;;;728:1;714:16;;;690:21;714:16;;;;;;795:14;;;;714:16;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;714:16:93;690:40;;750:6;740:4;745:1;740:7;;;;;;;;;;-1:-1:-1;;;;;740:16:93;;;:7;;;;;;;;;;:16;766:7;;781:42:91;;766:4:93;;771:1;;766:7;;;;;;-1:-1:-1;;;;;766:19:93;;;:7;;;;;;;;;:19;;;;812:38;;;;;;844:4;812:38;;;;;;:23;;;;;;:38;;;;;766:7;;812:38;;;;;;-1:-1:-1;812:23:93;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;812:38:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;812:38:93;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;812:38:93;978:44;;;;;;1008:7;978:44;;;;;;;;;;;;;;;;;;;;812:38;;-1:-1:-1;1029:6:93;;898:42:91;;978:29:93;;1017:4;;978:44;;;;;;812:38;978:44;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;978:44:93;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;978:44:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;978:44:93;;;;;;39:16:-1;36:1;17:17;2:54;101:4;978:44:93;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;978:44:93;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;64:21;;126:4;117:14;;142:31;;;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;-1:-1;;978:47:93;;:44;;-1:-1:-1;1023:1:93;;-1:-1:-1;978:47:93;;;-1:-1:-1;978:47:93;;;;;;;;;;;;969:6;947:19;;:28;:78;946:89;;;;;;;;926:109;;898:42:91;-1:-1:-1;;;;;1046:37:93;;1084:6;1092:9;1103:4;1117;1124:3;1046:82;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1046:82:93;-1:-1:-1;;;;;1046:82:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1046:82:93;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1046:82:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1046:82:93;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1046:82:93;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1046:82:93;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;64:21;;126:4;117:14;;142:31;;;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;-1:-1;;;;;;;;;;627:508:93:o;238:20:133:-;;;-1:-1:-1;;;;;238:20:133;;:::o;564:82:91:-;603:42;564:82;:::o;1437:165::-;719:5:133;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1543:7:91;1528:22;;1520:31;;;;;;1561:19;:34;1437:165::o;1274:103:133:-;719:5;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;892:225:81:-;964:3;-1:-1:-1;;;;;455:17:81;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:81;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;:::-;892:225;;;:::o;1512:171:133:-;-1:-1:-1;;;;;1582:23:133;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:133;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:133;-1:-1:-1;;;;;1661:17:133;;;;;;;;;;1512:171::o;1270:145:81:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:81;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:81;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:81;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:81;;-1:-1:-1;1826:33:81;-1:-1:-1;;;;;1826:19:81;;1846:3;1795:21;1826:33;:19;:33;:::i;:::-;1656:210;;;;:::o;431:177:36:-;513:22;;-1:-1:-1;;;;;513:14:36;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:36;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;431:177:36;;:::o;579:339:40:-;677:6;-1:-1:-1;;;;;665:28:40;;694:3;699:6;665:41;;;;;;;;;;;;;-1:-1:-1;;;;;665:41:40;-1:-1:-1;;;;;665:41:40;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:41:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:41:40;;;;742:14;739:2;;;796;793:1;790;775:24;832:1;826:8;819:16;816:2;;;868:1;865;858:12;374:939:93;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claimTokens(address,address)": "69ffa08a",
    "compToken()": "6605dfa7",
    "daiToken()": "be22f546",
    "minReceivedFraction()": "5adc334e",
    "onInterestReceived(address)": "81e3f276",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setMinFractionReceived(uint256)": "e3e323f6",
    "transferOwnership(address)": "f2fde38b",
    "uniswapRouterV2()": "596fa9e3",
    "wethToken()": "4b57b0be"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"wethToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uniswapRouterV2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minReceivedFraction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"onInterestReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minFraction\",\"type\":\"uint256\"}],\"name\":\"setMinFractionReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"claimTokens(address,address)\":{\"details\":\"Allows to transfer any locked token from this contract. Only owner can call this method.\",\"params\":{\"_to\":\"address that will receive the locked tokens on this contract.\",\"_token\":\"address of the token, if it is not provided (0x00..00), native coins will be transferred.\"}},\"onInterestReceived(address)\":{\"details\":\"Callback function for notifying this contract about received interest.\",\"params\":{\"_token\":\"address of the token contract. Should be COMP or DAI token address.\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setMinFractionReceived(uint256)\":{\"details\":\"Updates the slippage parameter for the Uniswap operations. Only owner can call this method.\",\"params\":{\"_minFraction\":\"minimum percentage allowed to be received w.r.t. 1 ether (0.9 ether = 90%), slippage = 1 ether - minReceivedFraction.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"InterestReceiverSwapToETH\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/upgradeable_contracts/InterestReceiverSwapToETH.sol\":\"InterestReceiverSwapToETH\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":openzeppelin-solidity/=node_modules/openzeppelin-solidity/\"]},\"sources\":{\"contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"contracts/interfaces/IInterestReceiver.sol\":{\"keccak256\":\"0x113eab634a9484da04096dc9278e961d37f901a93a70984531a2c91e407a35c0\",\"urls\":[\"bzzr://f7b0ee3ce98af0b0129a93304fe8ee97572cab200a617c378bd05fa01b6dd306\"]},\"contracts/interfaces/IUniswapRouterV2.sol\":{\"keccak256\":\"0xea85e8ea6a886114c060905d0d2581cd9d8d8c5bbad3140cfdb5907442c960ea\",\"urls\":[\"bzzr://df93447c43306d4002b54f72137ebf5b0d8281d413b8ca13446c1318b580b22e\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"contracts/upgradeable_contracts/InterestReceiverBase.sol\":{\"keccak256\":\"0xe0d263c4d202b2fadaeb26d3c81682d58a7da0c756b3d46f984621f45cea9a52\",\"urls\":[\"bzzr://1f7d66139f8f8e40efc0e88224525e613b5eee496481c2c2b3aaacb232ddc9df\"]},\"contracts/upgradeable_contracts/InterestReceiverSwapToETH.sol\":{\"keccak256\":\"0x2e9222b68c8695f239db95208e6fc2509c1c3ea079517f130848dfa14cd9cf54\",\"urls\":[\"bzzr://541f7570c2117cd9b2b71face0a6b256036ae91a49f2dc1f200961a0905f9daf\"]},\"contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]},\"node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.4.24+commit.e67f0147"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wethToken",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniswapRouterV2",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minReceivedFraction",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "compToken",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onInterestReceived"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "daiToken",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_minFraction",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinFractionReceived"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipRenounced",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        }
      ],
      "devdoc": {
        "methods": {
          "claimTokens(address,address)": {
            "details": "Allows to transfer any locked token from this contract. Only owner can call this method.",
            "params": {
              "_to": "address that will receive the locked tokens on this contract.",
              "_token": "address of the token, if it is not provided (0x00..00), native coins will be transferred."
            }
          },
          "onInterestReceived(address)": {
            "details": "Callback function for notifying this contract about received interest.",
            "params": {
              "_token": "address of the token contract. Should be COMP or DAI token address."
            }
          },
          "renounceOwnership()": {
            "details": "Allows the current owner to relinquish control of the contract."
          },
          "setMinFractionReceived(uint256)": {
            "details": "Updates the slippage parameter for the Uniswap operations. Only owner can call this method.",
            "params": {
              "_minFraction": "minimum percentage allowed to be received w.r.t. 1 ether (0.9 ether = 90%), slippage = 1 ether - minReceivedFraction."
            }
          },
          "transferOwnership(address)": {
            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
            "params": {
              "_newOwner": "The address to transfer ownership to."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "renounceOwnership()": {
            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":openzeppelin-solidity/=node_modules/openzeppelin-solidity/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/upgradeable_contracts/InterestReceiverSwapToETH.sol": "InterestReceiverSwapToETH"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/ERC677.sol": {
        "keccak256": "0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca",
        "urls": [
          "bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b"
        ],
        "license": null
      },
      "contracts/interfaces/IInterestReceiver.sol": {
        "keccak256": "0x113eab634a9484da04096dc9278e961d37f901a93a70984531a2c91e407a35c0",
        "urls": [
          "bzzr://f7b0ee3ce98af0b0129a93304fe8ee97572cab200a617c378bd05fa01b6dd306"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapRouterV2.sol": {
        "keccak256": "0xea85e8ea6a886114c060905d0d2581cd9d8d8c5bbad3140cfdb5907442c960ea",
        "urls": [
          "bzzr://df93447c43306d4002b54f72137ebf5b0d8281d413b8ca13446c1318b580b22e"
        ],
        "license": null
      },
      "contracts/libraries/Address.sol": {
        "keccak256": "0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722",
        "urls": [
          "bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e"
        ],
        "license": null
      },
      "contracts/libraries/SafeERC20.sol": {
        "keccak256": "0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f",
        "urls": [
          "bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Claimable.sol": {
        "keccak256": "0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773",
        "urls": [
          "bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/InterestReceiverBase.sol": {
        "keccak256": "0xe0d263c4d202b2fadaeb26d3c81682d58a7da0c756b3d46f984621f45cea9a52",
        "urls": [
          "bzzr://1f7d66139f8f8e40efc0e88224525e613b5eee496481c2c2b3aaacb232ddc9df"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/InterestReceiverSwapToETH.sol": {
        "keccak256": "0x2e9222b68c8695f239db95208e6fc2509c1c3ea079517f130848dfa14cd9cf54",
        "urls": [
          "bzzr://541f7570c2117cd9b2b71face0a6b256036ae91a49f2dc1f200961a0905f9daf"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Sacrifice.sol": {
        "keccak256": "0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337",
        "urls": [
          "bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol": {
        "keccak256": "0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef",
        "urls": [
          "bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol": {
        "keccak256": "0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc",
        "urls": [
          "bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b",
        "urls": [
          "bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
        "keccak256": "0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419",
        "urls": [
          "bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/upgradeable_contracts/InterestReceiverSwapToETH.sol",
    "id": 11993,
    "exportedSymbols": {
      "InterestReceiverSwapToETH": [
        11992
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1314:93",
    "nodes": [
      {
        "id": 11914,
        "nodeType": "PragmaDirective",
        "src": "0:23:93",
        "nodes": [],
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ]
      },
      {
        "id": 11915,
        "nodeType": "ImportDirective",
        "src": "25:36:93",
        "nodes": [],
        "absolutePath": "contracts/upgradeable_contracts/InterestReceiverBase.sol",
        "file": "./InterestReceiverBase.sol",
        "scope": 11993,
        "sourceUnit": 11823,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11992,
        "nodeType": "ContractDefinition",
        "src": "374:939:93",
        "nodes": [
          {
            "id": 11987,
            "nodeType": "FunctionDefinition",
            "src": "627:508:93",
            "nodes": [],
            "body": {
              "id": 11986,
              "nodeType": "Block",
              "src": "680:455:93",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11925,
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 11987,
                      "src": "690:21:93",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "690:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 11924,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "690:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11931,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 11929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:1:93",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 11928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "714:13:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11926,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "718:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 11927,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "718:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 11930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:16:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "690:40:93"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 11932,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11925,
                        "src": "740:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 11934,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 11933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "745:1:93",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "740:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11935,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11919,
                      "src": "750:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "740:16:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11937,
                  "nodeType": "ExpressionStatement",
                  "src": "740:16:93"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 11938,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11925,
                        "src": "766:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 11940,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 11939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "771:1:93",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "766:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11941,
                      "name": "wethToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11752,
                      "src": "776:9:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$19552",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "766:19:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11943,
                  "nodeType": "ExpressionStatement",
                  "src": "766:19:93"
                },
                {
                  "assignments": [
                    11945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11945,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 11987,
                      "src": "795:14:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11944,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "795:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11954,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11951,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20237,
                            "src": "844:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InterestReceiverSwapToETH_$11992",
                              "typeString": "contract InterestReceiverSwapToETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InterestReceiverSwapToETH_$11992",
                              "typeString": "contract InterestReceiverSwapToETH"
                            }
                          ],
                          "id": 11950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "836:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "836:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11947,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11919,
                            "src": "818:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11946,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19552,
                          "src": "812:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$19552_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 11948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "812:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$19552",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 11949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19566,
                      "src": "812:23:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:38:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "795:55:93"
                },
                {
                  "assignments": [
                    11956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11956,
                      "name": "minAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 11987,
                      "src": "926:17:93",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "926:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11973,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 11957,
                              "name": "minReceivedFraction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11760,
                              "src": "947:19:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 11958,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11945,
                              "src": "969:6:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "947:28:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 11962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1008:7:93",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 11963,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11925,
                                  "src": "1017:4:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 11960,
                                  "name": "uniswapRouterV2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11757,
                                  "src": "978:15:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapRouterV2_$4467",
                                    "typeString": "contract IUniswapRouterV2"
                                  }
                                },
                                "id": 11961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getAmountsOut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4466,
                                "src": "978:29:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                                }
                              },
                              "id": 11964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "978:44:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 11966,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 11965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1023:1:93",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "978:47:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "947:78:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 11968,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "946:80:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                        "typeString": "int_const 1000...(29 digits omitted)...0000"
                      },
                      "id": 11971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 11969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1029:2:93",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3336",
                        "id": 11970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1033:2:93",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_36_by_1",
                          "typeString": "int_const 36"
                        },
                        "value": "36"
                      },
                      "src": "1029:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                        "typeString": "int_const 1000...(29 digits omitted)...0000"
                      }
                    },
                    "src": "946:89:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "926:109:93"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11977,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11945,
                        "src": "1084:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11978,
                        "name": "minAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11956,
                        "src": "1092:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11979,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11925,
                        "src": "1103:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11981,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20237,
                            "src": "1117:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InterestReceiverSwapToETH_$11992",
                              "typeString": "contract InterestReceiverSwapToETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InterestReceiverSwapToETH_$11992",
                              "typeString": "contract InterestReceiverSwapToETH"
                            }
                          ],
                          "id": 11980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1109:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1109:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11983,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19968,
                        "src": "1124:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11974,
                        "name": "uniswapRouterV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11757,
                        "src": "1046:15:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapRouterV2_$4467",
                          "typeString": "contract IUniswapRouterV2"
                        }
                      },
                      "id": 11976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4455,
                      "src": "1046:37:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 11984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:82:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 11985,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:82:93"
                }
              ]
            },
            "documentation": "@dev Callback function for notifying this contract about received interest.\n@param _token address of the token contract. Should be COMP or DAI token address.",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "onInterestReceived",
            "parameters": {
              "id": 11920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11919,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11987,
                  "src": "655:14:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "654:16:93"
            },
            "payable": false,
            "returnParameters": {
              "id": 11921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:93"
            },
            "scope": 11992,
            "stateMutability": "nonpayable",
            "superFunction": 4046,
            "visibility": "external"
          },
          {
            "id": 11991,
            "nodeType": "FunctionDefinition",
            "src": "1281:30:93",
            "nodes": [],
            "body": {
              "id": 11990,
              "nodeType": "Block",
              "src": "1309:2:93",
              "nodes": [],
              "statements": []
            },
            "documentation": "@dev Fallback function for receiving native coins from the Uniswap Router contract when using swapExactTokensForETH.",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "parameters": {
              "id": 11988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:2:93"
            },
            "payable": true,
            "returnParameters": {
              "id": 11989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:0:93"
            },
            "scope": 11992,
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11916,
              "name": "InterestReceiverBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11822,
              "src": "412:20:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InterestReceiverBase_$11822",
                "typeString": "contract InterestReceiverBase"
              }
            },
            "id": 11917,
            "nodeType": "InheritanceSpecifier",
            "src": "412:20:93"
          }
        ],
        "contractDependencies": [
          4047,
          10807,
          11822,
          19308
        ],
        "contractKind": "contract",
        "documentation": "@title InterestReceiverSwapToETH\n@dev This contract is intended to be used together with InterestConnector module of the erc-to-native bridge.\nContract receives DAI and COMP tokens. All received tokens are swapped to ETH and kept on this contract.\nLater, they can be withdrawn by the owner.",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11992,
          11822,
          10807,
          19308,
          4047
        ],
        "name": "InterestReceiverSwapToETH",
        "scope": 11993
      }
    ]
  },
  "id": 93
}