{
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "removeBridge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_sender",
          "type": "address"
        },
        {
          "name": "_recipient",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "bridgePointers",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isBridge",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokenInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_allowed",
          "type": "bool"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "addBridge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeList",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "move",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERMIT_TYPEHASH_LEGACY",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "F_ADDR",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "pull",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "expirations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_chainId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "BridgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "BridgeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x60806040526006805460a060020a60ff02191690553480156200002157600080fd5b506040516200264238038062002642833981016040908152815160208084015192840151606085015192850180519095949094019390929185918591859185918591859185918491849184916200007e916000918601906200031d565b508151620000949060019060208501906200031d565b506002805460ff90921660ff19909216919091179055505060068054600160a060020a03191633179055505050801515620000ce57600080fd5b60405180807f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081526020017f76657273696f6e2c75696e7432353620636861696e49642c616464726573732081526020017f766572696679696e67436f6e747261637429000000000000000000000000000081525060520190506040518091039020846040518082805190602001908083835b60208310620001825780518252601f19909201916020918201910162000161565b51815160209384036101000a600019018019909216911617905260408051929094018290038220828501855260018084527f3100000000000000000000000000000000000000000000000000000000000000928401928352945190965091945090928392508083835b602083106200020c5780518252601f199092019160209182019101620001eb565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208282019890985281840196909652606081019690965250608085018690523060a0808701919091528151808703909101815260c09095019081905284519093849350850191508083835b602083106200029e5780518252601f1990920191602091820191016200027d565b51815160209384036101000a600019018019909216911617905260405191909301819003902060085550600160a060020a036000819052600b9091527fbd0a91c9f9d084bad1a56f4df6c4c08bf6a3c9ff457e1c2f0ccbc02ffda9d3b18054600160a060020a031916909117905550620003c298505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036057805160ff191683800117855562000390565b8280016001018555821562000390579182015b828111156200039057825182559160200191906001019062000373565b506200039e929150620003a2565b5090565b620003bf91905b808211156200039e5760008155600101620003a9565b90565b61227080620003d26000396000f3006080604052600436106101f25760003560e01c63ffffffff16806304df017d146101f757806305d2035b1461021a57806306fdde0314610243578063095ea7b3146102cd5780630b26cf66146102f157806318160ddd1461031257806323b872dd1461033957806330adf81f14610363578063313ce567146103785780633644e515146103a357806339509351146103b85780634000aea0146103dc57806340c10f191461040d57806342966c68146104315780634bcb88bc1461044957806354fd4d5014610486578063661884631461049b57806369ffa08a146104bf57806370a08231146104e6578063715018a614610507578063726600ce1461051c5780637d64bcb41461053d5780637ecebe0014610552578063859ba28c146105735780638da5cb5b146105b45780638fcbaf0c146105c957806395d89b41146106075780639712fdf81461061c5780639da38e2f1461063d578063a457c2d7146106a2578063a9059cbb146106c6578063b753a98c146106ea578063bb35783b1461070e578063c6a1dedf14610738578063c794c7691461074d578063cd59658314610762578063d505accf14610777578063d73dd623146107b0578063dd62ed3e146107d4578063f2d5d56b146107fb578063f2fde38b1461081f578063fbb2a53f14610840578063ff9e884d14610855575b600080fd5b34801561020357600080fd5b50610218600160a060020a036004351661087c565b005b34801561022657600080fd5b5061022f6109e8565b604080519115158252519081900360200190f35b34801561024f57600080fd5b50610258610a09565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029257818101518382015260200161027a565b50505050905090810190601f1680156102bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d957600080fd5b5061022f600160a060020a0360043516602435610a97565b3480156102fd57600080fd5b50610218600160a060020a03600435166101f2565b34801561031e57600080fd5b50610327610aad565b60408051918252519081900360200190f35b34801561034557600080fd5b5061022f600160a060020a0360043581169060243516604435610ab3565b34801561036f57600080fd5b50610327610c7b565b34801561038457600080fd5b5061038d610c9f565b6040805160ff9092168252519081900360200190f35b3480156103af57600080fd5b50610327610ca8565b3480156103c457600080fd5b5061022f600160a060020a0360043516602435610cae565b3480156103e857600080fd5b5061022f60048035600160a060020a0316906024803591604435918201910135610cef565b34801561041957600080fd5b5061022f600160a060020a0360043516602435610e00565b34801561043d57600080fd5b50610218600435610f0b565b34801561045557600080fd5b5061046a600160a060020a0360043516610f18565b60408051600160a060020a039092168252519081900360200190f35b34801561049257600080fd5b50610258610f33565b3480156104a757600080fd5b5061022f600160a060020a0360043516602435610f6a565b3480156104cb57600080fd5b50610218600160a060020a0360043581169060243516611047565b3480156104f257600080fd5b50610327600160a060020a036004351661106c565b34801561051357600080fd5b50610218611087565b34801561052857600080fd5b5061022f600160a060020a036004351661109e565b34801561054957600080fd5b5061022f6110d8565b34801561055e57600080fd5b50610327600160a060020a03600435166110df565b34801561057f57600080fd5b506105886110f1565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b3480156105c057600080fd5b5061046a6110fc565b3480156105d557600080fd5b50610218600160a060020a0360043581169060243516604435606435608435151560ff60a4351660c43560e43561110b565b34801561061357600080fd5b50610258611249565b34801561062857600080fd5b50610218600160a060020a03600435166112a3565b34801561064957600080fd5b506106526113c3565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561068e578181015183820152602001610676565b505050509050019250505060405180910390f35b3480156106ae57600080fd5b5061022f600160a060020a0360043516602435611498565b3480156106d257600080fd5b5061022f600160a060020a03600435166024356114ab565b3480156106f657600080fd5b50610218600160a060020a03600435166024356114cd565b34801561071a57600080fd5b50610218600160a060020a03600435811690602435166044356114dd565b34801561074457600080fd5b506103276114ee565b34801561075957600080fd5b5061046a611512565b34801561076e57600080fd5b5061046a6110d8565b34801561078357600080fd5b50610218600160a060020a036004358116906024351660443560643560ff6084351660a43560c43561151d565b3480156107bc57600080fd5b5061022f600160a060020a03600435166024356115f9565b3480156107e057600080fd5b50610327600160a060020a0360043581169060243516611680565b34801561080757600080fd5b50610218600160a060020a03600435166024356116ab565b34801561082b57600080fd5b50610218600160a060020a03600435166116b6565b34801561084c57600080fd5b506103276116d6565b34801561086157600080fd5b50610327600160a060020a03600435811690602435166116dc565b60065460009081908190600160a060020a0316331461089a57600080fd5b6108a38461109e565b15156108ae57600080fd5b505050600160a060020a038082166000908152600b6020526040812054908290526000805160206121e583398151915254908216919081168015156108f257600080fd5b600160a060020a038181169085161461094d57600160a060020a038082166000908152600b602052604090205491925090811690811480159061093d5750600160a060020a03811615155b151561094857600080fd5b6108f2565b600160a060020a038083166000908152600b6020526040808220805484881673ffffffffffffffffffffffffffffffffffffffff19918216179091559287168252902080549091169055600c546109ab90600163ffffffff6116f916565b600c55604051600160a060020a038516907f5d9d5034656cb3ebfb0655057cd7f9b4077a9b42ff42ce223cbac5bc586d212690600090a250505050565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610a8f5780601f10610a6457610100808354040283529160200191610a8f565b820191906000526020600020905b815481529060010190602001808311610a7257829003601f168201915b505050505081565b6000610aa433848461170b565b50600192915050565b60045490565b600080600160a060020a0385161515610acb57600080fd5b600160a060020a0384161515610ae057600080fd5b600160a060020a038516600090815260036020526040902054610b09908463ffffffff6116f916565b600160a060020a038087166000908152600360205260408082209390935590861681522054610b3e908463ffffffff61174d16565b600160a060020a03808616600081815260036020908152604091829020949094558051878152905191939289169260008051602061220583398151915292918290030190a3600160a060020a0385163314610c6557610b9d8533611680565b90506000198114610c0757610bb8818463ffffffff6116f916565b600160a060020a038616600081815260056020908152604080832033808552908352928190208590558051948552519193600080516020612225833981519152929081900390910190a3610c65565b600160a060020a0385166000908152600a602090815260408083203384529091529020541580610c5a5750600160a060020a0385166000908152600a602090815260408083203384529091529020544211155b1515610c6557600080fd5b610c7085858561175a565b506001949350505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60025460ff1681565b60085481565b336000818152600560209081526040808320600160a060020a03871684529091528120549091610aa4918590610cea908663ffffffff61174d16565b61170b565b600084600160a060020a03811615801590610d135750600160a060020a0381163014155b1515610d1e57600080fd5b610d288686611791565b1515610d3357600080fd5b85600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16878787604051808481526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a3610da88661179d565b15610df457610de933878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437506117a5945050505050565b1515610df457600080fd5b50600195945050505050565b600654600090600160a060020a03163314610e1a57600080fd5b60065474010000000000000000000000000000000000000000900460ff1615610e4257600080fd5b600454610e55908363ffffffff61174d16565b600455600160a060020a038316600090815260036020526040902054610e81908363ffffffff61174d16565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000916000805160206122058339815191529181900360200190a350600192915050565b610f15338261191f565b50565b600b60205260009081526040902054600160a060020a031681565b60408051808201909152600181527f3100000000000000000000000000000000000000000000000000000000000000602082015281565b336000908152600560209081526040808320600160a060020a0386168452909152812054808310610fbe57336000908152600560209081526040808320600160a060020a0388168452909152812055610ff3565b610fce818463ffffffff6116f916565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a038916808552908352928190205481519081529051929392600080516020612225833981519152929181900390910190a35060019392505050565b600654600160a060020a0316331461105e57600080fd5b6110688282611a0e565b5050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a031633146101f257600080fd5b6000600160a060020a03828116148015906110d25750600160a060020a038281166000908152600b60205260409020541615155b92915050565b6000806000fd5b60096020526000908152604090205481565b600260056000909192565b600654600160a060020a031681565b60008086158061111b5750864211155b151561112657600080fd5b604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020820152600160a060020a03808d16828401528b166060820152608081018a905260a0810189905287151560c0808301919091528251808303909101815260e090910190915261119b90611a4c565b91506111a982868686611b53565b600160a060020a038b81169116146111c057600080fd5b600160a060020a038a16600090815260096020526040902080546001810190915588146111ec57600080fd5b856111f85760006111fc565b6000195b90508561120a57600061120c565b865b600160a060020a03808c166000908152600a60209081526040808320938e168352929052205561123d8a8a83611d59565b50505050505050505050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610a8f5780601f10610a6457610100808354040283529160200191610a8f565b600654600090600160a060020a031633146112bd57600080fd5b600c546032116112cc57600080fd5b6112d58261179d565b15156112e057600080fd5b6112e98261109e565b156112f357600080fd5b50600160a060020a036000819052600b6020526000805160206121e5833981519152541680151561132357600080fd5b600b6020526000805160206121e5833981519152805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038581169182179093556000908152604090208054909116918316919091179055600c5461138890600161174d565b600c55604051600160a060020a038316907f3cda433c5679ae4c6a5dea50840e222a42cba3695e4663de4366be899348422190600090a25050565b606080600080600c546040519080825280602002602001820160405280156113f5578160200160208202803883390190505b50600160a060020a036000818152600b6020526000805160206121e583398151915254929550935016905080151561142c57600080fd5b600160a060020a03818116146114905780838381518110151561144b57fe5b600160a060020a0392831660209182029092018101919091529181166000908152600b909252604090912054600192909201911680151561148b57600080fd5b61142c565b509092915050565b60006114a48383610f6a565b9392505050565b60006114b78383611791565b15156114c257600080fd5b610aa433848461175a565b6114d8338383610ab3565b505050565b6114e8838383610ab3565b50505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b600160a060020a0381565b6000804286101561152d57600080fd5b600160a060020a03808a1660008181526009602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c99281019290925281830193909352928b166060840152608083018a905260a0830182905260c08084018a90528151808503909101815260e0909301905292506115be90611a4c565b90506115cc81868686611b53565b600160a060020a038a81169116146115e357600080fd5b6115ee89898961170b565b505050505050505050565b336000908152600560209081526040808320600160a060020a038616845290915281205461162d908363ffffffff61174d16565b336000818152600560209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020612225833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b6114d8823383610ab3565b600654600160a060020a031633146116cd57600080fd5b610f1581611eb4565b600c5481565b600a60209081526000928352604080842090915290825290205481565b60008282111561170557fe5b50900390565b611716838383611d59565b6000198114156114d857600160a060020a038084166000908152600a60209081526040808320938616835292905290812055505050565b818101828110156110d257fe5b6117638261109e565b156114d857604080516000815260208101909152611786908490849084906117a5565b15156114d857600080fd5b60006114a48383611f32565b6000903b1190565b600083600160a060020a031663a4c0ed3660e01b8685856040516024018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561181a578181015183820152602001611802565b50505050905090810190601f1680156118475780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909916989098178852518151919790965086955093509150819050838360005b838110156118d55781810151838201526020016118bd565b50505050905090810190601f1680156119025780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1979650505050505050565b600160a060020a03821660009081526003602052604090205481111561194457600080fd5b600160a060020a03821660009081526003602052604090205461196d908263ffffffff6116f916565b600160a060020a038316600090815260036020526040902055600454611999908263ffffffff6116f916565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206122058339815191529181900360200190a35050565b80600160a060020a0381161515611a2457600080fd5b600160a060020a0383161515611a4257611a3d82612001565b6114d8565b6114d8838361200d565b6000600854826040518082805190602001908083835b60208310611a815780518252601f199092019160209182019101611a62565b51815160209384036101000a6000190180199092169116179052604080519290940182900382207f190100000000000000000000000000000000000000000000000000000000000083830152602283019790975260428083019790975283518083039097018752606290910192839052855192945084935085019190508083835b60208310611b215780518252601f199092019160209182019101611b02565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912095945050505050565b6000808460ff16601b1480611b6b57508460ff16601c145b1515611be7576040805160e560020a62461bcd02815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0600084901c1115611c89576040805160e560020a62461bcd02815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60408051600080825260208083018085528a905260ff8916838501526060830188905260808301879052925160019360a0808501949193601f19840193928390039091019190865af1158015611ce3573d6000803e3d6000fd5b5050604051601f190151915050600160a060020a0381161515611d50576040805160e560020a62461bcd02815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b600160a060020a0383161515611dde576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515611e64576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260056020908152604080832094871680845294825291829020859055815185815291516000805160206122258339815191529281900390910190a3505050565b600160a060020a0381161515611ec957600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b33600090815260036020526040812054821115611f4e57600080fd5b600160a060020a0383161515611f6357600080fd5b33600090815260036020526040902054611f83908363ffffffff6116f916565b3360009081526003602052604080822092909255600160a060020a03851681522054611fb5908363ffffffff61174d16565b600160a060020a0384166000818152600360209081526040918290209390935580518581529051919233926000805160206122058339815191529281900390910190a350600192915050565b303161106882826120ba565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561207257600080fd5b505af1158015612086573d6000803e3d6000fd5b505050506040513d602081101561209c57600080fd5b505190506114e8600160a060020a038516848363ffffffff61212216565b604051600160a060020a0383169082156108fc029083906000818181858888f1935050505015156110685780826120ef6121b4565b600160a060020a039091168152604051908190036020019082f08015801561211b573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e01b81526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561218257600080fd5b505af1158015612196573d6000803e3d6000fd5b505050503d156114d85760206000803e60005115156114d857600080fd5b6040516021806121c4833901905600608060405260405160208060218339810160405251600160a060020a038116ff00bd0a91c9f9d084bad1a56f4df6c4c08bf6a3c9ff457e1c2f0ccbc02ffda9d3b1ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a723058205c9f6fdf3c6b744c3ab0396ddee1fc5dbd8b59cc77f1ec01e06c3baab95234d30029",
    "sourceMap": "189:3227:2:-;;;436:35:139;;;-1:-1:-1;;;;;;436:35:139;;;561:237:2;5:2:-1;;;;30:1;27;20:12;5:2;561:237:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:12:136;;561:237:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:12:136;;:4;;:12;;;;:::i;:::-;-1:-1:-1;481:16:136;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:136;:20;;;;;;-1:-1:-1;;503:20:136;;;;;;;;;-1:-1:-1;;567:5:133;:18;;-1:-1:-1;;;;;;567:18:133;575:10;567:18;;;-1:-1:-1;;;1050:13:4;;;1042:22;;;;;;1144:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:5;1257:23;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1257:23:4;;;;;;;;;;;;1314:7;;;;;274:1:-1;1314:7:4;;;;;;;;;;1298:25;;1257:23;;-1:-1:-1;1257:23:4;;-1:-1:-1;1298:25:4;;;;-1:-1:-1;274:1;1298:25:4;1314:7;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1298:25:4;;;;;;;;;;;;1116:278;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1116:278:4;;;;;;1375:4;1116:278;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1116:278:4;;;;;;;;1093:311;;1116:278;;;;-1:-1:-1;1093:311:4;;;-1:-1:-1;1093:311:4;1116:278;1093:311;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1093:311:4;;;;;;;;;;;1074:16;:330;-1:-1:-1;;;;;;;729:22:2;;;:14;:22;;;;:31;;-1:-1:-1;;;;;;729:31:2;;;;;;-1:-1:-1;189:3227:2;;-1:-1:-1;;;;;;;;;189:3227:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:3227:2;;;-1:-1:-1;189:3227:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101f25760003560e01c63ffffffff16806304df017d146101f757806305d2035b1461021a57806306fdde0314610243578063095ea7b3146102cd5780630b26cf66146102f157806318160ddd1461031257806323b872dd1461033957806330adf81f14610363578063313ce567146103785780633644e515146103a357806339509351146103b85780634000aea0146103dc57806340c10f191461040d57806342966c68146104315780634bcb88bc1461044957806354fd4d5014610486578063661884631461049b57806369ffa08a146104bf57806370a08231146104e6578063715018a614610507578063726600ce1461051c5780637d64bcb41461053d5780637ecebe0014610552578063859ba28c146105735780638da5cb5b146105b45780638fcbaf0c146105c957806395d89b41146106075780639712fdf81461061c5780639da38e2f1461063d578063a457c2d7146106a2578063a9059cbb146106c6578063b753a98c146106ea578063bb35783b1461070e578063c6a1dedf14610738578063c794c7691461074d578063cd59658314610762578063d505accf14610777578063d73dd623146107b0578063dd62ed3e146107d4578063f2d5d56b146107fb578063f2fde38b1461081f578063fbb2a53f14610840578063ff9e884d14610855575b600080fd5b34801561020357600080fd5b50610218600160a060020a036004351661087c565b005b34801561022657600080fd5b5061022f6109e8565b604080519115158252519081900360200190f35b34801561024f57600080fd5b50610258610a09565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029257818101518382015260200161027a565b50505050905090810190601f1680156102bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d957600080fd5b5061022f600160a060020a0360043516602435610a97565b3480156102fd57600080fd5b50610218600160a060020a03600435166101f2565b34801561031e57600080fd5b50610327610aad565b60408051918252519081900360200190f35b34801561034557600080fd5b5061022f600160a060020a0360043581169060243516604435610ab3565b34801561036f57600080fd5b50610327610c7b565b34801561038457600080fd5b5061038d610c9f565b6040805160ff9092168252519081900360200190f35b3480156103af57600080fd5b50610327610ca8565b3480156103c457600080fd5b5061022f600160a060020a0360043516602435610cae565b3480156103e857600080fd5b5061022f60048035600160a060020a0316906024803591604435918201910135610cef565b34801561041957600080fd5b5061022f600160a060020a0360043516602435610e00565b34801561043d57600080fd5b50610218600435610f0b565b34801561045557600080fd5b5061046a600160a060020a0360043516610f18565b60408051600160a060020a039092168252519081900360200190f35b34801561049257600080fd5b50610258610f33565b3480156104a757600080fd5b5061022f600160a060020a0360043516602435610f6a565b3480156104cb57600080fd5b50610218600160a060020a0360043581169060243516611047565b3480156104f257600080fd5b50610327600160a060020a036004351661106c565b34801561051357600080fd5b50610218611087565b34801561052857600080fd5b5061022f600160a060020a036004351661109e565b34801561054957600080fd5b5061022f6110d8565b34801561055e57600080fd5b50610327600160a060020a03600435166110df565b34801561057f57600080fd5b506105886110f1565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b3480156105c057600080fd5b5061046a6110fc565b3480156105d557600080fd5b50610218600160a060020a0360043581169060243516604435606435608435151560ff60a4351660c43560e43561110b565b34801561061357600080fd5b50610258611249565b34801561062857600080fd5b50610218600160a060020a03600435166112a3565b34801561064957600080fd5b506106526113c3565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561068e578181015183820152602001610676565b505050509050019250505060405180910390f35b3480156106ae57600080fd5b5061022f600160a060020a0360043516602435611498565b3480156106d257600080fd5b5061022f600160a060020a03600435166024356114ab565b3480156106f657600080fd5b50610218600160a060020a03600435166024356114cd565b34801561071a57600080fd5b50610218600160a060020a03600435811690602435166044356114dd565b34801561074457600080fd5b506103276114ee565b34801561075957600080fd5b5061046a611512565b34801561076e57600080fd5b5061046a6110d8565b34801561078357600080fd5b50610218600160a060020a036004358116906024351660443560643560ff6084351660a43560c43561151d565b3480156107bc57600080fd5b5061022f600160a060020a03600435166024356115f9565b3480156107e057600080fd5b50610327600160a060020a0360043581169060243516611680565b34801561080757600080fd5b50610218600160a060020a03600435166024356116ab565b34801561082b57600080fd5b50610218600160a060020a03600435166116b6565b34801561084c57600080fd5b506103276116d6565b34801561086157600080fd5b50610327600160a060020a03600435811690602435166116dc565b60065460009081908190600160a060020a0316331461089a57600080fd5b6108a38461109e565b15156108ae57600080fd5b505050600160a060020a038082166000908152600b6020526040812054908290526000805160206121e583398151915254908216919081168015156108f257600080fd5b600160a060020a038181169085161461094d57600160a060020a038082166000908152600b602052604090205491925090811690811480159061093d5750600160a060020a03811615155b151561094857600080fd5b6108f2565b600160a060020a038083166000908152600b6020526040808220805484881673ffffffffffffffffffffffffffffffffffffffff19918216179091559287168252902080549091169055600c546109ab90600163ffffffff6116f916565b600c55604051600160a060020a038516907f5d9d5034656cb3ebfb0655057cd7f9b4077a9b42ff42ce223cbac5bc586d212690600090a250505050565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610a8f5780601f10610a6457610100808354040283529160200191610a8f565b820191906000526020600020905b815481529060010190602001808311610a7257829003601f168201915b505050505081565b6000610aa433848461170b565b50600192915050565b60045490565b600080600160a060020a0385161515610acb57600080fd5b600160a060020a0384161515610ae057600080fd5b600160a060020a038516600090815260036020526040902054610b09908463ffffffff6116f916565b600160a060020a038087166000908152600360205260408082209390935590861681522054610b3e908463ffffffff61174d16565b600160a060020a03808616600081815260036020908152604091829020949094558051878152905191939289169260008051602061220583398151915292918290030190a3600160a060020a0385163314610c6557610b9d8533611680565b90506000198114610c0757610bb8818463ffffffff6116f916565b600160a060020a038616600081815260056020908152604080832033808552908352928190208590558051948552519193600080516020612225833981519152929081900390910190a3610c65565b600160a060020a0385166000908152600a602090815260408083203384529091529020541580610c5a5750600160a060020a0385166000908152600a602090815260408083203384529091529020544211155b1515610c6557600080fd5b610c7085858561175a565b506001949350505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60025460ff1681565b60085481565b336000818152600560209081526040808320600160a060020a03871684529091528120549091610aa4918590610cea908663ffffffff61174d16565b61170b565b600084600160a060020a03811615801590610d135750600160a060020a0381163014155b1515610d1e57600080fd5b610d288686611791565b1515610d3357600080fd5b85600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16878787604051808481526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a3610da88661179d565b15610df457610de933878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437506117a5945050505050565b1515610df457600080fd5b50600195945050505050565b600654600090600160a060020a03163314610e1a57600080fd5b60065474010000000000000000000000000000000000000000900460ff1615610e4257600080fd5b600454610e55908363ffffffff61174d16565b600455600160a060020a038316600090815260036020526040902054610e81908363ffffffff61174d16565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000916000805160206122058339815191529181900360200190a350600192915050565b610f15338261191f565b50565b600b60205260009081526040902054600160a060020a031681565b60408051808201909152600181527f3100000000000000000000000000000000000000000000000000000000000000602082015281565b336000908152600560209081526040808320600160a060020a0386168452909152812054808310610fbe57336000908152600560209081526040808320600160a060020a0388168452909152812055610ff3565b610fce818463ffffffff6116f916565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a038916808552908352928190205481519081529051929392600080516020612225833981519152929181900390910190a35060019392505050565b600654600160a060020a0316331461105e57600080fd5b6110688282611a0e565b5050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a031633146101f257600080fd5b6000600160a060020a03828116148015906110d25750600160a060020a038281166000908152600b60205260409020541615155b92915050565b6000806000fd5b60096020526000908152604090205481565b600260056000909192565b600654600160a060020a031681565b60008086158061111b5750864211155b151561112657600080fd5b604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020820152600160a060020a03808d16828401528b166060820152608081018a905260a0810189905287151560c0808301919091528251808303909101815260e090910190915261119b90611a4c565b91506111a982868686611b53565b600160a060020a038b81169116146111c057600080fd5b600160a060020a038a16600090815260096020526040902080546001810190915588146111ec57600080fd5b856111f85760006111fc565b6000195b90508561120a57600061120c565b865b600160a060020a03808c166000908152600a60209081526040808320938e168352929052205561123d8a8a83611d59565b50505050505050505050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610a8f5780601f10610a6457610100808354040283529160200191610a8f565b600654600090600160a060020a031633146112bd57600080fd5b600c546032116112cc57600080fd5b6112d58261179d565b15156112e057600080fd5b6112e98261109e565b156112f357600080fd5b50600160a060020a036000819052600b6020526000805160206121e5833981519152541680151561132357600080fd5b600b6020526000805160206121e5833981519152805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038581169182179093556000908152604090208054909116918316919091179055600c5461138890600161174d565b600c55604051600160a060020a038316907f3cda433c5679ae4c6a5dea50840e222a42cba3695e4663de4366be899348422190600090a25050565b606080600080600c546040519080825280602002602001820160405280156113f5578160200160208202803883390190505b50600160a060020a036000818152600b6020526000805160206121e583398151915254929550935016905080151561142c57600080fd5b600160a060020a03818116146114905780838381518110151561144b57fe5b600160a060020a0392831660209182029092018101919091529181166000908152600b909252604090912054600192909201911680151561148b57600080fd5b61142c565b509092915050565b60006114a48383610f6a565b9392505050565b60006114b78383611791565b15156114c257600080fd5b610aa433848461175a565b6114d8338383610ab3565b505050565b6114e8838383610ab3565b50505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b600160a060020a0381565b6000804286101561152d57600080fd5b600160a060020a03808a1660008181526009602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c99281019290925281830193909352928b166060840152608083018a905260a0830182905260c08084018a90528151808503909101815260e0909301905292506115be90611a4c565b90506115cc81868686611b53565b600160a060020a038a81169116146115e357600080fd5b6115ee89898961170b565b505050505050505050565b336000908152600560209081526040808320600160a060020a038616845290915281205461162d908363ffffffff61174d16565b336000818152600560209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020612225833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b6114d8823383610ab3565b600654600160a060020a031633146116cd57600080fd5b610f1581611eb4565b600c5481565b600a60209081526000928352604080842090915290825290205481565b60008282111561170557fe5b50900390565b611716838383611d59565b6000198114156114d857600160a060020a038084166000908152600a60209081526040808320938616835292905290812055505050565b818101828110156110d257fe5b6117638261109e565b156114d857604080516000815260208101909152611786908490849084906117a5565b15156114d857600080fd5b60006114a48383611f32565b6000903b1190565b600083600160a060020a031663a4c0ed3660e01b8685856040516024018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561181a578181015183820152602001611802565b50505050905090810190601f1680156118475780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909916989098178852518151919790965086955093509150819050838360005b838110156118d55781810151838201526020016118bd565b50505050905090810190601f1680156119025780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1979650505050505050565b600160a060020a03821660009081526003602052604090205481111561194457600080fd5b600160a060020a03821660009081526003602052604090205461196d908263ffffffff6116f916565b600160a060020a038316600090815260036020526040902055600454611999908263ffffffff6116f916565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206122058339815191529181900360200190a35050565b80600160a060020a0381161515611a2457600080fd5b600160a060020a0383161515611a4257611a3d82612001565b6114d8565b6114d8838361200d565b6000600854826040518082805190602001908083835b60208310611a815780518252601f199092019160209182019101611a62565b51815160209384036101000a6000190180199092169116179052604080519290940182900382207f190100000000000000000000000000000000000000000000000000000000000083830152602283019790975260428083019790975283518083039097018752606290910192839052855192945084935085019190508083835b60208310611b215780518252601f199092019160209182019101611b02565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912095945050505050565b6000808460ff16601b1480611b6b57508460ff16601c145b1515611be7576040805160e560020a62461bcd02815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0600084901c1115611c89576040805160e560020a62461bcd02815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60408051600080825260208083018085528a905260ff8916838501526060830188905260808301879052925160019360a0808501949193601f19840193928390039091019190865af1158015611ce3573d6000803e3d6000fd5b5050604051601f190151915050600160a060020a0381161515611d50576040805160e560020a62461bcd02815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b600160a060020a0383161515611dde576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515611e64576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260056020908152604080832094871680845294825291829020859055815185815291516000805160206122258339815191529281900390910190a3505050565b600160a060020a0381161515611ec957600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b33600090815260036020526040812054821115611f4e57600080fd5b600160a060020a0383161515611f6357600080fd5b33600090815260036020526040902054611f83908363ffffffff6116f916565b3360009081526003602052604080822092909255600160a060020a03851681522054611fb5908363ffffffff61174d16565b600160a060020a0384166000818152600360209081526040918290209390935580518581529051919233926000805160206122058339815191529281900390910190a350600192915050565b303161106882826120ba565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561207257600080fd5b505af1158015612086573d6000803e3d6000fd5b505050506040513d602081101561209c57600080fd5b505190506114e8600160a060020a038516848363ffffffff61212216565b604051600160a060020a0383169082156108fc029083906000818181858888f1935050505015156110685780826120ef6121b4565b600160a060020a039091168152604051908190036020019082f08015801561211b573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e01b81526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561218257600080fd5b505af1158015612196573d6000803e3d6000fd5b505050503d156114d85760206000803e60005115156114d857600080fd5b6040516021806121c4833901905600608060405260405160208060218339810160405251600160a060020a038116ff00bd0a91c9f9d084bad1a56f4df6c4c08bf6a3c9ff457e1c2f0ccbc02ffda9d3b1ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a723058205c9f6fdf3c6b744c3ab0396ddee1fc5dbd8b59cc77f1ec01e06c3baab95234d30029",
    "sourceMap": "189:3227:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:609;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1834:609:2;-1:-1:-1;;;;;1834:609:2;;;;;;;436:35:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:139;;;;;;;;;;;;;;;;;;;;;;319:18:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3499:165:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3499:165:4;-1:-1:-1;;;;;3499:165:4;;;;;;;886:70:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;886:70:2;-1:-1:-1;;;;;886:70:2;;;;;389:83:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:134;;;;;;;;;;;;;;;;;;;;1925:1348:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1925:1348:4;-1:-1:-1;;;;;1925:1348:4;;;;;;;;;;;;634:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;634:108:4;;;;365:21:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:136;;;;;;;;;;;;;;;;;;;;;;;179:31:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;179:31:4;;;;3889:215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3889:215:4;-1:-1:-1;;;;;3889:215:4;;;;;;;1425:365:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1425:365:0;;;;-1:-1:-1;;;;;1425:365:0;;;;;;;;;;;;;;;;854:312:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;854:312:139;-1:-1:-1;;;;;854:312:139;;;;;;;353:73:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:135;;;;;376:49:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;376:49:2;-1:-1:-1;;;;;376:49:2;;;;;;;;;-1:-1:-1;;;;;376:49:2;;;;;;;;;;;;;;113:36:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;113:36:4;;;;3679:432:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:140;-1:-1:-1;;;;;3679:432:140;;;;;;;4178:110:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4178:110:0;-1:-1:-1;;;;;4178:110:0;;;;;;;;;;1149:99:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:134;-1:-1:-1;;;;;1149:99:134;;;;;3872:71:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3872:71:0;;;;3267:147:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3267:147:2;-1:-1:-1;;;;;3267:147:2;;;;;3794:72:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3794:72:0;;;;749:41:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;749:41:4;-1:-1:-1;;;;;749:41:4;;;;;1796:135:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1796:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:133;;;;6089:656:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6089:656:4;-1:-1:-1;;;;;6089:656:4;;;;;;;;;;;;;;;;;;;;;;;;;;341:20:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:136;;;;1246:460:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1246:460:2;-1:-1:-1;;;;;1246:460:2;;;;;2572:484;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2572:484:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2572:484:2;;;;;;;;;;;;;;;;;4453:163:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4453:163:0;-1:-1:-1;;;;;4453:163:0;;;;;;;2070:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2070:194:0;-1:-1:-1;;;;;2070:194:0;;;;;;;4252:106:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4252:106:4;-1:-1:-1;;;;;4252:106:4;;;;;;;4890:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4890:116:4;-1:-1:-1;;;;;4890:116:4;;;;;;;;;;;;367:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;367:115:4;;;;247:75:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:75:2;;;;1042:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1042:83:2;;;;7686:509:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7686:509:4;-1:-1:-1;;;;;7686:509:4;;;;;;;;;;;;;;;;;;;;;;2926:296:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:140;-1:-1:-1;;;;;2926:296:140;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:140;-1:-1:-1;;;;;2321:153:140;;;;;;;;;;4580:110:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4580:110:4;-1:-1:-1;;;;;4580:110:4;;;;;;;1274:103:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:133;-1:-1:-1;;;;;1274:103:133;;;;;431:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;431:26:2;;;;796:66:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;796:66:4;-1:-1:-1;;;;;796:66:4;;;;;;;;;;1834:609:2;719:5:133;;1939:18:2;;;;;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1910:17:2;1919:7;1910:8;:17::i;:::-;1902:26;;;;;;;;-1:-1:-1;;;;;;;;1960:23:2;;;;;;;:14;:23;;;;;;2040:21;;;;-1:-1:-1;;;;;;;;;;;2040:21:2;1960:23;;;;;2040:21;;2079:18;;;2071:27;;;;;;-1:-1:-1;;;;;2116:15:2;;;;;;;2109:163;;-1:-1:-1;;;;;2180:21:2;;;;;;;:14;:21;;;;;;2155:4;;-1:-1:-1;2180:21:2;;;;2224:14;;;;;:36;;-1:-1:-1;;;;;;2242:18:2;;;;2224:36;2216:45;;;;;;;;2109:163;;;-1:-1:-1;;;;;2282:21:2;;;;;;;:14;:21;;;;;;:34;;;;;-1:-1:-1;;2282:34:2;;;;;;;2333:23;;;;;;;2326:30;;;;;;;2380:11;;:18;;2282:34;2380:18;:15;:18;:::i;:::-;2366:11;:32;2414:22;;-1:-1:-1;;;;;2414:22:2;;;;;;;;1834:609;;;;:::o;436:35:139:-;;;;;;;;;:::o;319:18:136:-;;;;;;;;;;;;;;;-1:-1:-1;;319:18:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3499:165:4:-;3561:11;3584:52;3612:10;3624:3;3629:6;3584:27;:52::i;:::-;-1:-1:-1;3653:4:4;3499:165;;;;:::o;389:83:134:-;455:12;;389:83;:::o;1925:1348:4:-;2017:4;;-1:-1:-1;;;;;2041:21:4;;;;2033:30;;;;;;-1:-1:-1;;;;;2081:24:4;;;;2073:33;;;;;;-1:-1:-1;;;;;2137:17:4;;;;;;:8;:17;;;;;;:30;;2159:7;2137:30;:21;:30;:::i;:::-;-1:-1:-1;;;;;2117:17:4;;;;;;;:8;:17;;;;;;:50;;;;2200:20;;;;;;;:33;;2225:7;2200:33;:24;:33;:::i;:::-;-1:-1:-1;;;;;2177:20:4;;;;;;;:8;:20;;;;;;;;;:56;;;;2248:38;;;;;;;2177:20;;2248:38;;;;-1:-1:-1;;;;;;;;;;;2248:38:4;;;;;;;;-1:-1:-1;;;;;2301:21:4;;2312:10;2301:21;2297:891;;2362:30;2372:7;2381:10;2362:9;:30::i;:::-;2338:54;-1:-1:-1;;;2411:28:4;;2407:652;;2615:26;:13;2633:7;2615:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;2584:16:4;;;;;;:7;:16;;;;;;;;2601:10;2584:28;;;;;;;;;;:57;;;2664:59;;;;;;2601:10;;-1:-1:-1;;;;;;;;;;;2664:59:4;;;;;;;;;;2407:652;;;-1:-1:-1;;;;;2963:20:4;;;;;;:11;:20;;;;;;;;2984:10;2963:32;;;;;;;;:37;;:80;;-1:-1:-1;;;;;;3004:20:4;;;;;;:11;:20;;;;;;;;3025:10;3004:32;;;;;;;;3040:3;-1:-1:-1;3004:39:4;2963:80;2955:89;;;;;;;;3198:47;3216:7;3225:10;3237:7;3198:17;:47::i;:::-;-1:-1:-1;3262:4:4;;1925:1348;-1:-1:-1;;;;1925:1348:4:o;634:108::-;676:66;634:108;:::o;365:21:136:-;;;;;;:::o;179:31:4:-;;;;:::o;3889:215::-;4017:10;3966:11;4034:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4034:24:4;;;;;;;;;;3966:11;;3989:87;;4029:3;;4034:41;;4063:11;4034:41;:28;:41;:::i;:::-;3989:27;:87::i;1425:365:0:-;1530:4;1516:3;-1:-1:-1;;;;;1312:24:0;;;;;;:55;;-1:-1:-1;;;;;;1340:27:0;;1362:4;1340:27;;1312:55;1304:64;;;;;;;;1554:26;1568:3;1573:6;1554:13;:26::i;:::-;1546:35;;;;;;;;1617:3;-1:-1:-1;;;;;1596:40:0;1605:10;-1:-1:-1;;;;;1596:40:0;;1622:6;1630:5;;1596:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1596:40:0;;-1:-1:-1;;;;;1596:40:0;1651:28;1675:3;1651:23;:28::i;:::-;1647:116;;;1703:48;1720:10;1732:3;1737:6;1745:5;;1703:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1703:16:0;;-1:-1:-1;;;;;1703:48:0:i;:::-;1695:57;;;;;;;;-1:-1:-1;1779:4:0;;1425:365;-1:-1:-1;;;;;1425:365:0:o;854:312:139:-;600:5;;968:4;;-1:-1:-1;;;;;600:5:139;586:10;:19;578:28;;;;;;511:15;;;;;;;510:16;502:25;;;;;;997:12;;:25;;1014:7;997:25;:16;:25;:::i;:::-;982:12;:40;-1:-1:-1;;;;;1044:13:139;;;;;;:8;:13;;;;;;:26;;1062:7;1044:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;1028:13:139;;;;;;:8;:13;;;;;;;;;:42;;;;1081:18;;;;;;;1028:13;;1081:18;;;;;;;;;1110:34;;;;;;;;-1:-1:-1;;;;;1110:34:139;;;1127:1;;-1:-1:-1;;;;;;;;;;;1110:34:139;;;;;;;;-1:-1:-1;1157:4:139;854:312;;;;:::o;353:73:135:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;376:49:2:-;;;;;;;;;;;;-1:-1:-1;;;;;376:49:2;;:::o;113:36:4:-;;;;;;;;;;;;;;;;;;;:::o;3679:432:140:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:140;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:140;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:140;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:140;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;-1:-1:-1;;;;;;;;;;;4028:61:140;;;;;;;;;;-1:-1:-1;4102:4:140;;3679:432;-1:-1:-1;;;3679:432:140:o;4178:110:0:-;719:5:133;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;4257:24:0;4269:6;4277:3;4257:11;:24::i;:::-;4178:110;;:::o;1149:99:134:-;-1:-1:-1;;;;;1227:16:134;1205:7;1227:16;;;:8;:16;;;;;;;1149:99::o;3872:71:0:-;719:5:133;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;3267:147:2;3324:4;-1:-1:-1;;;;;3347:18:2;;;;;;;:60;;-1:-1:-1;;;;;;3369:24:2;;;3405:1;3369:24;;;:14;:24;;;;;;;:38;;3347:60;3340:67;3267:147;-1:-1:-1;;3267:147:2:o;3794:72:0:-;3835:4;3851:8;;;749:41:4;;;;;;;;;;;;;:::o;1796:135:0:-;1916:1;1919;1856:12;1796:135;;;:::o;238:20:133:-;;;-1:-1:-1;;;;;238:20:133;;:::o;6089:656:4:-;6361:14;;6319:12;;;:30;;;6342:7;6335:3;:14;;6319:30;6311:39;;;;;;;;6386:80;;;416:66;6386:80;;;;-1:-1:-1;;;;;6386:80:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;6386:80:4;;;;;;;6378:89;;:7;:89::i;:::-;6361:106;;6497:28;6506:6;6514:2;6518;6522;6497:8;:28::i;:::-;-1:-1:-1;;;;;6486:39:4;;;;;;6478:48;;;;;;-1:-1:-1;;;;;6554:15:4;;;;;;:6;:15;;;;;:17;;;;;;;;6544:27;;6536:36;;;;;;6600:8;:26;;6625:1;6600:26;;;-1:-1:-1;;6600:26:4;6583:43;;6670:8;:22;;6691:1;6670:22;;;6681:7;6670:22;-1:-1:-1;;;;;6637:20:4;;;;;;;:11;:20;;;;;;;;:30;;;;;;;;;:55;6703:35;6649:7;6658:8;6731:6;6703:8;:35::i;:::-;6089:656;;;;;;;;;;:::o;341:20:136:-;;;;;;;;;;;;;;;-1:-1:-1;;341:20:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:460:2;719:5:133;;1444:19:2;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1319:11:2;;368:2;-1:-1:-1;1311:34:2;;;;;;1363:32;1387:7;1363:23;:32::i;:::-;1355:41;;;;;;;;1415:17;1424:7;1415:8;:17::i;:::-;1414:18;1406:27;;;;;;-1:-1:-1;;;;;;1466:22:2;;;;:14;:22;;-1:-1:-1;;;;;;;;;;;1466:22:2;;1506:25;;;1498:34;;;;;;1542:14;:22;;-1:-1:-1;;;;;;;;;;;1542:32:2;;-1:-1:-1;;1542:32:2;;;-1:-1:-1;;;;;1542:32:2;;;;;;;;;-1:-1:-1;1584:23:2;;;1542:22;1584:23;;:37;;;;;;;;;;;;;;1645:11;;:18;;-1:-1:-1;1645:15:2;:18::i;:::-;1631:11;:32;1679:20;;-1:-1:-1;;;;;1679:20:2;;;;;;;;1246:460;;:::o;2572:484::-;2617:9;2638:21;2698:15;2727:18;2676:11;;2662:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2662:26:2;-1:-1:-1;;;;;;2716:1:2;2748:22;;;:14;:22;;-1:-1:-1;;;;;;;;;;;2748:22:2;2638:50;;-1:-1:-1;2716:1:2;-1:-1:-1;2748:22:2;;-1:-1:-1;2788:24:2;;;2780:33;;;;;;-1:-1:-1;;;;;2831:20:2;;;;2824:204;;2883:10;2867:4;2872:7;2867:13;;;;;;;;;;-1:-1:-1;;;;;2867:26:2;;;:13;;;;;;;;;:26;;;;2920;;;;;;;:14;:26;;;;;;;;;2960:9;;;;;2920:26;2992:24;;;2984:33;;;;;;2824:204;;;-1:-1:-1;3045:4:2;;2572:484;-1:-1:-1;;2572:484:2:o;4453:163:0:-;4538:4;4561:48;4584:7;4593:15;4561:22;:48::i;:::-;4554:55;4453:163;-1:-1:-1;;;4453:163:0:o;2070:194::-;2133:4;2157:26;2171:3;2176:6;2157:13;:26::i;:::-;2149:35;;;;;;;;2194:42;2212:10;2224:3;2229:6;2194:17;:42::i;4252:106:4:-;4313:38;4326:10;4338:3;4343:7;4313:12;:38::i;:::-;;4252:106;;:::o;4890:116::-;4966:33;4979:5;4986:3;4991:7;4966:12;:33::i;:::-;;4890:116;;;:::o;367:115::-;416:66;367:115;:::o;247:75:2:-;-1:-1:-1;;;;;247:75:2;:::o;7686:509:4:-;7923:13;;7895:3;:16;-1:-1:-1;7895:16:4;7887:25;;;;;;-1:-1:-1;;;;;7939:15:4;;;;;;;:6;:15;;;;;;;;;:17;;;;;;;;7991:72;;676:66;7991:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;7991:72:4;;;;;;7939:17;-1:-1:-1;7983:81:4;;:7;:81::i;:::-;7966:98;;8094:28;8103:6;8111:2;8115;8119;8094:8;:28::i;:::-;-1:-1:-1;;;;;8083:39:4;;;;;;8075:48;;;;;;8134:54;8162:7;8171:8;8181:6;8134:27;:54::i;:::-;7686:509;;;;;;;;;:::o;2926:296:140:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:140;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:140;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;-1:-1:-1;;;;;;;;;;;3139:61:140;;;;;;;;;;-1:-1:-1;3213:4:140;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:140;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;4580:110:4:-;4643:40;4656:5;4663:10;4675:7;4643:12;:40::i;1274:103:133:-;719:5;;-1:-1:-1;;;;;719:5:133;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;431:26:2:-;;;;:::o;796:66:4:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1060:116:132:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:132;;;1060:116::o;8508:372:4:-;8615:35;8624:6;8632:8;8642:7;8615:8;:35::i;:::-;-1:-1:-1;;8789:7:4;:22;8785:89;;;-1:-1:-1;;;;;8834:19:4;;;;;;;:11;:19;;;;;;;;:29;;;;;;;;;;;8827:36;8508:372;;;:::o;1238:128:132:-;1319:7;;;1339;;;;1332:15;;;2971:199:0;3065:13;3074:3;3065:8;:13::i;:::-;3061:103;;;3139:12;;;3149:1;3139:12;;;;;;;;3102:50;;3119:5;;3126:3;;3131:6;;3102:16;:50::i;:::-;3094:59;;;;;;;1937:127;2007:4;2030:27;2045:3;2050:6;2030:14;:27::i;438:578:131:-;496:4;971:18;;1003:8;;438:578::o;3585:203:0:-;3685:4;3708:3;-1:-1:-1;;;;;3708:8:0;677:10;3740:17;;3759:5;3766:6;3774:5;3717:63;;;;;;-1:-1:-1;;;;;3717:63:0;-1:-1:-1;;;;;3717:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3717:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3717:63:0;;;-1:-1:-1;;26:21;;;22:32;6:49;;3717:63:0;;;49:4:-1;25:18;;61:17;;3717:63:0;182:15:-1;3717:63:0;;;;179:29:-1;;;;160:49;;3708:73:0;;;3717:63;;3708:73;;-1:-1:-1;3708:73:0;;-1:-1:-1;25:18;-1:-1;3708:73:0;-1:-1:-1;3708:73:0;;-1:-1:-1;3708:73:0;25:18:-1;-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3708:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3585:203;-1:-1:-1;;;;;;;3585:203:0:o;430:438:135:-;-1:-1:-1;;;;;508:14:135;;;;;;:8;:14;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:135;;;;;;:8;:14;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:135;;;;;;:8;:14;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:135;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:135;;;-1:-1:-1;;;;;;;;;;;829:34:135;;;;;;;;430:438;;:::o;892:225:81:-;964:3;-1:-1:-1;;;;;455:17:81;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:81;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;9604:182:4:-;9671:7;9736:16;;9764:12;9754:23;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;9754:23:4;;;;;;;;;;;;9707:71;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9707:71:4;;;;;;;;9697:82;;9707:71;;-1:-1:-1;9707:71:4;;-1:-1:-1;9697:82:4;;;;-1:-1:-1;9697:82:4;9707:71;9697:82;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;9697:82:4;;;;;;;;;;;;-1:-1:-1;;;;;9604:182:4:o;10156:506::-;10248:7;10517:14;10275:2;:8;;10281:2;10275:8;:20;;;;10287:2;:8;;10293:2;10287:8;10275:20;10267:67;;;;;;;-1:-1:-1;;;;;10267:67:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10380:66;10365:11;;;;:81;;10344:162;;;;;-1:-1:-1;;;;;10344:162:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10534:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10534:30:4;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;10534:30:4;;-1:-1:-1;;10534:30:4;;;-1:-1:-1;;;;;;;10582:20:4;;;;10574:57;;;;;-1:-1:-1;;;;;10574:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;10649:6;10156:506;-1:-1:-1;;;;;10156:506:4:o;9124:339::-;-1:-1:-1;;;;;9220:20:4;;;;9212:69;;;;;-1:-1:-1;;;;;9212:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9299:22:4;;;;9291:69;;;;;-1:-1:-1;;;;;9291:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9371:15:4;;;;;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;:35;;;9421;;;;;;;-1:-1:-1;;;;;;;;;;;9421:35:4;;;;;;;;;9124:339;;;:::o;1512:171:133:-;-1:-1:-1;;;;;1582:23:133;;;;1574:32;;;;;;1638:5;;1617:38;;-1:-1:-1;;;;;1617:38:133;;;;1638:5;;1617:38;;1638:5;;1617:38;1661:5;:17;;-1:-1:-1;;1661:17:133;-1:-1:-1;;;;;1661:17:133;;;;;;;;;;1512:171::o;626:321:134:-;728:10;689:4;719:20;;;:8;:20;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:134;;;;746:26;;;;;;811:10;802:20;;;;:8;:20;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;856:13:134;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:134;;;;;;:8;:13;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;-1:-1:-1;;;;;;;;;;;892:33:134;;;;;;;;;-1:-1:-1;938:4:134;626:321;;;;:::o;1270:145:81:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:81;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:81;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:81;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:81;;-1:-1:-1;1826:33:81;-1:-1:-1;;;;;1826:19:81;;1846:3;1795:21;1826:33;:19;:33;:::i;431:177:36:-;513:22;;-1:-1:-1;;;;;513:14:36;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:36;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;431:177:36;;:::o;579:339:40:-;677:6;-1:-1:-1;;;;;665:28:40;;694:3;699:6;665:41;;;;;;;;;;;;;-1:-1:-1;;;;;665:41:40;-1:-1:-1;;;;;665:41:40;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:41:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:41:40;;;;742:14;739:2;;;796;793:1;790;775:24;832:1;826:8;819:16;816:2;;;868:1;865;858:12;189:3227:2;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "F_ADDR()": "c794c769",
    "PERMIT_TYPEHASH()": "30adf81f",
    "PERMIT_TYPEHASH_LEGACY()": "c6a1dedf",
    "addBridge(address)": "9712fdf8",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "bridgeContract()": "cd596583",
    "bridgeCount()": "fbb2a53f",
    "bridgeList()": "9da38e2f",
    "bridgePointers(address)": "4bcb88bc",
    "burn(uint256)": "42966c68",
    "claimTokens(address,address)": "69ffa08a",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "decreaseApproval(address,uint256)": "66188463",
    "expirations(address,address)": "ff9e884d",
    "finishMinting()": "7d64bcb4",
    "getTokenInterfacesVersion()": "859ba28c",
    "increaseAllowance(address,uint256)": "39509351",
    "increaseApproval(address,uint256)": "d73dd623",
    "isBridge(address)": "726600ce",
    "mint(address,uint256)": "40c10f19",
    "mintingFinished()": "05d2035b",
    "move(address,address,uint256)": "bb35783b",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "pull(address,uint256)": "f2d5d56b",
    "push(address,uint256)": "b753a98c",
    "removeBridge(address)": "04df017d",
    "renounceOwnership()": "715018a6",
    "setBridgeContract(address)": "0b26cf66",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAndCall(address,uint256,bytes)": "4000aea0",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"removeBridge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"setBridgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"bridgePointers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isBridge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_allowed\",\"type\":\"bool\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"addBridge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH_LEGACY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"F_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_deadline\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"expirations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_chainId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"BridgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"BridgeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addBridge(address)\":{\"details\":\"Adds one more bridge contract into the list\",\"params\":{\"_bridge\":\"bridge contract address\"}},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\",\"params\":{\"_to\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"bridgeContract()\":{\"details\":\"Removes unused getter from ERC677BridgeToken contract\"},\"bridgeList()\":{\"details\":\"Returns all recorded bridge contract addresses\",\"return\":\"address[] bridge contract addresses\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"_value\":\"The amount of token to be burned.\"}},\"claimTokens(address,address)\":{\"details\":\"Withdraws the erc20 tokens or native coins from this contract.\",\"params\":{\"_to\":\"address of the tokens/coins receiver.\",\"_token\":\"address of the claimed token or address(0) for native coins.\"}},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to spender by the caller.\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_to\":\"The address which will spend the funds.\"}},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"isBridge(address)\":{\"details\":\"Checks if given address is included into bridge contracts list\",\"params\":{\"_address\":\"bridge contract address\"},\"return\":\"bool true, if given address is a known bridge contract \"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address that will receive the minted tokens.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"move(address,address,uint256)\":{\"details\":\"An alias for `transferFrom` function.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_from\":\"The address of the sender.\",\"_to\":\"The address of the recipient.\"}},\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"details\":\"Allows to spend holder's unlimited amount by the specified spender. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.\",\"params\":{\"_allowed\":\"True to enable unlimited allowance for the spender by the holder. False to disable.\",\"_expiry\":\"The allowance expiration date (unix timestamp in UTC). Can be zero for no expiration. Forced to zero if `_allowed` is `false`. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.\",\"_holder\":\"The holder's address.\",\"_nonce\":\"The nonce taken from `nonces(_holder)` public getter.\",\"_r\":\"The first 32 bytes of signature (ECDSA component).\",\"_s\":\"The second 32 bytes of signature (ECDSA component).\",\"_spender\":\"The spender's address.\",\"_v\":\"A final byte of signature (ECDSA component).\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Allows to spend holder's unlimited amount by the specified spender according to EIP2612. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.\",\"params\":{\"_deadline\":\"The deadline timestamp to call the permit function. Must be a timestamp in the future. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.\",\"_holder\":\"The holder's address.\",\"_r\":\"The first 32 bytes of signature (ECDSA component).\",\"_s\":\"The second 32 bytes of signature (ECDSA component).\",\"_spender\":\"The spender's address.\",\"_v\":\"A final byte of signature (ECDSA component).\",\"_value\":\"Allowance value to set as a result of the call.\"}},\"pull(address,uint256)\":{\"details\":\"Makes a request to transfer the specified amount from the specified address to the caller's address.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_from\":\"The address of the holder.\"}},\"push(address,uint256)\":{\"details\":\"An alias for `transfer` function.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_to\":\"The address of the recipient.\"}},\"removeBridge(address)\":{\"details\":\"Removes one existing bridge contract from the list\",\"params\":{\"_bridge\":\"bridge contract address\"}},\"setBridgeContract(address)\":{\"details\":\"Removes unused function from ERC677BridgeToken contract\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferFrom(address,address,uint256)\":{\"details\":\"transferFrom in this contract works in a slightly different form than the generic transferFrom function. This contract allows for \\\"unlimited approval\\\". Should the user approve an address for the maximum uint256 value, then that address will have unlimited approval until told otherwise.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_recipient\":\"The address of the recipient.\",\"_sender\":\"The address of the sender.\"},\"return\":\"Success status.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"ERC677MultiBridgeToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC677MultiBridgeToken.sol\":\"ERC677MultiBridgeToken\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":openzeppelin-solidity/=node_modules/openzeppelin-solidity/\"]},\"sources\":{\"contracts/ERC677BridgeToken.sol\":{\"keccak256\":\"0x11987c2ebe23844839189769c931daa2a5a1b700b13c8a04b27683af76c1d4e8\",\"urls\":[\"bzzr://be4606ad97386a5d8a705e29a13d8327d71d959d7c4ba441b2a7989d42d720a2\"]},\"contracts/ERC677MultiBridgeToken.sol\":{\"keccak256\":\"0x815b1a19ba7fe0b95985e4da74f3227d1cc45441e88fd7a0ecd2154c97fa52e2\",\"urls\":[\"bzzr://a5a6ba4133c30dae81448db566e67aa3db6448cd0a39cc5d0ec75bdb9af8a908\"]},\"contracts/PermittableToken.sol\":{\"keccak256\":\"0x8d122019560adb054d612b0bd1d7dbe99ac10a9f10ff9623f197423ba63141f2\",\"urls\":[\"bzzr://daa86fc077b397bdf654ff7a0870e8029d8cd85c5f35ccd34a46bec1e7932760\"]},\"contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"contracts/interfaces/IBurnableMintableERC677Token.sol\":{\"keccak256\":\"0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1\",\"urls\":[\"bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]},\"node_modules/openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol\":{\"keccak256\":\"0x778b4d37fcf8c94acb52b3cf086f3a4ebc5da2b38672590294a371391cd44648\",\"urls\":[\"bzzr://826669d1888f24b726bbbd09cbd83f21461f1148d0291b27d2259d73ae641044\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\":{\"keccak256\":\"0xa9927296145433fad9195e7ce0388d6f07cfeb6c1c45df07f1c800f4196dd272\",\"urls\":[\"bzzr://59df43cea2bdda3527bc27aa56ea1838ead92e1e6ebc8254034b619d6b97003e\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\":{\"keccak256\":\"0x08394b7d7e6327085c15e8b7652cc9f4f9ddf3a9c614d9c8c3a3cff04fb781bf\",\"urls\":[\"bzzr://a0d8fca9e3eb8900f618afce5012ba48c4c664ebb6bf8ac7536367120c43fde7\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.4.24+commit.e67f0147"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_bridge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeBridge"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mintingFinished",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": null,
              "name": "result",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBridgeContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PERMIT_TYPEHASH",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": null,
              "name": "result",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bridgePointers",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseApproval",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimTokens"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBridge",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finishMinting",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTokenInterfacesVersion",
          "outputs": [
            {
              "internalType": null,
              "name": "major",
              "type": "uint64"
            },
            {
              "internalType": null,
              "name": "minor",
              "type": "uint64"
            },
            {
              "internalType": null,
              "name": "patch",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_holder",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_nonce",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "_expiry",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "_allowed",
              "type": "bool"
            },
            {
              "internalType": null,
              "name": "_v",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "_r",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "_s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_bridge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addBridge"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bridgeList",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "push"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "move"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PERMIT_TYPEHASH_LEGACY",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "F_ADDR",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bridgeContract",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_holder",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "_v",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "_r",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "_s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseApproval",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pull"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bridgeCount",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "expirations",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": null,
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": null,
              "name": "_decimals",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "_chainId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "bridge",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BridgeAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "bridge",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BridgeRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MintFinished",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipRenounced",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "burner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        }
      ],
      "devdoc": {
        "methods": {
          "addBridge(address)": {
            "details": "Adds one more bridge contract into the list",
            "params": {
              "_bridge": "bridge contract address"
            }
          },
          "allowance(address,address)": {
            "details": "Function to check the amount of tokens that an owner allowed to a spender.",
            "params": {
              "_owner": "address The address which owns the funds.",
              "_spender": "address The address which will spend the funds."
            },
            "return": "A uint256 specifying the amount of tokens still available for the spender."
          },
          "approve(address,uint256)": {
            "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
            "params": {
              "_to": "The address which will spend the funds.",
              "_value": "The amount of tokens to be spent."
            }
          },
          "balanceOf(address)": {
            "details": "Gets the balance of the specified address.",
            "params": {
              "_owner": "The address to query the the balance of."
            },
            "return": "An uint256 representing the amount owned by the passed address."
          },
          "bridgeContract()": {
            "details": "Removes unused getter from ERC677BridgeToken contract"
          },
          "bridgeList()": {
            "details": "Returns all recorded bridge contract addresses",
            "return": "address[] bridge contract addresses"
          },
          "burn(uint256)": {
            "details": "Burns a specific amount of tokens.",
            "params": {
              "_value": "The amount of token to be burned."
            }
          },
          "claimTokens(address,address)": {
            "details": "Withdraws the erc20 tokens or native coins from this contract.",
            "params": {
              "_to": "address of the tokens/coins receiver.",
              "_token": "address of the claimed token or address(0) for native coins."
            }
          },
          "decreaseApproval(address,uint256)": {
            "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
            "params": {
              "_spender": "The address which will spend the funds.",
              "_subtractedValue": "The amount of tokens to decrease the allowance by."
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to spender by the caller.",
            "params": {
              "_addedValue": "The amount of tokens to increase the allowance by.",
              "_to": "The address which will spend the funds."
            }
          },
          "increaseApproval(address,uint256)": {
            "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
            "params": {
              "_addedValue": "The amount of tokens to increase the allowance by.",
              "_spender": "The address which will spend the funds."
            }
          },
          "isBridge(address)": {
            "details": "Checks if given address is included into bridge contracts list",
            "params": {
              "_address": "bridge contract address"
            },
            "return": "bool true, if given address is a known bridge contract "
          },
          "mint(address,uint256)": {
            "details": "Function to mint tokens",
            "params": {
              "_amount": "The amount of tokens to mint.",
              "_to": "The address that will receive the minted tokens."
            },
            "return": "A boolean that indicates if the operation was successful."
          },
          "move(address,address,uint256)": {
            "details": "An alias for `transferFrom` function.",
            "params": {
              "_amount": "The value to transfer.",
              "_from": "The address of the sender.",
              "_to": "The address of the recipient."
            }
          },
          "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
            "details": "Allows to spend holder's unlimited amount by the specified spender. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.",
            "params": {
              "_allowed": "True to enable unlimited allowance for the spender by the holder. False to disable.",
              "_expiry": "The allowance expiration date (unix timestamp in UTC). Can be zero for no expiration. Forced to zero if `_allowed` is `false`. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.",
              "_holder": "The holder's address.",
              "_nonce": "The nonce taken from `nonces(_holder)` public getter.",
              "_r": "The first 32 bytes of signature (ECDSA component).",
              "_s": "The second 32 bytes of signature (ECDSA component).",
              "_spender": "The spender's address.",
              "_v": "A final byte of signature (ECDSA component)."
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Allows to spend holder's unlimited amount by the specified spender according to EIP2612. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.",
            "params": {
              "_deadline": "The deadline timestamp to call the permit function. Must be a timestamp in the future. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.",
              "_holder": "The holder's address.",
              "_r": "The first 32 bytes of signature (ECDSA component).",
              "_s": "The second 32 bytes of signature (ECDSA component).",
              "_spender": "The spender's address.",
              "_v": "A final byte of signature (ECDSA component).",
              "_value": "Allowance value to set as a result of the call."
            }
          },
          "pull(address,uint256)": {
            "details": "Makes a request to transfer the specified amount from the specified address to the caller's address.",
            "params": {
              "_amount": "The value to transfer.",
              "_from": "The address of the holder."
            }
          },
          "push(address,uint256)": {
            "details": "An alias for `transfer` function.",
            "params": {
              "_amount": "The value to transfer.",
              "_to": "The address of the recipient."
            }
          },
          "removeBridge(address)": {
            "details": "Removes one existing bridge contract from the list",
            "params": {
              "_bridge": "bridge contract address"
            }
          },
          "setBridgeContract(address)": {
            "details": "Removes unused function from ERC677BridgeToken contract"
          },
          "totalSupply()": {
            "details": "Total number of tokens in existence"
          },
          "transferFrom(address,address,uint256)": {
            "details": "transferFrom in this contract works in a slightly different form than the generic transferFrom function. This contract allows for \"unlimited approval\". Should the user approve an address for the maximum uint256 value, then that address will have unlimited approval until told otherwise.",
            "params": {
              "_amount": "The value to transfer.",
              "_recipient": "The address of the recipient.",
              "_sender": "The address of the sender."
            },
            "return": "Success status."
          },
          "transferOwnership(address)": {
            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
            "params": {
              "_newOwner": "The address to transfer ownership to."
            }
          }
        }
      },
      "userdoc": {
        "methods": {}
      }
    },
    "settings": {
      "remappings": [
        ":openzeppelin-solidity/=node_modules/openzeppelin-solidity/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/ERC677MultiBridgeToken.sol": "ERC677MultiBridgeToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ERC677BridgeToken.sol": {
        "keccak256": "0x11987c2ebe23844839189769c931daa2a5a1b700b13c8a04b27683af76c1d4e8",
        "urls": [
          "bzzr://be4606ad97386a5d8a705e29a13d8327d71d959d7c4ba441b2a7989d42d720a2"
        ],
        "license": null
      },
      "contracts/ERC677MultiBridgeToken.sol": {
        "keccak256": "0x815b1a19ba7fe0b95985e4da74f3227d1cc45441e88fd7a0ecd2154c97fa52e2",
        "urls": [
          "bzzr://a5a6ba4133c30dae81448db566e67aa3db6448cd0a39cc5d0ec75bdb9af8a908"
        ],
        "license": null
      },
      "contracts/PermittableToken.sol": {
        "keccak256": "0x8d122019560adb054d612b0bd1d7dbe99ac10a9f10ff9623f197423ba63141f2",
        "urls": [
          "bzzr://daa86fc077b397bdf654ff7a0870e8029d8cd85c5f35ccd34a46bec1e7932760"
        ],
        "license": null
      },
      "contracts/interfaces/ERC677.sol": {
        "keccak256": "0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca",
        "urls": [
          "bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b"
        ],
        "license": null
      },
      "contracts/interfaces/IBurnableMintableERC677Token.sol": {
        "keccak256": "0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1",
        "urls": [
          "bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef"
        ],
        "license": null
      },
      "contracts/libraries/Address.sol": {
        "keccak256": "0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722",
        "urls": [
          "bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e"
        ],
        "license": null
      },
      "contracts/libraries/SafeERC20.sol": {
        "keccak256": "0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f",
        "urls": [
          "bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Claimable.sol": {
        "keccak256": "0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773",
        "urls": [
          "bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Sacrifice.sol": {
        "keccak256": "0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337",
        "urls": [
          "bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol": {
        "keccak256": "0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56",
        "urls": [
          "bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol": {
        "keccak256": "0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef",
        "urls": [
          "bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol": {
        "keccak256": "0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc",
        "urls": [
          "bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol": {
        "keccak256": "0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1",
        "urls": [
          "bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol": {
        "keccak256": "0x778b4d37fcf8c94acb52b3cf086f3a4ebc5da2b38672590294a371391cd44648",
        "urls": [
          "bzzr://826669d1888f24b726bbbd09cbd83f21461f1148d0291b27d2259d73ae641044"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol": {
        "keccak256": "0xa9927296145433fad9195e7ce0388d6f07cfeb6c1c45df07f1c800f4196dd272",
        "urls": [
          "bzzr://59df43cea2bdda3527bc27aa56ea1838ead92e1e6ebc8254034b619d6b97003e"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b",
        "urls": [
          "bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
        "keccak256": "0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419",
        "urls": [
          "bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol": {
        "keccak256": "0x08394b7d7e6327085c15e8b7652cc9f4f9ddf3a9c614d9c8c3a3cff04fb781bf",
        "urls": [
          "bzzr://a0d8fca9e3eb8900f618afce5012ba48c4c664ebb6bf8ac7536367120c43fde7"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol": {
        "keccak256": "0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98",
        "urls": [
          "bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/ERC677MultiBridgeToken.sol",
    "id": 895,
    "exportedSymbols": {
      "ERC677MultiBridgeToken": [
        894
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:3417:2",
    "nodes": [
      {
        "id": 591,
        "nodeType": "PragmaDirective",
        "src": "0:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ]
      },
      {
        "id": 592,
        "nodeType": "ImportDirective",
        "src": "25:32:2",
        "nodes": [],
        "absolutePath": "contracts/PermittableToken.sol",
        "file": "./PermittableToken.sol",
        "scope": 895,
        "sourceUnit": 1550,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 894,
        "nodeType": "ContractDefinition",
        "src": "189:3227:2",
        "nodes": [
          {
            "id": 597,
            "nodeType": "VariableDeclaration",
            "src": "247:75:2",
            "nodes": [],
            "constant": true,
            "name": "F_ADDR",
            "scope": 894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 595,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307846466646664666664646666666464666464666464646464666664646466666666646664646466646",
              "id": 596,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "280:42:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
            },
            "visibility": "public"
          },
          {
            "id": 600,
            "nodeType": "VariableDeclaration",
            "src": "328:42:2",
            "nodes": [],
            "constant": true,
            "name": "MAX_BRIDGES",
            "scope": 894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 598,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "328:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 599,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "368:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "internal"
          },
          {
            "id": 604,
            "nodeType": "VariableDeclaration",
            "src": "376:49:2",
            "nodes": [],
            "constant": false,
            "name": "bridgePointers",
            "scope": 894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 603,
              "keyType": {
                "id": 601,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "384:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "376:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 602,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "395:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 606,
            "nodeType": "VariableDeclaration",
            "src": "431:26:2",
            "nodes": [],
            "constant": false,
            "name": "bridgeCount",
            "scope": 894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 605,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "431:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 610,
            "nodeType": "EventDefinition",
            "src": "464:42:2",
            "nodes": [],
            "anonymous": false,
            "documentation": null,
            "name": "BridgeAdded",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "indexed": true,
                  "name": "bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "482:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:24:2"
            }
          },
          {
            "id": 614,
            "nodeType": "EventDefinition",
            "src": "511:44:2",
            "nodes": [],
            "anonymous": false,
            "documentation": null,
            "name": "BridgeRemoved",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "indexed": true,
                  "name": "bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "531:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "530:24:2"
            }
          },
          {
            "id": 638,
            "nodeType": "FunctionDefinition",
            "src": "561:237:2",
            "nodes": [],
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "719:79:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 631,
                        "name": "bridgePointers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "729:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 633,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "F_ADDR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "744:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "729:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "F_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "754:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "729:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "729:31:2"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 625,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 616,
                    "src": "678:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 626,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 618,
                    "src": "685:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 627,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 620,
                    "src": "694:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 628,
                    "name": "_chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 622,
                    "src": "705:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 629,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 624,
                  "name": "PermittableToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1549,
                  "src": "661:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PermittableToken_$1549_$",
                    "typeString": "type(contract PermittableToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "661:53:2"
              }
            ],
            "name": "",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "573:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "587:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 620,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "603:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 622,
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "620:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "572:65:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:2"
            },
            "scope": 894,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 647,
            "nodeType": "FunctionDefinition",
            "src": "886:70:2",
            "nodes": [],
            "body": {
              "id": 646,
              "nodeType": "Block",
              "src": "931:25:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 643,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19971,
                        19972
                      ],
                      "referencedDeclaration": 19971,
                      "src": "941:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "941:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "941:8:2"
                }
              ]
            },
            "documentation": "@dev Removes unused function from ERC677BridgeToken contract",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setBridgeContract",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "913:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "912:9:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "931:0:2"
            },
            "scope": 894,
            "stateMutability": "nonpayable",
            "superFunction": 64,
            "visibility": "external"
          },
          {
            "id": 656,
            "nodeType": "FunctionDefinition",
            "src": "1042:83:2",
            "nodes": [],
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "1100:25:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 652,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19971,
                        19972
                      ],
                      "referencedDeclaration": 19971,
                      "src": "1110:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:8:2"
                }
              ]
            },
            "documentation": "@dev Removes unused getter from ERC677BridgeToken contract",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "bridgeContract",
            "parameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1065:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "1091:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1090:9:2"
            },
            "scope": 894,
            "stateMutability": "view",
            "superFunction": 45,
            "visibility": "external"
          },
          {
            "id": 721,
            "nodeType": "FunctionDefinition",
            "src": "1246:460:2",
            "nodes": [],
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "1301:405:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 664,
                          "name": "bridgeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "1319:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 665,
                          "name": "MAX_BRIDGES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 600,
                          "src": "1333:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1319:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "1311:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 672,
                            "name": "_bridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "1387:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 670,
                            "name": "AddressUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19128,
                            "src": "1363:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AddressUtils_$19128_$",
                              "typeString": "type(library AddressUtils)"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19127,
                          "src": "1363:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1363:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "1355:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1414:18:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 678,
                              "name": "_bridge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 658,
                              "src": "1424:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 677,
                            "name": "isBridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              893
                            ],
                            "referencedDeclaration": 893,
                            "src": "1415:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1415:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "1406:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:27:2"
                },
                {
                  "assignments": [
                    684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 684,
                      "name": "firstBridge",
                      "nodeType": "VariableDeclaration",
                      "scope": 721,
                      "src": "1444:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 683,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1444:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 688,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 685,
                      "name": "bridgePointers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "1466:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 687,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 686,
                      "name": "F_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "1481:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1466:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1444:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 690,
                          "name": "firstBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 684,
                          "src": "1506:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1529:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1521:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1521:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1506:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "1498:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1498:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "1498:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "bridgePointers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "1542:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 699,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 698,
                        "name": "F_ADDR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "1557:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1542:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 700,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "1567:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1542:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 703,
                        "name": "bridgePointers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "1584:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 705,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 704,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "1599:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1584:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 706,
                      "name": "firstBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "1610:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 709,
                      "name": "bridgeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "1631:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 710,
                          "name": "bridgeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "1645:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19221,
                        "src": "1645:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1645:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1631:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:32:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 717,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "1691:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 716,
                      "name": "BridgeAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "1679:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1679:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 719,
                  "nodeType": "EmitStatement",
                  "src": "1674:25:2"
                }
              ]
            },
            "documentation": "@dev Adds one more bridge contract into the list\n@param _bridge bridge contract address",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 661,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 660,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19256,
                  "src": "1291:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1291:9:2"
              }
            ],
            "name": "addBridge",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1265:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1264:17:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:2"
            },
            "scope": 894,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 808,
            "nodeType": "FunctionDefinition",
            "src": "1834:609:2",
            "nodes": [],
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "1892:551:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 730,
                            "name": "_bridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "1919:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 729,
                          "name": "isBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            893
                          ],
                          "referencedDeclaration": 893,
                          "src": "1910:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1910:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "1902:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:26:2"
                },
                {
                  "assignments": [
                    735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 735,
                      "name": "nextBridge",
                      "nodeType": "VariableDeclaration",
                      "scope": 808,
                      "src": "1939:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 734,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1939:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 739,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 736,
                      "name": "bridgePointers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "1960:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 738,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 737,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "1975:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1960:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1939:44:2"
                },
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 808,
                      "src": "1993:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1993:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 743,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 742,
                    "name": "F_ADDR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 597,
                    "src": "2009:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1993:22:2"
                },
                {
                  "assignments": [
                    745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 745,
                      "name": "next",
                      "nodeType": "VariableDeclaration",
                      "scope": 808,
                      "src": "2025:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 744,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2025:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 749,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 746,
                      "name": "bridgePointers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "2040:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 748,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 747,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "2055:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2040:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2025:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 751,
                          "name": "next",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "2079:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2095:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2087:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2087:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2079:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "2071:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:27:2"
                },
                {
                  "body": {
                    "id": 783,
                    "nodeType": "Block",
                    "src": "2133:139:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 761,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "2147:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 762,
                            "name": "next",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "2155:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2147:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 764,
                        "nodeType": "ExpressionStatement",
                        "src": "2147:12:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 765,
                            "name": "next",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "2173:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 766,
                              "name": "bridgePointers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "2180:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 768,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 767,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "2195:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2180:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2173:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 770,
                        "nodeType": "ExpressionStatement",
                        "src": "2173:28:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 772,
                                  "name": "next",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 745,
                                  "src": "2224:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 773,
                                  "name": "F_ADDR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "2232:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2224:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 775,
                                  "name": "next",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 745,
                                  "src": "2242:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 777,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2258:1:2",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2250:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2250:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2242:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2224:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 771,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19969,
                              19970
                            ],
                            "referencedDeclaration": 19969,
                            "src": "2216:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2216:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 782,
                        "nodeType": "ExpressionStatement",
                        "src": "2216:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 758,
                      "name": "next",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "2116:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 759,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "2124:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2116:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 784,
                  "nodeType": "WhileStatement",
                  "src": "2109:163:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 785,
                        "name": "bridgePointers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "2282:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 787,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 786,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "2297:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2282:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 788,
                      "name": "nextBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "2306:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2282:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2326:30:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 791,
                        "name": "bridgePointers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "2333:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 793,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 792,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "2348:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2333:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 796,
                      "name": "bridgeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "2366:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2396:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 797,
                          "name": "bridgeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "2380:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19197,
                        "src": "2380:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2380:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2366:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:32:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 804,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "2428:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 803,
                      "name": "BridgeRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "2414:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2414:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "EmitStatement",
                  "src": "2409:27:2"
                }
              ]
            },
            "documentation": "@dev Removes one existing bridge contract from the list\n@param _bridge bridge contract address",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 726,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 725,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19256,
                  "src": "1882:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1882:9:2"
              }
            ],
            "name": "removeBridge",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "name": "_bridge",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "1856:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1855:17:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1892:0:2"
            },
            "scope": 894,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 873,
            "nodeType": "FunctionDefinition",
            "src": "2572:484:2",
            "nodes": [],
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "2628:428:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 817,
                      "name": "list",
                      "nodeType": "VariableDeclaration",
                      "scope": 873,
                      "src": "2638:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2638:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 816,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2638:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 823,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 821,
                        "name": "bridgeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "2676:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2662:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 818,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2666:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 819,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2666:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2662:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2638:50:2"
                },
                {
                  "assignments": [
                    825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 825,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 873,
                      "src": "2698:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 824,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2698:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 827,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2716:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2698:19:2"
                },
                {
                  "assignments": [
                    829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 829,
                      "name": "nextBridge",
                      "nodeType": "VariableDeclaration",
                      "scope": 873,
                      "src": "2727:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 828,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2727:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 833,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 830,
                      "name": "bridgePointers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "2748:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 832,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 831,
                      "name": "F_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "2763:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2748:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2727:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 835,
                          "name": "nextBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 829,
                          "src": "2788:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2810:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2802:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2802:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2788:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "2780:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2780:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "2780:33:2"
                },
                {
                  "body": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "2853:175:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 845,
                              "name": "list",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "2867:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 847,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 846,
                              "name": "counter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "2872:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2867:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 848,
                            "name": "nextBridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "2883:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2867:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 850,
                        "nodeType": "ExpressionStatement",
                        "src": "2867:26:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 851,
                            "name": "nextBridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "2907:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 852,
                              "name": "bridgePointers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "2920:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 854,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 853,
                              "name": "nextBridge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 829,
                              "src": "2935:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2920:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2907:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 856,
                        "nodeType": "ExpressionStatement",
                        "src": "2907:39:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2960:9:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 857,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "2960:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 859,
                        "nodeType": "ExpressionStatement",
                        "src": "2960:9:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 861,
                                "name": "nextBridge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 829,
                                "src": "2992:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 863,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3014:1:2",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 862,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3006:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3006:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2992:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 860,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              19969,
                              19970
                            ],
                            "referencedDeclaration": 19969,
                            "src": "2984:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "2984:33:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 842,
                      "name": "nextBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "2831:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 843,
                      "name": "F_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "2845:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2831:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 869,
                  "nodeType": "WhileStatement",
                  "src": "2824:204:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 870,
                    "name": "list",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 817,
                    "src": "3045:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 813,
                  "id": 871,
                  "nodeType": "Return",
                  "src": "3038:11:2"
                }
              ]
            },
            "documentation": "@dev Returns all recorded bridge contract addresses\n@return address[] bridge contract addresses",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "bridgeList",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "2617:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 810,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2617:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 811,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2617:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2616:11:2"
            },
            "scope": 894,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 893,
            "nodeType": "FunctionDefinition",
            "src": "3267:147:2",
            "nodes": [],
            "body": {
              "id": 892,
              "nodeType": "Block",
              "src": "3330:84:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 880,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "3347:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 881,
                        "name": "F_ADDR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "3359:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3347:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 883,
                          "name": "bridgePointers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "3369:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 885,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 884,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 875,
                          "src": "3384:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3369:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3405:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3397:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3397:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3369:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3347:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 879,
                  "id": 891,
                  "nodeType": "Return",
                  "src": "3340:67:2"
                }
              ]
            },
            "documentation": "@dev Checks if given address is included into bridge contracts list\n@param _address bridge contract address\n@return bool true, if given address is a known bridge contract ",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isBridge",
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "3285:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3285:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3284:18:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "3324:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3323:6:2"
            },
            "scope": 894,
            "stateMutability": "view",
            "superFunction": 257,
            "visibility": "public"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 593,
              "name": "PermittableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1549,
              "src": "224:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermittableToken_$1549",
                "typeString": "contract PermittableToken"
              }
            },
            "id": 594,
            "nodeType": "InheritanceSpecifier",
            "src": "224:16:2"
          }
        ],
        "contractDependencies": [
          348,
          1549,
          3705,
          3934,
          10807,
          19308,
          19404,
          19475,
          19509,
          19552,
          19584,
          19690,
          19937
        ],
        "contractKind": "contract",
        "documentation": "@title ERC677MultiBridgeToken\n@dev This contract extends ERC677BridgeToken to support several bridge simulteniously",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          894,
          1549,
          348,
          10807,
          19690,
          19308,
          19937,
          19475,
          19404,
          19509,
          3934,
          3705,
          19552,
          19584
        ],
        "name": "ERC677MultiBridgeToken",
        "scope": 895
      }
    ]
  },
  "id": 2
}