{
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "relayTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "fixFailedMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc677token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalSpentPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setExecutionDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeMode",
      "outputs": [
        {
          "name": "_data",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionDailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mediatorBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "totalExecutedPerDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "fixMediatorBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "messageFixed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dailyLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_mediatorContract",
          "type": "address"
        }
      ],
      "name": "setMediatorContractOnOtherSide",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mediatorContractOnOtherSide",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinExecutionLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "executionMaxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "handleBridgedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAvailablePerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_messageId",
          "type": "bytes32"
        }
      ],
      "name": "requestFailedMessageFix",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBridgeInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "outOfLimitAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMinPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "name": "unlockOnOtherSide",
          "type": "bool"
        },
        {
          "name": "valueToUnlock",
          "type": "uint256"
        }
      ],
      "name": "fixAssetsAboveLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setDailyLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestGasLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        },
        {
          "name": "_mediatorContract",
          "type": "address"
        },
        {
          "name": "_erc677token",
          "type": "address"
        },
        {
          "name": "_dailyLimitMaxPerTxMinPerTxArray",
          "type": "uint256[3]"
        },
        {
          "name": "_executionDailyLimitExecutionMaxPerTxArray",
          "type": "uint256[2]"
        },
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        },
        {
          "name": "_decimalShift",
          "type": "int256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimalShift",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withinLimit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxPerTx",
          "type": "uint256"
        }
      ],
      "name": "setExecutionMaxPerTx",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestGasLimit",
          "type": "uint256"
        }
      ],
      "name": "setRequestGasLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPerTx",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedMessageFixed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "TokensBridgingInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "TokensBridged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "DailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "ExecutionDailyLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MediatorAmountLimitExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "AmountLimitExceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "name": "AssetAboveLimitsFixed",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50613496806100206000396000f3006080604052600436106101dc5760003560e01c63ffffffff16806301e4f53a146101e15780630950d515146102075780630b26cf661461021f57806318d8f9c9146102405780632bd0bb0514610271578063392e53cd1461029b5780633dd95d1b146102c45780633e6968b6146102dc578063437764df146102f157806343b37dd31461033b5780634b94f815146103505780634fb3fef71461036557806358bf7c791461037d578063593399821461039e57806367eeba0c146103b657806369ffa08a146103cb5780636e5d6bea146103f2578063871c076014610413578063879ce676146104285780638aa1949a146104405780638b6c0354146104555780638da5cb5b1461047957806395e54a171461048e5780639a4a4395146104a35780639cb7595a146104bb578063a0189345146104fc578063a2a6ca2714610511578063a4c0ed3614610529578063a7444c0d1461055a578063b20d30a91461057a578063be3b625b14610592578063c0b0d022146105a7578063c6f6f2161461063c578063cd59658314610654578063dae5f0fd14610669578063df25f3f01461067e578063ea9f496814610693578063f20151e1146106ab578063f2fde38b146106c3578063f3b83791146106e4578063f968adbe146106fc575b600080fd5b3480156101ed57600080fd5b50610205600160a060020a0360043516602435610711565b005b34801561021357600080fd5b506102056004356107c7565b34801561022b57600080fd5b50610205600160a060020a0360043516610896565b34801561024c57600080fd5b506102556108be565b60408051600160a060020a039092168252519081900360200190f35b34801561027d57600080fd5b506102896004356108cd565b60408051918252519081900360200190f35b3480156102a757600080fd5b506102b061098a565b604080519115158252519081900360200190f35b3480156102d057600080fd5b506102056004356109db565b3480156102e857600080fd5b50610289610a9b565b3480156102fd57600080fd5b50610306610aa4565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b34801561034757600080fd5b50610289610ac8565b34801561035c57600080fd5b50610289610b16565b34801561037157600080fd5b50610289600435610b63565b34801561038957600080fd5b50610205600160a060020a0360043516610bde565b3480156103aa57600080fd5b506102b0600435610d7c565b3480156103c257600080fd5b50610289610e45565b3480156103d757600080fd5b50610205600160a060020a0360043581169060243516610e93565b3480156103fe57600080fd5b50610205600160a060020a0360043516610f3c565b34801561041f57600080fd5b50610255610f61565b34801561043457600080fd5b506102b0600435610fb8565b34801561044c57600080fd5b50610289611002565b34801561046157600080fd5b50610205600160a060020a0360043516602435611050565b34801561048557600080fd5b506102556110d0565b34801561049a57600080fd5b50610289611127565b3480156104af57600080fd5b50610205600435611181565b3480156104c757600080fd5b506104d06114c6565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561050857600080fd5b506102896114d1565b34801561051d57600080fd5b5061020560043561151f565b34801561053557600080fd5b506102b060048035600160a060020a03169060248035916044359182019101356115bb565b34801561056657600080fd5b506102056004356024351515604435611658565b34801561058657600080fd5b506102056004356117b0565b34801561059e57600080fd5b50610289611870565b3480156105b357600080fd5b506040805160608181019092526102b091600160a060020a03600480358216936024358316936044359093169236929160c49160649060039083908390808284375050604080518082018252949796958181019594509250600291508390839080828437509396505083359450505060208201359160400135600160a060020a031690506118be565b34801561064857600080fd5b50610205600435611a87565b34801561066057600080fd5b50610255611b1f565b34801561067557600080fd5b50610289611b76565b34801561068a57600080fd5b50610289611bc4565b34801561069f57600080fd5b506102b0600435611c12565b3480156106b757600080fd5b50610205600435611c5d565b3480156106cf57600080fd5b50610205600160a060020a0360043516611cd9565b3480156106f057600080fd5b50610205600435611cfe565b34801561070857600080fd5b50610289611d23565b600061071b611d71565b1561072557600080fd5b61072d6108be565b905061073882611c12565b151561074357600080fd5b61075461074e610a9b565b83611d96565b61075e6001611e5f565b610778600160a060020a038216338463ffffffff611e8316565b6107826000611e5f565b6107c2813384866040516020018082600160a060020a0316600160a060020a031660601b8152601401915050604051602081830303815290604052611f26565b505050565b6000806107d2611b1f565b600160a060020a031633146107e657600080fd5b6107ee610f61565b600160a060020a03166107ff611f5d565b600160a060020a03161461081257600080fd5b61081b83610d7c565b1561082557600080fd5b61082e83611fd2565b9150610839836120a1565b905061084483612124565b61084e82826121f6565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b61089e6110d0565b600160a060020a031633146108b257600080fd5b6108bb81612228565b50565b60006108c86122b3565b905090565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106109495780518252601f19909201916020918201910161092a565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b6109e36110d0565b600160a060020a031633146109f757600080fd5b6109ff611002565b811180610a0a575080155b1515610a1557600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f76595b560000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac95490565b60008060008360405160200180807f746f74616c457865637574656450657244617900000000000000000000000000815250601301828152602001915050604051602081830303815290604052604051808280519060200190808383602083106109495780518252601f19909201916020918201910161092a565b60008060008030600160a060020a0316636fde82026040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b505050506040513d6020811015610c4957600080fd5b5051600160a060020a03163314610c5f57600080fd5b84600160a060020a0381161515610c7557600080fd5b610c7d6122b3565b600160a060020a03166370a08231306040518263ffffffff1660e01b81526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b505050506040513d6020811015610cfe57600080fd5b50519450610d0a610b16565b9350838511610d1857600080fd5b8385039250610d25611127565b915060008211610d3457600080fd5b81831115610d40578192505b610d51610d4b610a9b565b84611d96565b610d69610d64858563ffffffff61230a16565b61231d565b610d74868785612369565b505050505050565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610e015780518252601f199092019160209182019101610de2565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b30600160a060020a0316636fde82026040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610ece57600080fd5b505af1158015610ee2573d6000803e3d6000fd5b505050506040513d6020811015610ef857600080fd5b5051600160a060020a03163314610f0e57600080fd5b610f166122b3565b600160a060020a0383811691161415610f2e57600080fd5b610f38828261254d565b5050565b610f446110d0565b600160a060020a03163314610f5857600080fd5b6108bb8161258b565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b600080610fdb83610fcf610fca610a9b565b610b63565b9063ffffffff61230a16565b905080610fe6610ac8565b10158015610ffb5750610ff7611002565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b611058611b1f565b600160a060020a0316331461106c57600080fd5b611074610f61565b600160a060020a0316611085611f5d565b600160a060020a03161461109857600080fd5b6110a181610fb8565b156110c6576110b76110b1610a9b565b82612602565b6110c18282612688565b610f38565b610f388282612702565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b6000806000806000611137611d23565b9350611141610e45565b925061115361114e610a9b565b6108cd565b9150818311611163576000611167565b8183035b90508084106111765780611178565b835b94505050505090565b6000606061118d611b1f565b600160a060020a031663cb08a10c846040518263ffffffff1660e01b8152600401808260001916600019168152602001915050602060405180830381600087803b1580156111da57600080fd5b505af11580156111ee573d6000803e3d6000fd5b505050506040513d602081101561120457600080fd5b50511561121057600080fd5b30611219611b1f565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e01b8152600401808260001916600019168152602001915050602060405180830381600087803b15801561126657600080fd5b505af115801561127a573d6000803e3d6000fd5b505050506040513d602081101561129057600080fd5b5051600160a060020a0316146112a557600080fd5b6112ad610f61565b600160a060020a03166112be611b1f565b600160a060020a0316634a610b04856040518263ffffffff1660e01b8152600401808260001916600019168152602001915050602060405180830381600087803b15801561130b57600080fd5b505af115801561131f573d6000803e3d6000fd5b505050506040513d602081101561133557600080fd5b5051600160a060020a03161461134a57600080fd5b50506040805160248082018490528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0950d51500000000000000000000000000000000000000000000000000000000908117909152906113be611b1f565b600160a060020a031663dc8601b36113d4610f61565b836113dd611870565b6040518463ffffffff1660e01b81526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561144757818101518382015260200161142f565b50505050905090810190601f1680156114745780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561149557600080fd5b505af11580156114a9573d6000803e3d6000fd5b505050506040513d60208110156114bf57600080fd5b5050505050565b600160046000909192565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f5490565b6115276110d0565b600160a060020a0316331461153b57600080fd5b600081118015611551575061154e610e45565b81105b80156115635750611560611d23565b81105b151561156e57600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b6000806115c66108be565b905033600160a060020a038216146115dd57600080fd5b6115e5611d71565b1515611610576115f485611c12565b15156115ff57600080fd5b61161061160a610a9b565b86611d96565b61164c81878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611f26945050505050565b50600195945050505050565b600080600030600160a060020a0316636fde82026040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561169857600080fd5b505af11580156116ac573d6000803e3d6000fd5b505050506040513d60208110156116c257600080fd5b5051600160a060020a031633146116d857600080fd5b6116e1866127a3565b9093509150600160a060020a038316158015906116fe5750600082115b801561170a5750838210155b151561171557600080fd5b611735611730856117246114d1565b9063ffffffff61292a16565b61293c565b611745828563ffffffff61292a16565b90506117518187612989565b6040805185815260208101839052815188927f5bcec6564fe8d2cbb4e4eb8237510ceb6b291a5c2ee2e429948d25e9c924c1fa928290030190a28415610d7457611799611d23565b8411156117a557600080fd5b610d74838486612369565b6117b86110d0565b600160a060020a031633146117cc57600080fd5b6117d4611d23565b8111806117df575080155b15156117ea57600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561193f578181015183820152602001611927565b50505050905090810190601f16801561196c5780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af191505015806119fb575030600160a060020a0316636fde82026040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156119c357600080fd5b505af11580156119d7573d6000803e3d6000fd5b505050506040513d60208110156119ed57600080fd5b5051600160a060020a031633145b80611a0557503330145b1515611a1057600080fd5b611a1861098a565b15611a2257600080fd5b611a2b89612228565b611a348861258b565b611a3d87612a0b565b611a4686612a96565b611a4f85612bf3565b611a5884612cc8565b611a6183612d29565b611a6a82612d92565b611a72612e69565b611a7a61098a565b9998505050505050505050565b611a8f6110d0565b600160a060020a03163314611aa357600080fd5b801580611ac75750611ab3611bc4565b81118015611ac75750611ac4610e45565b81105b1515611ad257600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611c2483610fcf61114e610a9b565b905080611c2f610e45565b10158015611c445750611c40611d23565b8311155b8015610ffb5750611c53611bc4565b9092101592915050565b611c656110d0565b600160a060020a03163314611c7957600080fd5b611c81610ac8565b8110611c8c57600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611ce16110d0565b600160a060020a03163314611cf557600080fd5b6108bb81612d92565b611d066110d0565b600160a060020a03163314611d1a57600080fd5b6108bb81612cc8565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e925490565b611da381610fcf846108cd565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611e1d5780518252601f199092019160209182019101611dfe565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9255565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038481166004830152306024830152604482018490529151918516916323b872dd9160648082019260009290919082900301818387803b158015611ef457600080fd5b505af1158015611f08573d6000803e3d6000fd5b505050503d156107c25760206000803e60005115156107c257600080fd5b611f2e611d71565b1515611f5757611f43610d6483610fcf610b16565b611f5783611f518584612ec0565b84612369565b50505050565b6000611f67611b1f565b600160a060020a031663d67bdd256040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fa157600080fd5b505af1158015611fb5573d6000803e3d6000fd5b505050506040513d6020811015611fcb57600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120575780518252601f199092019160209182019101612038565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c018260001916600019168152602001915050604051602081830303815290604052604051808280519060200190808383602083106109495780518252601f19909201916020918201910161092a565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106121a95780518252601f19909201916020918201910161218a565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b612205610d6482611724610b16565b610f3882826122126108be565b600160a060020a0316919063ffffffff612f1a16565b61223181612f7a565b151561223c57600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b8181018281101561231757fe5b92915050565b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac955565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8b6c0354000000000000000000000000000000000000000000000000000000009081179091529060006123ec611b1f565b600160a060020a031663dc8601b3612402610f61565b8461240b611870565b6040518463ffffffff1660e01b81526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561247557818101518382015260200161245d565b50505050905090810190601f1680156124a25780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156124c357600080fd5b505af11580156124d7573d6000803e3d6000fd5b505050506040513d60208110156124ed57600080fd5b505190506124fb8185612f82565b6125058187613004565b6040805185815290518291600160a060020a038916917f3a5557a7cf72d28e8da836aeff2de822440d01a036e571c12c4c48611a0a41799181900360200190a3505050505050565b80600160a060020a038116151561256357600080fd5b600160a060020a03831615156125815761257c826130f2565b6107c2565b6107c283836130fe565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61260f81610fcf84610b63565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e1d5780518252601f199092019160209182019101611dfe565b600080612694836131ab565b915061269e6131c1565b90506126af610d6483611724610b16565b6126bc84836122126108be565b6040805183815290518291600160a060020a038716917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a350505050565b600080600061270f6131c1565b925061271a836127a3565b9092509050600160a060020a038216158015612734575080155b151561273f57600080fd5b61274e61173085610fcf6114d1565b612759858585613205565b60408051600160a060020a038716815260208101869052815185927f3344bbb992063ed4b833dabd5d5e55fc18df085bb96654e83aafbfe22e4116ff928290030190a25050505050565b600080600260008460405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106128295780518252601f19909201916020918201910161280a565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160009081205484517f74784f75744f664c696d697456616c75650000000000000000000000000000008188015260318082018b9052865180830390910181526051909101958690528051600160a060020a0390921698509195869592945091925082918401908083835b602083106128e75780518252601f1990920191602091820191016128c8565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054949694955050505050565b60008282111561293657fe5b50900390565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f55565b816000808360405160200180807f74784f75744f664c696d697456616c7565000000000000000000000000000000815250601101826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e1d5780518252601f199092019160209182019101611dfe565b612a1481612f7a565b1515612a1f57600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c93805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60408101516000108015612ab1575060408101516020820151115b8015612ac1575060208101518151115b1515612acc57600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b8051602082015110612c0457600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b908290612bd6565b612cd06132fb565b811115612cdc57600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b604c1981138015612d3a5750604d81125b1515612d4557600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b600160a060020a0381161515612da757600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0612dd06110d0565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b8051829060001015612317578151601414612eda57600080fd5b612ee38261333f565b9050600160a060020a0381161515612efa57600080fd5b612f02613346565b600160a060020a038281169116141561231757600080fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e01b81526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015611ef457600080fd5b6000903b1190565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e1d5780518252601f199092019160209182019101611dfe565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106130885780518252601f199092019160209182019101613069565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b3031610f388282613350565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561316357600080fd5b505af1158015613177573d6000803e3d6000fd5b505050506040513d602081101561318d57600080fd5b50519050611f57600160a060020a038516848363ffffffff612f1a16565b6000612317826131b9611b76565b6000036133b1565b60006131cb611b1f565b600160a060020a031663669f618b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fa157600080fd5b82600260008360405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106132895780518252601f19909201916020918201910161326a565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039590951694909417909355506107c2915083905082612989565b6000613305611b1f565b600160a060020a031663e5789d036040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fa157600080fd5b6014015190565b60006108c8610f61565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610f3857808261338561343a565b600160a060020a039091168152604051908190036020019082f0801580156114bf573d6000803e3d6000fd5b60008115156133c1575081612317565b60008213156133e5576133de83600a84900a63ffffffff6133fc16565b9050612317565b610ffb836000849003600a0a63ffffffff61342516565b600082151561340d57506000612317565b5081810281838281151561341d57fe5b041461231757fe5b6000818381151561343257fe5b049392505050565b60405160218061344a833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a7230582013896c6e8778fa17efaecbd0d5dd5e5a362c198c42f5a26951599b7d589302510029",
    "sourceMap": "381:4151:110:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:4151:110;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101dc5760003560e01c63ffffffff16806301e4f53a146101e15780630950d515146102075780630b26cf661461021f57806318d8f9c9146102405780632bd0bb0514610271578063392e53cd1461029b5780633dd95d1b146102c45780633e6968b6146102dc578063437764df146102f157806343b37dd31461033b5780634b94f815146103505780634fb3fef71461036557806358bf7c791461037d578063593399821461039e57806367eeba0c146103b657806369ffa08a146103cb5780636e5d6bea146103f2578063871c076014610413578063879ce676146104285780638aa1949a146104405780638b6c0354146104555780638da5cb5b1461047957806395e54a171461048e5780639a4a4395146104a35780639cb7595a146104bb578063a0189345146104fc578063a2a6ca2714610511578063a4c0ed3614610529578063a7444c0d1461055a578063b20d30a91461057a578063be3b625b14610592578063c0b0d022146105a7578063c6f6f2161461063c578063cd59658314610654578063dae5f0fd14610669578063df25f3f01461067e578063ea9f496814610693578063f20151e1146106ab578063f2fde38b146106c3578063f3b83791146106e4578063f968adbe146106fc575b600080fd5b3480156101ed57600080fd5b50610205600160a060020a0360043516602435610711565b005b34801561021357600080fd5b506102056004356107c7565b34801561022b57600080fd5b50610205600160a060020a0360043516610896565b34801561024c57600080fd5b506102556108be565b60408051600160a060020a039092168252519081900360200190f35b34801561027d57600080fd5b506102896004356108cd565b60408051918252519081900360200190f35b3480156102a757600080fd5b506102b061098a565b604080519115158252519081900360200190f35b3480156102d057600080fd5b506102056004356109db565b3480156102e857600080fd5b50610289610a9b565b3480156102fd57600080fd5b50610306610aa4565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b34801561034757600080fd5b50610289610ac8565b34801561035c57600080fd5b50610289610b16565b34801561037157600080fd5b50610289600435610b63565b34801561038957600080fd5b50610205600160a060020a0360043516610bde565b3480156103aa57600080fd5b506102b0600435610d7c565b3480156103c257600080fd5b50610289610e45565b3480156103d757600080fd5b50610205600160a060020a0360043581169060243516610e93565b3480156103fe57600080fd5b50610205600160a060020a0360043516610f3c565b34801561041f57600080fd5b50610255610f61565b34801561043457600080fd5b506102b0600435610fb8565b34801561044c57600080fd5b50610289611002565b34801561046157600080fd5b50610205600160a060020a0360043516602435611050565b34801561048557600080fd5b506102556110d0565b34801561049a57600080fd5b50610289611127565b3480156104af57600080fd5b50610205600435611181565b3480156104c757600080fd5b506104d06114c6565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561050857600080fd5b506102896114d1565b34801561051d57600080fd5b5061020560043561151f565b34801561053557600080fd5b506102b060048035600160a060020a03169060248035916044359182019101356115bb565b34801561056657600080fd5b506102056004356024351515604435611658565b34801561058657600080fd5b506102056004356117b0565b34801561059e57600080fd5b50610289611870565b3480156105b357600080fd5b506040805160608181019092526102b091600160a060020a03600480358216936024358316936044359093169236929160c49160649060039083908390808284375050604080518082018252949796958181019594509250600291508390839080828437509396505083359450505060208201359160400135600160a060020a031690506118be565b34801561064857600080fd5b50610205600435611a87565b34801561066057600080fd5b50610255611b1f565b34801561067557600080fd5b50610289611b76565b34801561068a57600080fd5b50610289611bc4565b34801561069f57600080fd5b506102b0600435611c12565b3480156106b757600080fd5b50610205600435611c5d565b3480156106cf57600080fd5b50610205600160a060020a0360043516611cd9565b3480156106f057600080fd5b50610205600435611cfe565b34801561070857600080fd5b50610289611d23565b600061071b611d71565b1561072557600080fd5b61072d6108be565b905061073882611c12565b151561074357600080fd5b61075461074e610a9b565b83611d96565b61075e6001611e5f565b610778600160a060020a038216338463ffffffff611e8316565b6107826000611e5f565b6107c2813384866040516020018082600160a060020a0316600160a060020a031660601b8152601401915050604051602081830303815290604052611f26565b505050565b6000806107d2611b1f565b600160a060020a031633146107e657600080fd5b6107ee610f61565b600160a060020a03166107ff611f5d565b600160a060020a03161461081257600080fd5b61081b83610d7c565b1561082557600080fd5b61082e83611fd2565b9150610839836120a1565b905061084483612124565b61084e82826121f6565b60408051600160a060020a038416815260208101839052815185927f06297b0797e3363e96e454edd4ab62862051bf559a7a431ce09415306771d133928290030190a2505050565b61089e6110d0565b600160a060020a031633146108b257600080fd5b6108bb81612228565b50565b60006108c86122b3565b905090565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106109495780518252601f19909201916020918201910161092a565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc5460ff1690565b6109e36110d0565b600160a060020a031633146109f757600080fd5b6109ff611002565b811180610a0a575080155b1515610a1557600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f76595b560000000000000000000000000000000000000000000000000000000090565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac95490565b60008060008360405160200180807f746f74616c457865637574656450657244617900000000000000000000000000815250601301828152602001915050604051602081830303815290604052604051808280519060200190808383602083106109495780518252601f19909201916020918201910161092a565b60008060008030600160a060020a0316636fde82026040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b505050506040513d6020811015610c4957600080fd5b5051600160a060020a03163314610c5f57600080fd5b84600160a060020a0381161515610c7557600080fd5b610c7d6122b3565b600160a060020a03166370a08231306040518263ffffffff1660e01b81526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b505050506040513d6020811015610cfe57600080fd5b50519450610d0a610b16565b9350838511610d1857600080fd5b8385039250610d25611127565b915060008211610d3457600080fd5b81831115610d40578192505b610d51610d4b610a9b565b84611d96565b610d69610d64858563ffffffff61230a16565b61231d565b610d74868785612369565b505050505050565b6000600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310610e015780518252601f199092019160209182019101610de2565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205460ff1695945050505050565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b30600160a060020a0316636fde82026040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610ece57600080fd5b505af1158015610ee2573d6000803e3d6000fd5b505050506040513d6020811015610ef857600080fd5b5051600160a060020a03163314610f0e57600080fd5b610f166122b3565b600160a060020a0383811691161415610f2e57600080fd5b610f38828261254d565b5050565b610f446110d0565b600160a060020a03163314610f5857600080fd5b6108bb8161258b565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d54600160a060020a031690565b600080610fdb83610fcf610fca610a9b565b610b63565b9063ffffffff61230a16565b905080610fe6610ac8565b10158015610ffb5750610ff7611002565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b611058611b1f565b600160a060020a0316331461106c57600080fd5b611074610f61565b600160a060020a0316611085611f5d565b600160a060020a03161461109857600080fd5b6110a181610fb8565b156110c6576110b76110b1610a9b565b82612602565b6110c18282612688565b610f38565b610f388282612702565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b6000806000806000611137611d23565b9350611141610e45565b925061115361114e610a9b565b6108cd565b9150818311611163576000611167565b8183035b90508084106111765780611178565b835b94505050505090565b6000606061118d611b1f565b600160a060020a031663cb08a10c846040518263ffffffff1660e01b8152600401808260001916600019168152602001915050602060405180830381600087803b1580156111da57600080fd5b505af11580156111ee573d6000803e3d6000fd5b505050506040513d602081101561120457600080fd5b50511561121057600080fd5b30611219611b1f565b600160a060020a0316633f9a8e7e856040518263ffffffff1660e01b8152600401808260001916600019168152602001915050602060405180830381600087803b15801561126657600080fd5b505af115801561127a573d6000803e3d6000fd5b505050506040513d602081101561129057600080fd5b5051600160a060020a0316146112a557600080fd5b6112ad610f61565b600160a060020a03166112be611b1f565b600160a060020a0316634a610b04856040518263ffffffff1660e01b8152600401808260001916600019168152602001915050602060405180830381600087803b15801561130b57600080fd5b505af115801561131f573d6000803e3d6000fd5b505050506040513d602081101561133557600080fd5b5051600160a060020a03161461134a57600080fd5b50506040805160248082018490528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0950d51500000000000000000000000000000000000000000000000000000000908117909152906113be611b1f565b600160a060020a031663dc8601b36113d4610f61565b836113dd611870565b6040518463ffffffff1660e01b81526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561144757818101518382015260200161142f565b50505050905090810190601f1680156114745780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561149557600080fd5b505af11580156114a9573d6000803e3d6000fd5b505050506040513d60208110156114bf57600080fd5b5050505050565b600160046000909192565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f5490565b6115276110d0565b600160a060020a0316331461153b57600080fd5b600081118015611551575061154e610e45565b81105b80156115635750611560611d23565b81105b151561156e57600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b6000806115c66108be565b905033600160a060020a038216146115dd57600080fd5b6115e5611d71565b1515611610576115f485611c12565b15156115ff57600080fd5b61161061160a610a9b565b86611d96565b61164c81878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611f26945050505050565b50600195945050505050565b600080600030600160a060020a0316636fde82026040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561169857600080fd5b505af11580156116ac573d6000803e3d6000fd5b505050506040513d60208110156116c257600080fd5b5051600160a060020a031633146116d857600080fd5b6116e1866127a3565b9093509150600160a060020a038316158015906116fe5750600082115b801561170a5750838210155b151561171557600080fd5b611735611730856117246114d1565b9063ffffffff61292a16565b61293c565b611745828563ffffffff61292a16565b90506117518187612989565b6040805185815260208101839052815188927f5bcec6564fe8d2cbb4e4eb8237510ceb6b291a5c2ee2e429948d25e9c924c1fa928290030190a28415610d7457611799611d23565b8411156117a557600080fd5b610d74838486612369565b6117b86110d0565b600160a060020a031633146117cc57600080fd5b6117d4611d23565b8111806117df575080155b15156117ea57600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f5490565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6fde8202000000000000000000000000000000000000000000000000000000001781529151815160009330939291829190808383895b8381101561193f578181015183820152602001611927565b50505050905090810190601f16801561196c5780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af191505015806119fb575030600160a060020a0316636fde82026040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156119c357600080fd5b505af11580156119d7573d6000803e3d6000fd5b505050506040513d60208110156119ed57600080fd5b5051600160a060020a031633145b80611a0557503330145b1515611a1057600080fd5b611a1861098a565b15611a2257600080fd5b611a2b89612228565b611a348861258b565b611a3d87612a0b565b611a4686612a96565b611a4f85612bf3565b611a5884612cc8565b611a6183612d29565b611a6a82612d92565b611a72612e69565b611a7a61098a565b9998505050505050505050565b611a8f6110d0565b600160a060020a03163314611aa357600080fd5b801580611ac75750611ab3611bc4565b81118015611ac75750611ac4610e45565b81105b1515611ad257600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d54600160a060020a031690565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b600080611c2483610fcf61114e610a9b565b905080611c2f610e45565b10158015611c445750611c40611d23565b8311155b8015610ffb5750611c53611bc4565b9092101592915050565b611c656110d0565b600160a060020a03163314611c7957600080fd5b611c81610ac8565b8110611c8c57600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b611ce16110d0565b600160a060020a03163314611cf557600080fd5b6108bb81612d92565b611d066110d0565b600160a060020a03163314611d1a57600080fd5b6108bb81612cc8565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e925490565b611da381610fcf846108cd565b6000808460405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611e1d5780518252601f199092019160209182019101611dfe565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020939093555050505050565b7f6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e9255565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038481166004830152306024830152604482018490529151918516916323b872dd9160648082019260009290919082900301818387803b158015611ef457600080fd5b505af1158015611f08573d6000803e3d6000fd5b505050503d156107c25760206000803e60005115156107c257600080fd5b611f2e611d71565b1515611f5757611f43610d6483610fcf610b16565b611f5783611f518584612ec0565b84612369565b50505050565b6000611f67611b1f565b600160a060020a031663d67bdd256040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fa157600080fd5b505af1158015611fb5573d6000803e3d6000fd5b505050506040513d6020811015611fcb57600080fd5b5051905090565b6000600260008360405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106120575780518252601f199092019160209182019101612038565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b60008060008360405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c018260001916600019168152602001915050604051602081830303815290604052604051808280519060200190808383602083106109495780518252601f19909201916020918201910161092a565b6001600460008360405160200180807f6d65737361676546697865640000000000000000000000000000000000000000815250600c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106121a95780518252601f19909201916020918201910161218a565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805460ff19169415159490941790935550505050565b612205610d6482611724610b16565b610f3882826122126108be565b600160a060020a0316919063ffffffff612f1a16565b61223181612f7a565b151561223c57600080fd5b7f811bbb11e8899da471f0e69a3ed55090fc90215227fc5fb1cb0d6e962ea7b74f60005260026020527fb4ed64697d3ef8518241966f7c6f28b0d72f20f51198717d198d2d55076c593d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c9354600160a060020a031690565b8181018281101561231757fe5b92915050565b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac955565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8b6c0354000000000000000000000000000000000000000000000000000000009081179091529060006123ec611b1f565b600160a060020a031663dc8601b3612402610f61565b8461240b611870565b6040518463ffffffff1660e01b81526004018084600160a060020a0316600160a060020a0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561247557818101518382015260200161245d565b50505050905090810190601f1680156124a25780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156124c357600080fd5b505af11580156124d7573d6000803e3d6000fd5b505050506040513d60208110156124ed57600080fd5b505190506124fb8185612f82565b6125058187613004565b6040805185815290518291600160a060020a038916917f3a5557a7cf72d28e8da836aeff2de822440d01a036e571c12c4c48611a0a41799181900360200190a3505050505050565b80600160a060020a038116151561256357600080fd5b600160a060020a03831615156125815761257c826130f2565b6107c2565b6107c283836130fe565b7f98aa806e31e94a687a31c65769cb99670064dd7f5a87526da075c5fb4eab988060005260026020527f0c1206883be66049a02d4937078367c00b3d71dd1a9465df969363c6ddeac96d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61260f81610fcf84610b63565b6000808460405160200180807f746f74616c45786563757465645065724461790000000000000000000000000081525060130182815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e1d5780518252601f199092019160209182019101611dfe565b600080612694836131ab565b915061269e6131c1565b90506126af610d6483611724610b16565b6126bc84836122126108be565b6040805183815290518291600160a060020a038716917f2f9a6098d4503a127779ba975f5f6b04f842362b1809f346989e9abc0b4dedb69181900360200190a350505050565b600080600061270f6131c1565b925061271a836127a3565b9092509050600160a060020a038216158015612734575080155b151561273f57600080fd5b61274e61173085610fcf6114d1565b612759858585613205565b60408051600160a060020a038716815260208101869052815185927f3344bbb992063ed4b833dabd5d5e55fc18df085bb96654e83aafbfe22e4116ff928290030190a25050505050565b600080600260008460405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106128295780518252601f19909201916020918201910161280a565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160009081205484517f74784f75744f664c696d697456616c75650000000000000000000000000000008188015260318082018b9052865180830390910181526051909101958690528051600160a060020a0390921698509195869592945091925082918401908083835b602083106128e75780518252601f1990920191602091820191016128c8565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054949694955050505050565b60008282111561293657fe5b50900390565b7f145286dc85799b6fb9fe322391ba2d95683077b2adf34dd576dedc437e537ba760009081526020527fba10c7a68bf463c41368d64adcf7df23c0de931ea3b09f061e2dfec302fef95f55565b816000808360405160200180807f74784f75744f664c696d697456616c7565000000000000000000000000000000815250601101826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e1d5780518252601f199092019160209182019101611dfe565b612a1481612f7a565b1515612a1f57600080fd5b7fa8b0ade3e2b734f043ce298aca4cc8d19d74270223f34531d0988b7d00cba21d60005260026020527f603cd9dcbfa185d5c37504f4c8b3f16117ed744fba48d08b7aad44a162af1c93805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60408101516000108015612ab1575060408101516020820151115b8015612ac1575060208101518151115b1515612acc57600080fd5b80517f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260208181527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e92909255908201517f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c82527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095560408201517fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d182527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa0557fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c9082905b60200201516040518082815260200191505060405180910390a150565b8051602082015110612c0457600080fd5b80517f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260208181527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e42192909255908201517fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d582527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b557f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b908290612bd6565b612cd06132fb565b811115612cdc57600080fd5b7f2dfd6c9f781bb6bbb5369c114e949b69ebb440ef3d4dd6b2836225eb1dc3a2be60009081526020527f2de0d2cdc19d356cb53b5984f91bfd3b31fe0c678a0d190a6db39274bb34753f55565b604c1981138015612d3a5750604d81125b1515612d4557600080fd5b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d55565b600160a060020a0381161515612da757600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0612dd06110d0565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba60005260046020527f078d888f9b66f3f8bfa10909e31f1e16240db73449f0500afdbbe3a70da457cc805460ff19166001179055565b8051829060001015612317578151601414612eda57600080fd5b612ee38261333f565b9050600160a060020a0381161515612efa57600080fd5b612f02613346565b600160a060020a038281169116141561231757600080fd5b82600160a060020a031663a9059cbb83836040518363ffffffff1660e01b81526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015611ef457600080fd5b6000903b1190565b806000808460405160200180807f6d65737361676556616c75650000000000000000000000000000000000000000815250600c01826000191660001916815260200191505060405160208183030381529060405260405180828051906020019080838360208310611e1d5780518252601f199092019160209182019101611dfe565b80600260008460405160200180807f6d657373616765526563697069656e740000000000000000000000000000000081525060100182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106130885780518252601f199092019160209182019101613069565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b3031610f388282613350565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561316357600080fd5b505af1158015613177573d6000803e3d6000fd5b505050506040513d602081101561318d57600080fd5b50519050611f57600160a060020a038516848363ffffffff612f1a16565b6000612317826131b9611b76565b6000036133b1565b60006131cb611b1f565b600160a060020a031663669f618b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fa157600080fd5b82600260008360405160200180807f74784f75744f664c696d6974526563697069656e74000000000000000000000081525060150182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083106132895780518252601f19909201916020918201910161326a565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039590951694909417909355506107c2915083905082612989565b6000613305611b1f565b600160a060020a031663e5789d036040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611fa157600080fd5b6014015190565b60006108c8610f61565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610f3857808261338561343a565b600160a060020a039091168152604051908190036020019082f0801580156114bf573d6000803e3d6000fd5b60008115156133c1575081612317565b60008213156133e5576133de83600a84900a63ffffffff6133fc16565b9050612317565b610ffb836000849003600a0a63ffffffff61342516565b600082151561340d57506000612317565b5081810281838281151561341d57fe5b041461231757fe5b6000818381151561343257fe5b049392505050565b60405160218061344a833901905600608060405260405160208060218339810160405251600160a060020a038116ff00a165627a7a7230582013896c6e8778fa17efaecbd0d5dd5e5a362c198c42f5a26951599b7d589302510029",
    "sourceMap": "381:4151:110:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:680;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1453:680:110;-1:-1:-1;;;;;1453:680:110;;;;;;;;;3602:382:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3602:382:102;;;;;1265:123:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1265:123:72;-1:-1:-1;;;;;1265:123:72;;;;;1778:90:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1778:90:109;;;;;;;;-1:-1:-1;;;;;1778:90:109;;;;;;;;;;;;;;1223:160:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1223:160:76;;;;;;;;;;;;;;;;;;;;;369:100:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:100:89;;;;;;;;;;;;;;;;;;;;;;3343:263:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3343:263:76;;;;;2617:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2617:91:76;;;;3668:153:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3668:153:109;;;;;;;;;;;;;;;;;;;;;;;1667:119:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:119:76;;;;516:110:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:110:94;;;;1389:166:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1389:166:76;;;;;2409:637:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2409:637:110;-1:-1:-1;;;;;2409:637:110;;;;;1924:161:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1924:161:103;;;;;1561:100:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:100:76;;;;4352:178:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4352:178:110;-1:-1:-1;;;;;4352:178:110;;;;;;;;;;1585:153:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1585:153:72;-1:-1:-1;;;;;1585:153:72;;;;;2593:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2593:126:72;;;;2366:245:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2366:245:76;;;;;1895:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1895:116:76;;;;2076:360:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2076:360:102;-1:-1:-1;;;;;2076:360:102;;;;;;;1732:92:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1732:92:97;;;;4428:382:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4428:382:76;;;;2705:569:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2705:569:102;;;;;3526:136:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:136:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:114:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:114:71;;;;4006:197:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4006:197:76;;;;;3106:414:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3106:414:109;;;;-1:-1:-1;;;;;3106:414:109;;;;;;;;;;;;;;;;5055:722;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5055:722:109;;;;;;;;;;;3111:226:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3111:226:76;;;;;2902:111:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:111:72;;;;699:964:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;699:964:109;;;;;;;;;;;;-1:-1:-1;;;;;699:964:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;699:964:109;;;;;;;;;;;;;;;;;-1:-1:-1;699:964:109;-1:-1:-1;699:964:109;;-1:-1:-1;699:964:109;;;;;;;;-1:-1:-1;699:964:109;;-1:-1:-1;;699:964:109;;;-1:-1:-1;;;699:964:109;;;;;;;;-1:-1:-1;;;;;699:964:109;;-1:-1:-1;699:964:109;;3800:200:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3800:200:76;;;;;2335:114:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2335:114:72;;;;1078:111:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1078:111:82;;;;2017:97:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2017:97:76;;;;2120:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2120:240:76;;;;;3612:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3612:182:76;;;;;1992:100:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1992:100:97;-1:-1:-1;;;;;1992:100:97;;;;;2062:127:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2062:127:72;;;;;1792:97:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1792:97:76;;;;1453:680:110;1804:12;1787:6;:4;:6::i;:::-;1786:7;1778:16;;;;;;1819:13;:11;:13::i;:::-;1804:28;;1850:19;1862:6;1850:11;:19::i;:::-;1842:28;;;;;;;;1880:44;1900:15;:13;:15::i;:::-;1917:6;1880:19;:44::i;:::-;1935:13;1943:4;1935:7;:13::i;:::-;1958:42;-1:-1:-1;;;;;1958:22:110;;1981:10;1993:6;1958:42;:22;:42;:::i;:::-;2010:14;2018:5;2010:7;:14::i;:::-;2034:92;2071:5;2078:10;2090:6;2115:9;2098:27;;;;;;-1:-1:-1;;;;;2098:27:110;-1:-1:-1;;;;;2098:27:110;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2098:27:110;;;2034:36;:92::i;:::-;1453:680;;;:::o;3602:382:102:-;3725:17;3783:13;990:16:72;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:72;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:72;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:72;;1018:57;;;;;;3689:24:102;3702:10;3689:12;:24::i;:::-;3688:25;3680:34;;;;;;3745:28;3762:10;3745:16;:28::i;:::-;3725:48;;3799:24;3812:10;3799:12;:24::i;:::-;3783:40;;3833:27;3849:10;3833:15;:27::i;:::-;3870:44;3897:9;3908:5;3870:26;:44::i;:::-;3929:48;;;-1:-1:-1;;;;;3929:48:102;;;;;;;;;;;;3948:10;;3929:48;;;;;;;;3602:382;;;:::o;1265:123:72:-;783:7:97;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;1346:35:72;1365:15;1346:18;:35::i;:::-;1265:123;:::o;1778:90:109:-;1822:6;1847:14;:12;:14::i;:::-;1840:21;;1778:90;:::o;1223:160:76:-;1284:7;1310:11;:66;1369:4;1332:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1332:42:76;;;1322:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1322:53:76;;;;;;;;;;;;;1310:66;;;;;;;;;;;;-1:-1:-1;1310:66:76;;;1223:160;-1:-1:-1;;;;;1223:160:76:o;369:100:89:-;160:66;415:4;438:24;:11;:24;;;;;;369:100;:::o;3343:263:76:-;783:7:97;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;3447:19:76;:17;:19::i;:::-;3433:11;:33;:53;;;-1:-1:-1;3470:16:76;;3433:53;3425:62;;;;;;;;1096:66;3497:11;:34;;;;;;;;:48;;;:34;3560:39;;;;;;;;;;;;;;;;;;3343:263;:::o;2617:91::-;2695:6;2689:3;:12;;2617:91::o;3668:153:109:-;3740:17;3668:153;:::o;1667:119:76:-;1096:66;1719:7;1745:34;;;;;;;1667:119;:::o;516:110:94:-;274:66;564:7;590:29;;;;;;;516:110;:::o;1389:166:76:-;1453:7;1479:11;:69;1541:4;1501:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1501:45:76;;;1491:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;2409:637:110;2525:15;2592:23;2689:12;2739:17;312:4:104;-1:-1:-1;;;;;284:53:104;;:55;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:104;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:104;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:104;-1:-1:-1;;;;;270:69:104;:10;:69;262:78;;;;;;2504:9:110;-1:-1:-1;;;;;455:17:81;;;;447:26;;;;;;2543:14:110;:12;:14::i;:::-;-1:-1:-1;;;;;2543:24:110;;2576:4;2543:39;;;;;;;;;;;;;-1:-1:-1;;;;;2543:39:110;-1:-1:-1;;;;;2543:39:110;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2543:39:110;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2543:39:110;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2543:39:110;;-1:-1:-1;2618:17:110;:15;:17::i;:::-;2592:43;-1:-1:-1;2653:25:110;;;2645:34;;;;;;2714:15;2704:7;:25;2689:40;;2759:19;:17;:19::i;:::-;2739:39;-1:-1:-1;2808:1:110;2796:13;;2788:22;;;;;;2831:9;2824:4;:16;2820:63;;;2863:9;2856:16;;2820:63;2892:42;2912:15;:13;:15::i;:::-;2929:4;2892:19;:42::i;:::-;2944:46;2964:25;:15;2984:4;2964:25;:19;:25;:::i;:::-;2944:19;:46::i;:::-;3000:39;3012:9;3023;3034:4;3000:11;:39::i;:::-;383:1:104;2409:637:110;;;;;:::o;1924:161:103:-;1987:4;2010:11;:68;2065:10;2032:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2032:44:103;;;2022:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2022:55:103;;;;;;;;;;;;;2010:68;;;;;;;;;;;;-1:-1:-1;2010:68:103;;;;;1924:161;-1:-1:-1;;;;;1924:161:103:o;1561:100:76:-;756:66;1604:7;1630:24;;;;;;;1561:100;:::o;4352:178:110:-;312:4:104;-1:-1:-1;;;;;284:53:104;;:55;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:104;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:104;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:104;-1:-1:-1;;;;;270:69:104;:10;:69;262:78;;;;;;4473:14:110;:12;:14::i;:::-;-1:-1:-1;;;;;4455:33:110;;;;;;;4447:42;;;;;;4499:24;4511:6;4519:3;4499:11;:24::i;:::-;4352:178;;:::o;1585:153:72:-;783:7:97;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;1681:50:72;1713:17;1681:31;:50::i;2593:126::-;544:66;2653:7;2679:33;:14;:33;;;;-1:-1:-1;;;;;2679:33:72;2593:126;:::o;2366:245:76:-;2434:4;2450:17;2470:49;2511:7;2470:36;2490:15;:13;:15::i;:::-;2470:19;:36::i;:::-;:40;:49;:40;:49;:::i;:::-;2450:69;;2561:9;2536:21;:19;:21::i;:::-;:34;;:68;;;;;2585:19;:17;:19::i;:::-;2574:7;:30;;2536:68;2529:75;2366:245;-1:-1:-1;;;2366:245:76:o;1895:116::-;922:66;1945:7;1971:33;;;;;;;1895:116;:::o;2076:360:102:-;990:16:72;:14;:16::i;:::-;-1:-1:-1;;;;;968:39:72;:10;:39;960:48;;;;;;1045:29;:27;:29::i;:::-;-1:-1:-1;;;;;1026:48:72;:15;:13;:15::i;:::-;-1:-1:-1;;;;;1026:48:72;;1018:57;;;;;;2177:28:102;2198:6;2177:20;:28::i;:::-;2173:257;;;2221:47;2244:15;:13;:15::i;:::-;2261:6;2221:22;:47::i;:::-;2282:48;2311:10;2323:6;2282:28;:48::i;:::-;2173:257;;;2361:58;2400:10;2412:6;2361:38;:58::i;1732:92:97:-;1523:66;1770:7;1796:21;:14;:21;;;;-1:-1:-1;;;;;1796:21:97;1732:92;:::o;4428:382:76:-;4478:7;4497:17;4537:19;4581:14;4641:28;4517:10;:8;:10::i;:::-;4497:30;;4559:12;:10;:12::i;:::-;4537:34;;4598:33;4615:15;:13;:15::i;:::-;4598:16;:33::i;:::-;4581:50;;4686:6;4672:11;:20;:47;;4718:1;4672:47;;;4709:6;4695:11;:20;4672:47;4641:78;;4748:20;4736:9;:32;:67;;4783:20;4736:67;;;4771:9;4736:67;4729:74;;4428:382;;;;;:::o;2705:569:102:-;3030:21;3094:17;2786:16;:14;:16::i;:::-;-1:-1:-1;;;;;2786:34:102;;2821:10;2786:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2786:46:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2786:46:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2786:46:102;2785:47;2777:56;;;;;;2913:4;2851:16;:14;:16::i;:::-;-1:-1:-1;;;;;2851:38:102;;2890:10;2851:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2851:50:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2851:50:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2851:50:102;-1:-1:-1;;;;;2851:67:102;;2843:76;;;;;;2989:29;:27;:29::i;:::-;-1:-1:-1;;;;;2937:81:102;:16;:14;:16::i;:::-;-1:-1:-1;;;;;2937:36:102;;2974:10;2937:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2937:48:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2937:48:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2937:48:102;-1:-1:-1;;;;;2937:81:102;;2929:90;;;;;;-1:-1:-1;;3114:50:102;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3114:50:102;;;;;;;;25:18:-1;;61:17;;3114:50:102;182:15:-1;3054:30:102;179:29:-1;;;160:49;;;3054:30:102;3174:16;:14;:16::i;:::-;-1:-1:-1;;;;;3174:37:102;;3212:29;:27;:29::i;:::-;3243:4;3249:17;:15;:17::i;:::-;3174:93;;;;;;;;;;;;;-1:-1:-1;;;;;3174:93:102;-1:-1:-1;;;;;3174:93:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3174:93:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3174:93:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3174:93:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2705:569:102:o;3526:136:109:-;3647:1;3650;3587:12;3526:136;;;:::o;964:114:71:-;648:66;1013:7;1039:32;;;;;;;964:114;:::o;4006:197:76:-;783:7:97;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;4095:1:76;4083:9;:13;:41;;;;;4112:12;:10;:12::i;:::-;4100:9;:24;4083:41;:67;;;;;4140:10;:8;:10::i;:::-;4128:9;:22;4083:67;4075:76;;;;;;;;447:66;4161:11;:23;;;;;;:35;4006:197::o;3106:414:109:-;3193:4;3209:12;3224:13;:11;:13::i;:::-;3209:28;-1:-1:-1;3255:10:109;-1:-1:-1;;;;;3255:28:109;;;3247:37;;;;;;3299:6;:4;:6::i;:::-;3298:7;3294:124;;;3329:19;3341:6;3329:11;:19::i;:::-;3321:28;;;;;;;;3363:44;3383:15;:13;:15::i;:::-;3400:6;3363:19;:44::i;:::-;3427:65;3464:5;3471;3478:6;3486:5;;3427:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3427:36:109;;-1:-1:-1;;;;;3427:65:109:i;:::-;-1:-1:-1;3509:4:109;;3106:414;-1:-1:-1;;;;;3106:414:109:o;5055:722::-;5217:17;5236:13;5436:20;312:4:104;-1:-1:-1;;;;;284:53:104;;:55;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:55:104;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;284:55:104;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:55:104;-1:-1:-1;;;;;270:69:104;:10;:69;262:78;;;;;;5253:24:109;5267:9;5253:13;:24::i;:::-;5216:61;;-1:-1:-1;5216:61:109;-1:-1:-1;;;;;;5295:23:109;;;;;;:36;;;5330:1;5322:5;:9;5295:36;:62;;;;;5344:13;5335:5;:22;;5295:62;5287:71;;;;;;;;5368:58;5388:37;5411:13;5388:18;:16;:18::i;:::-;:22;:37;:22;:37;:::i;:::-;5368:19;:58::i;:::-;5459:24;:5;5469:13;5459:24;:9;:24;:::i;:::-;5436:47;;5493:46;5515:12;5529:9;5493:21;:46::i;:::-;5554:61;;;;;;;;;;;;;;5576:9;;5554:61;;;;;;;;5629:17;5625:146;;;5687:10;:8;:10::i;:::-;5670:27;;;5662:36;;;;;;5712:48;5724:9;5735;5746:13;5712:11;:48::i;3111:226:76:-;783:7:97;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;3206:10:76;:8;:10::i;:::-;3192:11;:24;:44;;;-1:-1:-1;3220:16:76;;3192:44;3184:53;;;;;;;;756:66;3247:11;:24;;;;;;;;:38;;;:24;3300:30;;;;;;;;;;;;;;;;;;3111:226;:::o;2902:111:72:-;713:66;2950:7;2976:30;;;;;;;2902:111;:::o;699:964:109:-;1091:44:97;;;22:32:-1;6:49;;1091:44:97;;;;;49:4:-1;25:18;;61:17;;1091:44:97;182:15:-1;1114:20:97;179:29:-1;160:49;;1072:64:97;;;;1171:4:109;;1080::97;;1091:44;1072:64;;;25:18:-1;1072:64:97;;25:18:-1;1171:4:109;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1072:64:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:65;:208;;;;1252:4;-1:-1:-1;;;;;1224:53:97;;:55;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:55:97;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1224:55:97;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1224:55:97;-1:-1:-1;;;;;1210:69:97;:10;:69;1071:208;:299;;;-1:-1:-1;1343:10:97;1365:4;1343:27;1071:299;1050:382;;;;;;;;1196:15:109;:13;:15::i;:::-;1195:16;1187:25;;;;;;1223:35;1242:15;1223:18;:35::i;:::-;1268:50;1300:17;1268:31;:50::i;:::-;1328:28;1343:12;1328:14;:28::i;:::-;1366:44;1377:32;1366:10;:44::i;:::-;1420:63;1440:42;1420:19;:63::i;:::-;1493:37;1513:16;1493:19;:37::i;:::-;1540:31;1557:13;1540:16;:31::i;:::-;1581:17;1591:6;1581:9;:17::i;:::-;1608:15;:13;:15::i;:::-;1641;:13;:15::i;:::-;1634:22;699:964;-1:-1:-1;;;;;;;;;699:964:109:o;3800:200:76:-;783:7:97;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;3877:14:76;;;:70;;;3908:10;:8;:10::i;:::-;3896:9;:22;:50;;;;;3934:12;:10;:12::i;:::-;3922:9;:24;3896:50;3869:79;;;;;;;;601:66;3958:11;:23;;;;;;:35;3800:200::o;2335:114:72:-;377:66;2382:4;2410:31;:14;:31;;;;-1:-1:-1;;;;;2410:31:72;2335:114;:::o;1078:111:82:-;260:66;1123:6;1155:26;;;;;;;1078:111;:::o;2017:97:76:-;447:66;2058:7;2084:23;;;;;;;2017:97;:::o;2120:240::-;2179:4;2195:17;2215:46;2253:7;2215:33;2232:15;:13;:15::i;2215:46::-;2195:66;;2294:9;2278:12;:10;:12::i;:::-;:25;;:50;;;;;2318:10;:8;:10::i;:::-;2307:7;:21;;2278:50;:75;;;;;2343:10;:8;:10::i;:::-;2332:21;;;;;2120:240;-1:-1:-1;;2120:240:76:o;3612:182::-;783:7:97;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;3710:21:76;:19;:21::i;:::-;3698:33;;3690:42;;;;;;922:66;3742:11;:33;;;;;;:45;3612:182::o;1992:100:97:-;783:7;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;2066:19;2076:8;2066:9;:19::i;2062:127:72:-;783:7:97;:5;:7::i;:::-;-1:-1:-1;;;;;769:21:97;:10;:21;761:30;;;;;;2145:37:72;2165:16;2145:19;:37::i;1792:97:76:-;601:66;1833:7;1859:23;;;;;;;1792:97;:::o;56:507:98:-;441:66;435:73;;119:438::o;2714:188:76:-;2861:34;2888:6;2861:22;2878:4;2861:16;:22::i;:34::-;2792:11;:66;2851:4;2814:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2814:42:76;;;2804:53;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2804:53:76;;;;;;;;;;;;;2792:66;;;;;;;;;;;;-1:-1:-1;2792:66:76;:103;;;;-1:-1:-1;;;;;2714:188:76:o;569:502:98:-;942:66;935:81;626:439::o;1173:366:40:-;1265:62;;;;;;-1:-1:-1;;;;;1265:62:40;;;;;;;1313:4;1265:62;;;;;;;;;;;;:32;;;;;;:62;;;;;-1:-1:-1;;1265:62:40;;;;;;;;-1:-1:-1;1265:32:40;:62;;;5:2:-1;;;;30:1;27;20:12;5:2;1265:62:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1265:62:40;;;;1363:14;1360:2;;;1417;1414:1;1411;1396:24;1453:1;1447:8;1440:16;1437:2;;;1489:1;1486;1479:12;3280:332:110;3453:6;:4;:6::i;:::-;3452:7;3448:158;;;3475:50;3495:29;3517:6;3495:17;:15;:17::i;3475:50::-;3539:56;3551:5;3558:28;3573:5;3580;3558:14;:28::i;:::-;3588:6;3539:11;:56::i;:::-;3280:332;;;;:::o;4237:113:72:-;4285:7;4311:16;:14;:16::i;:::-;-1:-1:-1;;;;;4311:30:72;;:32;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4311:32:72;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4311:32:72;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4311:32:72;;-1:-1:-1;4237:113:72;:::o;1302:177:103:-;1371:7;1397:14;:75;1459:10;1422:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1422:48:103;;;1412:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1412:59:103;;;;;;;;;;;;;1397:75;;;;;;;;;;;;-1:-1:-1;1397:75:103;;-1:-1:-1;;;;;1397:75:103;;1302:177;-1:-1:-1;;;;;1302:177:103:o;622:166::-;687:7;713:11;:68;768:10;735:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;735:44:103;;;725:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;1631:146:103;1766:4;1695:11;:68;1750:10;1717:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1717:44:103;;;1707:55;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1707:55:103;;;;;;;;;;;;;1695:68;;;;;;;;;;;;-1:-1:-1;1695:68:103;:75;;-1:-1:-1;;1695:75:103;;;;;;;;;;;-1:-1:-1;;;;1631:146:103:o;3841:204:110:-;3932:50;3952:29;3974:6;3952:17;:15;:17::i;3932:50::-;3992:46;4019:10;4031:6;3992:13;:11;:13::i;:::-;-1:-1:-1;;;;;3992:26:110;;:46;;:26;:46;:::i;3154:187:72:-;3234:40;3258:15;3234:23;:40::i;:::-;3226:49;;;;;;;;377:66;3285:31;;:14;:31;;;:49;;-1:-1:-1;;3285:49:72;-1:-1:-1;;;;;3285:49:72;;;;;;;;;;3154:187::o;368:115:69:-;95:66:84;415:6:69;447:28;:14;:28;;;;-1:-1:-1;;;;;447:28:69;368:115;:::o;1238:128:132:-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;776:113:94:-;274:66;842:11;:29;;;;;;:40;776:113::o;1206:572:102:-;1383:57;;;-1:-1:-1;;;;;1383:57:102;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1383:57:102;;;;;;;;25:18:-1;;61:17;;1383:57:102;182:15:-1;1320:33:102;179:29:-1;;;160:49;;;1320:33:102;1296:21;1472:16;:14;:16::i;:::-;-1:-1:-1;;;;;1472:37:102;;1523:29;:27;:29::i;:::-;1566:4;1584:17;:15;:17::i;:::-;1472:139;;;;;;;;;;;;;-1:-1:-1;;;;;1472:139:102;-1:-1:-1;;;;;1472:139:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1472:139:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1472:139:102;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1472:139:102;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1472:139:102;;-1:-1:-1;1622:35:102;1472:139;1650:6;1622:15;:35::i;:::-;1667:38;1687:10;1699:5;1667:19;:38::i;:::-;1721:50;;;;;;;;1760:10;;-1:-1:-1;;;;;1721:50:102;;;;;;;;;;;;1206:572;;;;;;:::o;892:225:81:-;964:3;-1:-1:-1;;;;;455:17:81;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:81;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;3503:147:72:-;544:66;3590:33;;:14;:33;;;:53;;-1:-1:-1;;3590:53:72;-1:-1:-1;;;;;3590:53:72;;;;;;;;;;3503:147::o;2908:197:76:-;3061:37;3091:6;3061:25;3081:4;3061:19;:25::i;:37::-;2989:11;:69;3051:4;3011:45;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3011:45:76;;;3001:56;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;711:354:110;804:13;851:18;820:21;834:6;820:13;:21::i;:::-;804:37;;872:11;:9;:11::i;:::-;851:32;;894:49;914:28;936:5;914:17;:15;:17::i;894:49::-;953:45;980:10;992:5;953:13;:11;:13::i;:45::-;1014:44;;;;;;;;1047:10;;-1:-1:-1;;;;;1014:44:110;;;;;;;;;;;;711:354;;;;:::o;4055:497:109:-;4158:18;4200:17;4227:13;4179:11;:9;:11::i;:::-;4158:32;;4271:25;4285:10;4271:13;:25::i;:::-;4250:46;;-1:-1:-1;4250:46:109;-1:-1:-1;;;;;;4314:23:109;;;:37;;;;-1:-1:-1;4341:10:109;;4314:37;4306:46;;;;;;;;4362:51;4382:30;4405:6;4382:18;:16;:18::i;4362:51::-;4423:48;4440:10;4452:6;4460:10;4423:16;:48::i;:::-;4486:59;;;-1:-1:-1;;;;;4486:59:109;;;;;;;;;;;;4534:10;;4486:59;;;;;;;;4055:497;;;;;:::o;1670:300:71:-;1736:17;1755:13;1792:14;:80;1859:10;1817:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1817:53:71;;;1807:64;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1807:64:71;;;;;;;;;;;;;1792:80;;;;;;;;;-1:-1:-1;1792:80:71;;;-1:-1:-1;1792:80:71;;;;1912:49;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1912::71;;;;;;;;1902:60;;-1:-1:-1;;;;;1792:80:71;;;;-1:-1:-1;;;;;1912:49:71;;-1:-1:-1;1912:49:71;;-1:-1:-1;1912:49:71;;1902:60;;;;1912:49;1902:60;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1902:60:71;;;;;;;;;;;;;1890:73;;;;;;;;;;;;-1:-1:-1;1890:73:71;;1670:300;;1890:73;;-1:-1:-1;;;;;1670:300:71:o;1060:116:132:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:132;;;1060:116::o;1278:112:71:-;648:66;1342:11;:32;;;;;;:41;1278:112::o;2842:175::-;3004:6;2928:11;:73;2988:10;2950:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2950::71;;;2940:60;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;489::69;556:31;580:6;556:23;:31::i;:::-;548:40;;;;;;;;95:66:84;598:28:69;;:14;:28;;;:37;;-1:-1:-1;;598:37:69;-1:-1:-1;;;;;598:37:69;;;;;;;;;;489:153::o;4816:446:76:-;4896:10;;;;4909:1;-1:-1:-1;4896:73:76;;;;-1:-1:-1;4959:10:76;;;;;4946;;;:23;4896:73;:139;;;;-1:-1:-1;5025:10:76;;;;5012;;:23;4896:139;4875:195;;;;;;;;5108:10;;756:66;5116:1;5081:24;;;5108:10;5081:24;;;;:37;;;;5154:10;;;;601:66;5128:23;;;:36;5200:10;;;;447:66;5174:23;;;:36;5226:29;;5108:7;;5244:10;;;;;5226:29;;;;;;;;;;;;;;;;;;4816:446;:::o;5268:314::-;5357:10;;;5344;;;:23;5336:32;;;;;;5455:10;;1096:66;5463:1;5418:34;;;5455:10;5418:34;;;;:47;;;;5511:10;;;;922:66;5475:33;;;:46;5537:38;;5455:7;;5564:10;;3850:182:72;3952:13;:11;:13::i;:::-;3932:33;;;3924:42;;;;;;713:66;3976:11;:30;;;;;;:49;3850:182::o;718:247:82:-;-1:-1:-1;;876:6:82;:12;:27;;;;;901:2;892:6;:11;876:27;868:36;;;;;;;;260:66;914:11;:26;;;;;;:44;718:247::o;2149:190:97:-;-1:-1:-1;;;;;2213:22:97;;;;2205:31;;;;;;2251:39;2272:7;:5;:7::i;:::-;2251:39;;;-1:-1:-1;;;;;2251:39:97;;;;;;;;;;;;;;;;;;;;;1523:66;2300:21;;:14;:21;;;:32;;-1:-1:-1;;2300:32:97;-1:-1:-1;;;;;2300:32:97;;;;;;;;;;2149:190::o;281:82:89:-;160:66;325:24;;:11;:24;;;:31;;-1:-1:-1;;325:31:89;352:4;325:31;;;281:82::o;388:373:80:-;523:12;;504:5;;463:17;-1:-1:-1;519:236:80;;;563:12;;579:2;563:18;555:27;;;;;;608;629:5;608:20;:27::i;:::-;596:39;-1:-1:-1;;;;;;657:23:80;;;;649:32;;;;;;716:27;:25;:27::i;:::-;-1:-1:-1;;;;;703:40:80;;;;;;;695:49;;;;;579:339:40;677:6;-1:-1:-1;;;;;665:28:40;;694:3;699:6;665:41;;;;;;;;;;;;;-1:-1:-1;;;;;665:41:40;-1:-1:-1;;;;;665:41:40;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;438:578:131;496:4;971:18;;1003:8;;438:578::o;311:164:103:-;462:6;391:11;:68;446:10;413:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;413:44:103;;;403:55;;;;;;;;;;;;;66:2:-1;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;992:183:103;1158:10;1080:14;:75;1142:10;1105:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1105:48:103;;;1095:59;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1095:59:103;;;;;;;;;;;;;1080:75;;;;;;;;;;;;-1:-1:-1;1080:75:103;:88;;-1:-1:-1;;1080:88:103;-1:-1:-1;;;;;1080:88:103;;;;;;;;;;;-1:-1:-1;;;;;992:183:103:o;1270:145:81:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:81;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:81;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:81;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:81;;-1:-1:-1;1826:33:81;-1:-1:-1;;;;;1826:19:81;;1846:3;1795:21;1826:33;:19;:33;:::i;1396:130:82:-;1458:7;1484:35;1495:6;1504:14;:12;:14::i;:::-;1503:15;;1484:10;:35::i;4512:105:72:-;4556:7;4582:16;:14;:16::i;:::-;-1:-1:-1;;;;;4582:26:72;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2305:252:71;2489:10;2406:14;:80;2473:10;2431:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2431:53:71;;;2421:64;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2421:64:71;;;;;;;;;;;;;2406:80;;;;;;;;;;;;-1:-1:-1;2406:80:71;:93;;-1:-1:-1;;2406:93:71;-1:-1:-1;;;;;2406:93:71;;;;;;;;;;;-1:-1:-1;2509:41:71;;-1:-1:-1;2531:6:71;;-1:-1:-1;2539:10:71;2509:21;:41::i;4800:109:72:-;4846:7;4872:16;:14;:16::i;:::-;-1:-1:-1;;;;;4872:28:72;;:30;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1216:154:38;1350:2;1338:15;1332:22;;1310:54::o;1874:122:109:-;1934:7;1960:29;:27;:29::i;431:177:36:-;513:22;;-1:-1:-1;;;;;513:14:36;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:36;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;2040:290:82;2113:7;2136:11;;2132:55;;;-1:-1:-1;2170:6:82;2163:13;;2132:55;2209:1;2200:6;:10;2196:79;;;2233:31;:6;2244:2;:19;;;2233:31;:10;:31;:::i;:::-;2226:38;;;;2196:79;2291:32;:6;2314:7;;;;2302:2;:20;2291:32;:10;:32;:::i;203:380:132:-;263:9;489:7;;485:36;;;-1:-1:-1;513:1:132;506:8;;485:36;-1:-1:-1;531:7:132;;;536:2;531;:7;551:6;;;;;;;;:12;544:20;;;665:283;725:7;941:2;936;:7;;;;;;;;;665:283;-1:-1:-1;;;665:283:132:o;381:4151:110:-;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "bridgeContract()": "cd596583",
    "claimTokens(address,address)": "69ffa08a",
    "dailyLimit()": "67eeba0c",
    "decimalShift()": "dae5f0fd",
    "erc677token()": "18d8f9c9",
    "executionDailyLimit()": "43b37dd3",
    "executionMaxPerTx()": "8aa1949a",
    "fixAssetsAboveLimits(bytes32,bool,uint256)": "a7444c0d",
    "fixFailedMessage(bytes32)": "0950d515",
    "fixMediatorBalance(address)": "58bf7c79",
    "getBridgeInterfacesVersion()": "9cb7595a",
    "getBridgeMode()": "437764df",
    "getCurrentDay()": "3e6968b6",
    "handleBridgedTokens(address,uint256)": "8b6c0354",
    "initialize(address,address,address,uint256[3],uint256[2],uint256,int256,address)": "c0b0d022",
    "isInitialized()": "392e53cd",
    "maxAvailablePerTx()": "95e54a17",
    "maxPerTx()": "f968adbe",
    "mediatorBalance()": "4b94f815",
    "mediatorContractOnOtherSide()": "871c0760",
    "messageFixed(bytes32)": "59339982",
    "minPerTx()": "df25f3f0",
    "onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
    "outOfLimitAmount()": "a0189345",
    "owner()": "8da5cb5b",
    "relayTokens(address,uint256)": "01e4f53a",
    "requestFailedMessageFix(bytes32)": "9a4a4395",
    "requestGasLimit()": "be3b625b",
    "setBridgeContract(address)": "0b26cf66",
    "setDailyLimit(uint256)": "b20d30a9",
    "setExecutionDailyLimit(uint256)": "3dd95d1b",
    "setExecutionMaxPerTx(uint256)": "f20151e1",
    "setMaxPerTx(uint256)": "c6f6f216",
    "setMediatorContractOnOtherSide(address)": "6e5d6bea",
    "setMinPerTx(uint256)": "a2a6ca27",
    "setRequestGasLimit(uint256)": "f3b83791",
    "totalExecutedPerDay(uint256)": "4fb3fef7",
    "totalSpentPerDay(uint256)": "2bd0bb05",
    "transferOwnership(address)": "f2fde38b",
    "withinExecutionLimit(uint256)": "879ce676",
    "withinLimit(uint256)": "ea9f4968"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"relayTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"fixFailedMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"}],\"name\":\"setBridgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc677token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalSpentPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setExecutionDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeMode\",\"outputs\":[{\"name\":\"_data\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionDailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mediatorBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalExecutedPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"fixMediatorBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"messageFixed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mediatorContract\",\"type\":\"address\"}],\"name\":\"setMediatorContractOnOtherSide\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mediatorContractOnOtherSide\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinExecutionLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executionMaxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"handleBridgedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAvailablePerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_messageId\",\"type\":\"bytes32\"}],\"name\":\"requestFailedMessageFix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBridgeInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outOfLimitAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minPerTx\",\"type\":\"uint256\"}],\"name\":\"setMinPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"messageId\",\"type\":\"bytes32\"},{\"name\":\"unlockOnOtherSide\",\"type\":\"bool\"},{\"name\":\"valueToUnlock\",\"type\":\"uint256\"}],\"name\":\"fixAssetsAboveLimits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestGasLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgeContract\",\"type\":\"address\"},{\"name\":\"_mediatorContract\",\"type\":\"address\"},{\"name\":\"_erc677token\",\"type\":\"address\"},{\"name\":\"_dailyLimitMaxPerTxMinPerTxArray\",\"type\":\"uint256[3]\"},{\"name\":\"_executionDailyLimitExecutionMaxPerTxArray\",\"type\":\"uint256[2]\"},{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"},{\"name\":\"_decimalShift\",\"type\":\"int256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalShift\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setExecutionMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestGasLimit\",\"type\":\"uint256\"}],\"name\":\"setRequestGasLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedMessageFixed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"TokensBridgingInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"DailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"ExecutionDailyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MediatorAmountLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"AmountLimitExceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"remaining\",\"type\":\"uint256\"}],\"name\":\"AssetAboveLimitsFixed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"bridgeContract()\":{\"details\":\"Get the AMB interface for the bridge contract address\",\"return\":\"AMB interface for the bridge contract address\"},\"claimTokens(address,address)\":{\"details\":\"Allows to transfer any locked token on this contract that is not part of the bridge operations.\",\"params\":{\"_to\":\"address that will receive the locked tokens on this contract.\",\"_token\":\"address of the token, if it is not provided, native tokens will be transferred.\"}},\"decimalShift()\":{\"details\":\"Returns the value of foreign-to-home decimal shift.\",\"return\":\"decimal shift.\"},\"erc677token()\":{\"details\":\"Public getter for token contract.\",\"return\":\"address of the used token contract\"},\"fixAssetsAboveLimits(bytes32,bool,uint256)\":{\"details\":\"Fixes locked tokens, that were out of execution limits during the call to handleBridgedTokens\",\"params\":{\"messageId\":\"reference for bridge operation that was out of execution limits\",\"unlockOnOtherSide\":\"true if fixed tokens should be unlocked to the other side of the bridge\",\"valueToUnlock\":\"unlocked amount of tokens, should be less than saved txAboveLimitsValue. Should be less than maxPerTx(), if tokens need to be unlocked on the other side.\"}},\"fixFailedMessage(bytes32)\":{\"details\":\"Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred\",\"params\":{\"_messageId\":\"id of the message which execution failed on the other network.\"}},\"fixMediatorBalance(address)\":{\"details\":\"Allows to send to the other network the amount of locked tokens that can be forced into the contract without the invocation of the required methods.\",\"params\":{\"_receiver\":\"the address that will receive the tokens on the other network\"}},\"handleBridgedTokens(address,uint256)\":{\"details\":\"Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.\",\"params\":{\"_recipient\":\"address that will receive the tokens\",\"_value\":\"amount of tokens to be received\"}},\"maxAvailablePerTx()\":{\"details\":\"Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.\",\"return\":\"minimum of maxPerTx parameter and remaining daily quota.\"},\"mediatorBalance()\":{\"details\":\"Tells the expected mediator balance.\",\"return\":\"the current expected mediator balance.\"},\"mediatorContractOnOtherSide()\":{\"details\":\"Tells the mediator contract address from the other network.\",\"return\":\"the address of the mediator contract.\"},\"messageFixed(bytes32)\":{\"details\":\"Tells if a message sent to the AMB bridge has been fixed.\",\"return\":\"bool indicating the status of the message.\"},\"outOfLimitAmount()\":{\"details\":\"Total amount coins/tokens that were bridged from the other side and are out of execution limits.\",\"return\":\"total amount of all bridge operations above limits.\"},\"owner()\":{\"details\":\"Tells the address of the owner\",\"return\":\"the address of the owner\"},\"relayTokens(address,uint256)\":{\"details\":\"Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on the other network. The user should first call Approve method of the ERC677 token.\",\"params\":{\"_receiver\":\"address that will receive the minted tokens on the other network.\",\"_value\":\"amount of tokens to be transferred to the other network.\"}},\"requestFailedMessageFix(bytes32)\":{\"details\":\"Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.\",\"params\":{\"_messageId\":\"id of the message which execution failed.\"}},\"requestGasLimit()\":{\"details\":\"Tells the gas limit to be used in the message execution by the AMB bridge on the other network.\",\"return\":\"the gas limit for the message execution.\"},\"setBridgeContract(address)\":{\"details\":\"Sets the AMB bridge contract address. Only the owner can call this method.\",\"params\":{\"_bridgeContract\":\"the address of the bridge contract.\"}},\"setMediatorContractOnOtherSide(address)\":{\"details\":\"Sets the mediator contract address from the other network. Only the owner can call this method.\",\"params\":{\"_mediatorContract\":\"the address of the mediator contract.\"}},\"setRequestGasLimit(uint256)\":{\"details\":\"Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.\",\"params\":{\"_requestGasLimit\":\"the gas limit for the message execution.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"the address to transfer ownership to.\"}}},\"title\":\"ForeignAMBErc677ToErc677\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol\":\"ForeignAMBErc677ToErc677\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":openzeppelin-solidity/=node_modules/openzeppelin-solidity/\"]},\"sources\":{\"contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"contracts/interfaces/ERC677Receiver.sol\":{\"keccak256\":\"0x1343ae44729d851f88868c8712a9e864316badd59f8dd0988d108c2c43927ac9\",\"urls\":[\"bzzr://f3f8ad86c8f5c7e213fd5811e4362d83cf611bef3fcfd4438a876556ffbb4f16\"]},\"contracts/interfaces/IAMB.sol\":{\"keccak256\":\"0x5036335c047f31bb1c74634f59ec8fe1236f30a75f4a6a4853582243f4ee30cb\",\"urls\":[\"bzzr://24e5ba29da5b52d927dbd245d31d2e08597b27eed6eca28fa716a27be3ca563a\"]},\"contracts/interfaces/IUpgradeabilityOwnerStorage.sol\":{\"keccak256\":\"0xa6b5c96c8165d49676d227a9b7070faffdb7325906a598797fe66ca5917e76ef\",\"urls\":[\"bzzr://14c7b605baba9012f1386dce78e5b2665c682ec6a5bae3f4a6ec15f98ba40aa9\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"contracts/libraries/Bytes.sol\":{\"keccak256\":\"0xaac87fcac1962e29a85f577dafccf09d06b413fcc5bf97e821dca0b25183c310\",\"urls\":[\"bzzr://e1a3e3f8d13a8009d505b4d20029adbbcaf4c20a92ee10a223767fbb6d093dd2\"]},\"contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x8f2df79a1cda812d4be25da8f2b138f9b7492e76da1dfba21d87012e649cc51c\",\"urls\":[\"bzzr://0846d08e1b7a84e541ae31c91d2c0b34d88cf3abbd18891ec6eedeea7e958af2\"]},\"contracts/upgradeable_contracts/BaseERC677Bridge.sol\":{\"keccak256\":\"0x68adcbc23fcaf31480b6cc15c929dd7f62aed7edf48f1b50e2b0e3658b261778\",\"urls\":[\"bzzr://8bba5f8eaae0e989a9899ca07a9df296e28ba67459aad85235112e777ec69fe2\"]},\"contracts/upgradeable_contracts/BaseOverdrawManagement.sol\":{\"keccak256\":\"0x29dca32b0540208e6916d86e008cabd26717857c5ad6f27788a6461b054477b0\",\"urls\":[\"bzzr://067d7023ac80eb12e11a504b87a219aab2b99ee61ea7d325d2c95dc91c26919c\"]},\"contracts/upgradeable_contracts/BasicAMBMediator.sol\":{\"keccak256\":\"0x817cdf39d46eed56fdf6fc124b7163d1dc296b8b02fbc0fd34ee1948d8816eab\",\"urls\":[\"bzzr://02cf31c071d2a58a929d0fa1dae4d647ae1ce881221695a0730b66f6098cfa4a\"]},\"contracts/upgradeable_contracts/BasicTokenBridge.sol\":{\"keccak256\":\"0xe0ddb8457fd766d7e2bbf2673683b9023132603e9f2646a2fb820d2a2ec952ff\",\"urls\":[\"bzzr://bcbd104a3156753dd800c2222e247321d13e9f14a388d1ee500eb2a6f1d875e8\"]},\"contracts/upgradeable_contracts/ChooseReceiverHelper.sol\":{\"keccak256\":\"0xed188cae33d353543654b085650def4bf4be21304b0380fa683fbe06dbc4d3ce\",\"urls\":[\"bzzr://6c4aa7785721d11c9c8c03400e24e0049de3359b9deb55a6d8db6443183b974c\"]},\"contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"contracts/upgradeable_contracts/DecimalShiftBridge.sol\":{\"keccak256\":\"0x9ebdcd28b12565bdb6e87b631c1aa6d7927d3f4298e368acfdd86bbf71fc2a83\",\"urls\":[\"bzzr://9f2f39db4f4778334408a2a2baa2d97b517a76929c2f7ebb1efe0cb4c77cfd23\"]},\"contracts/upgradeable_contracts/ERC677Storage.sol\":{\"keccak256\":\"0x4c7b3459083f9d776c523846d2ca45a1066c5295b16acba13877f600797f625f\",\"urls\":[\"bzzr://4b738fb49963baf92c55d2a15a9fdb90a731c3a549ec2f331aef1e7e1cdf5317\"]},\"contracts/upgradeable_contracts/Initializable.sol\":{\"keccak256\":\"0xed94c4128ada87141d6c640d5bf4d0a5227cd68fad16be6304a121847fe6494f\",\"urls\":[\"bzzr://2dfbb776af73c3cfe3b6d3dd4545dc7cc55694d4636c0d1043d46ace7dd42ab2\"]},\"contracts/upgradeable_contracts/MediatorBalanceStorage.sol\":{\"keccak256\":\"0xb16525d6dccf2b475cacae2bdad8450839da218cbc410070146a49a14cd57972\",\"urls\":[\"bzzr://378c34999997ed44ce1b737d3e20ccc1afb31a530798c3a543e2bd5d54d8e8c1\"]},\"contracts/upgradeable_contracts/Ownable.sol\":{\"keccak256\":\"0xa61d31759a177fc38a5dcf34387cfc9870bbe64f946c14c380d13ddcd9aa6113\",\"urls\":[\"bzzr://7d8b5611ce1d97b28de5d10d5569fe2bd710e851f55b02d628b7a881ca9a9b40\"]},\"contracts/upgradeable_contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x70c68c35294a3f3e68ea99b9c64a6fef804f4f98a3f56312ddd5773ae5640ec3\",\"urls\":[\"bzzr://6a952821a114048c8ea64016981c5f124f90662dcc9ee10ab2de3cb6350fef27\"]},\"contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]},\"contracts/upgradeable_contracts/TokenBridgeMediator.sol\":{\"keccak256\":\"0x9e92011b0d801d6b6e2fffbe93baf61b683f8c093e71e38795ece63069716d63\",\"urls\":[\"bzzr://8f7a1dfad76930bb6e9183cc6aa7dc6393756900912c6f6f99ce94184761aa51\"]},\"contracts/upgradeable_contracts/TransferInfoStorage.sol\":{\"keccak256\":\"0xf284bf49c93b62b92ba14c5eb87c1f94b4893bf7c65499f254dd6a03363071f2\",\"urls\":[\"bzzr://6cdf94e9fd04016ed2a8d3ada76e413c0aefa1d2346259a4a4c60f5eff3dde1b\"]},\"contracts/upgradeable_contracts/Upgradeable.sol\":{\"keccak256\":\"0xbfbec6c479103b324cc0c2ab115b3d9d3226abdfa0ab19fccbfdf223a38a6511\",\"urls\":[\"bzzr://fcde383760b302df8f3a6bf5bb8371d1138c2c7bf6d15e1abf972180c181af8b\"]},\"contracts/upgradeable_contracts/VersionableBridge.sol\":{\"keccak256\":\"0x8cb48bea359fdd284cf6bf5eacc57596d57781b75f9c8eb662a6e799355f87e4\",\"urls\":[\"bzzr://0188ca66dd77c33b23e958848808408aeedc6a9881d1552252890d36720ef1fd\"]},\"contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol\":{\"keccak256\":\"0x575b183038b83c1c06ac498cb852bd2f1f89b11899c6e0955fc8d48487399228\",\"urls\":[\"bzzr://6d0df48dad9bc05c350f4f3779b4b007ba49e6e620ba09037f3f63d3768c319a\"]},\"contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol\":{\"keccak256\":\"0xc90843367c8e988d02697eb76bf0c40830c12ff82a17980f2300ee04cf4d7c0e\",\"urls\":[\"bzzr://c407ced59767665e01f70a9138df0549462b9001d7de94b746ea83751e6ef086\"]},\"node_modules/openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.4.24+commit.e67f0147"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "relayTokens"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_messageId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fixFailedMessage"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_bridgeContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBridgeContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "erc677token",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_day",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSpentPerDay",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isInitialized",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_dailyLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setExecutionDailyLimit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentDay",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getBridgeMode",
          "outputs": [
            {
              "internalType": null,
              "name": "_data",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "executionDailyLimit",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mediatorBalance",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_day",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalExecutedPerDay",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fixMediatorBalance"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_messageId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "messageFixed",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dailyLimit",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimTokens"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_mediatorContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMediatorContractOnOtherSide"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mediatorContractOnOtherSide",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withinExecutionLimit",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "executionMaxPerTx",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "handleBridgedTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAvailablePerTx",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_messageId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requestFailedMessageFix"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getBridgeInterfacesVersion",
          "outputs": [
            {
              "internalType": null,
              "name": "major",
              "type": "uint64"
            },
            {
              "internalType": null,
              "name": "minor",
              "type": "uint64"
            },
            {
              "internalType": null,
              "name": "patch",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "outOfLimitAmount",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_minPerTx",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinPerTx"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onTokenTransfer",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "unlockOnOtherSide",
              "type": "bool"
            },
            {
              "internalType": null,
              "name": "valueToUnlock",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fixAssetsAboveLimits"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_dailyLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDailyLimit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requestGasLimit",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_bridgeContract",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_mediatorContract",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_erc677token",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_dailyLimitMaxPerTxMinPerTxArray",
              "type": "uint256[3]"
            },
            {
              "internalType": null,
              "name": "_executionDailyLimitExecutionMaxPerTxArray",
              "type": "uint256[2]"
            },
            {
              "internalType": null,
              "name": "_requestGasLimit",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "_decimalShift",
              "type": "int256"
            },
            {
              "internalType": null,
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_maxPerTx",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxPerTx"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bridgeContract",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimalShift",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minPerTx",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withinLimit",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_maxPerTx",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setExecutionMaxPerTx"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_requestGasLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRequestGasLimit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPerTx",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FailedMessageFixed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensBridgingInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensBridged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "newLimit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DailyLimitChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "newLimit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExecutionDailyLimitChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "previousOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MediatorAmountLimitExceeded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "transactionHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "messageId",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AmountLimitExceeded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "remaining",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AssetAboveLimitsFixed",
          "anonymous": false
        }
      ],
      "devdoc": {
        "methods": {
          "bridgeContract()": {
            "details": "Get the AMB interface for the bridge contract address",
            "return": "AMB interface for the bridge contract address"
          },
          "claimTokens(address,address)": {
            "details": "Allows to transfer any locked token on this contract that is not part of the bridge operations.",
            "params": {
              "_to": "address that will receive the locked tokens on this contract.",
              "_token": "address of the token, if it is not provided, native tokens will be transferred."
            }
          },
          "decimalShift()": {
            "details": "Returns the value of foreign-to-home decimal shift.",
            "return": "decimal shift."
          },
          "erc677token()": {
            "details": "Public getter for token contract.",
            "return": "address of the used token contract"
          },
          "fixAssetsAboveLimits(bytes32,bool,uint256)": {
            "details": "Fixes locked tokens, that were out of execution limits during the call to handleBridgedTokens",
            "params": {
              "messageId": "reference for bridge operation that was out of execution limits",
              "unlockOnOtherSide": "true if fixed tokens should be unlocked to the other side of the bridge",
              "valueToUnlock": "unlocked amount of tokens, should be less than saved txAboveLimitsValue. Should be less than maxPerTx(), if tokens need to be unlocked on the other side."
            }
          },
          "fixFailedMessage(bytes32)": {
            "details": "Handles the request to fix transferred assets which bridged message execution failed on the other network. It uses the information stored by passMessage method when the assets were initially transferred",
            "params": {
              "_messageId": "id of the message which execution failed on the other network."
            }
          },
          "fixMediatorBalance(address)": {
            "details": "Allows to send to the other network the amount of locked tokens that can be forced into the contract without the invocation of the required methods.",
            "params": {
              "_receiver": "the address that will receive the tokens on the other network"
            }
          },
          "handleBridgedTokens(address,uint256)": {
            "details": "Handles the bridged tokens. Checks that the value is inside the execution limits and invokes the method to execute the Mint or Unlock accordingly.",
            "params": {
              "_recipient": "address that will receive the tokens",
              "_value": "amount of tokens to be received"
            }
          },
          "maxAvailablePerTx()": {
            "details": "Retrieves maximum available bridge amount per one transaction taking into account maxPerTx() and dailyLimit() parameters.",
            "return": "minimum of maxPerTx parameter and remaining daily quota."
          },
          "mediatorBalance()": {
            "details": "Tells the expected mediator balance.",
            "return": "the current expected mediator balance."
          },
          "mediatorContractOnOtherSide()": {
            "details": "Tells the mediator contract address from the other network.",
            "return": "the address of the mediator contract."
          },
          "messageFixed(bytes32)": {
            "details": "Tells if a message sent to the AMB bridge has been fixed.",
            "return": "bool indicating the status of the message."
          },
          "outOfLimitAmount()": {
            "details": "Total amount coins/tokens that were bridged from the other side and are out of execution limits.",
            "return": "total amount of all bridge operations above limits."
          },
          "owner()": {
            "details": "Tells the address of the owner",
            "return": "the address of the owner"
          },
          "relayTokens(address,uint256)": {
            "details": "Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on the other network. The user should first call Approve method of the ERC677 token.",
            "params": {
              "_receiver": "address that will receive the minted tokens on the other network.",
              "_value": "amount of tokens to be transferred to the other network."
            }
          },
          "requestFailedMessageFix(bytes32)": {
            "details": "Method to be called when a bridged message execution failed. It will generate a new message requesting to fix/roll back the transferred assets on the other network.",
            "params": {
              "_messageId": "id of the message which execution failed."
            }
          },
          "requestGasLimit()": {
            "details": "Tells the gas limit to be used in the message execution by the AMB bridge on the other network.",
            "return": "the gas limit for the message execution."
          },
          "setBridgeContract(address)": {
            "details": "Sets the AMB bridge contract address. Only the owner can call this method.",
            "params": {
              "_bridgeContract": "the address of the bridge contract."
            }
          },
          "setMediatorContractOnOtherSide(address)": {
            "details": "Sets the mediator contract address from the other network. Only the owner can call this method.",
            "params": {
              "_mediatorContract": "the address of the mediator contract."
            }
          },
          "setRequestGasLimit(uint256)": {
            "details": "Sets the gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
            "params": {
              "_requestGasLimit": "the gas limit for the message execution."
            }
          },
          "transferOwnership(address)": {
            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
            "params": {
              "newOwner": "the address to transfer ownership to."
            }
          }
        }
      },
      "userdoc": {
        "methods": {}
      }
    },
    "settings": {
      "remappings": [
        ":openzeppelin-solidity/=node_modules/openzeppelin-solidity/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol": "ForeignAMBErc677ToErc677"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/ERC677.sol": {
        "keccak256": "0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca",
        "urls": [
          "bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b"
        ],
        "license": null
      },
      "contracts/interfaces/ERC677Receiver.sol": {
        "keccak256": "0x1343ae44729d851f88868c8712a9e864316badd59f8dd0988d108c2c43927ac9",
        "urls": [
          "bzzr://f3f8ad86c8f5c7e213fd5811e4362d83cf611bef3fcfd4438a876556ffbb4f16"
        ],
        "license": null
      },
      "contracts/interfaces/IAMB.sol": {
        "keccak256": "0x5036335c047f31bb1c74634f59ec8fe1236f30a75f4a6a4853582243f4ee30cb",
        "urls": [
          "bzzr://24e5ba29da5b52d927dbd245d31d2e08597b27eed6eca28fa716a27be3ca563a"
        ],
        "license": null
      },
      "contracts/interfaces/IUpgradeabilityOwnerStorage.sol": {
        "keccak256": "0xa6b5c96c8165d49676d227a9b7070faffdb7325906a598797fe66ca5917e76ef",
        "urls": [
          "bzzr://14c7b605baba9012f1386dce78e5b2665c682ec6a5bae3f4a6ec15f98ba40aa9"
        ],
        "license": null
      },
      "contracts/libraries/Address.sol": {
        "keccak256": "0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722",
        "urls": [
          "bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e"
        ],
        "license": null
      },
      "contracts/libraries/Bytes.sol": {
        "keccak256": "0xaac87fcac1962e29a85f577dafccf09d06b413fcc5bf97e821dca0b25183c310",
        "urls": [
          "bzzr://e1a3e3f8d13a8009d505b4d20029adbbcaf4c20a92ee10a223767fbb6d093dd2"
        ],
        "license": null
      },
      "contracts/libraries/SafeERC20.sol": {
        "keccak256": "0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f",
        "urls": [
          "bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98"
        ],
        "license": null
      },
      "contracts/upgradeability/EternalStorage.sol": {
        "keccak256": "0x8f2df79a1cda812d4be25da8f2b138f9b7492e76da1dfba21d87012e649cc51c",
        "urls": [
          "bzzr://0846d08e1b7a84e541ae31c91d2c0b34d88cf3abbd18891ec6eedeea7e958af2"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/BaseERC677Bridge.sol": {
        "keccak256": "0x68adcbc23fcaf31480b6cc15c929dd7f62aed7edf48f1b50e2b0e3658b261778",
        "urls": [
          "bzzr://8bba5f8eaae0e989a9899ca07a9df296e28ba67459aad85235112e777ec69fe2"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/BaseOverdrawManagement.sol": {
        "keccak256": "0x29dca32b0540208e6916d86e008cabd26717857c5ad6f27788a6461b054477b0",
        "urls": [
          "bzzr://067d7023ac80eb12e11a504b87a219aab2b99ee61ea7d325d2c95dc91c26919c"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/BasicAMBMediator.sol": {
        "keccak256": "0x817cdf39d46eed56fdf6fc124b7163d1dc296b8b02fbc0fd34ee1948d8816eab",
        "urls": [
          "bzzr://02cf31c071d2a58a929d0fa1dae4d647ae1ce881221695a0730b66f6098cfa4a"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/BasicTokenBridge.sol": {
        "keccak256": "0xe0ddb8457fd766d7e2bbf2673683b9023132603e9f2646a2fb820d2a2ec952ff",
        "urls": [
          "bzzr://bcbd104a3156753dd800c2222e247321d13e9f14a388d1ee500eb2a6f1d875e8"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/ChooseReceiverHelper.sol": {
        "keccak256": "0xed188cae33d353543654b085650def4bf4be21304b0380fa683fbe06dbc4d3ce",
        "urls": [
          "bzzr://6c4aa7785721d11c9c8c03400e24e0049de3359b9deb55a6d8db6443183b974c"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Claimable.sol": {
        "keccak256": "0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773",
        "urls": [
          "bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/DecimalShiftBridge.sol": {
        "keccak256": "0x9ebdcd28b12565bdb6e87b631c1aa6d7927d3f4298e368acfdd86bbf71fc2a83",
        "urls": [
          "bzzr://9f2f39db4f4778334408a2a2baa2d97b517a76929c2f7ebb1efe0cb4c77cfd23"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/ERC677Storage.sol": {
        "keccak256": "0x4c7b3459083f9d776c523846d2ca45a1066c5295b16acba13877f600797f625f",
        "urls": [
          "bzzr://4b738fb49963baf92c55d2a15a9fdb90a731c3a549ec2f331aef1e7e1cdf5317"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Initializable.sol": {
        "keccak256": "0xed94c4128ada87141d6c640d5bf4d0a5227cd68fad16be6304a121847fe6494f",
        "urls": [
          "bzzr://2dfbb776af73c3cfe3b6d3dd4545dc7cc55694d4636c0d1043d46ace7dd42ab2"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/MediatorBalanceStorage.sol": {
        "keccak256": "0xb16525d6dccf2b475cacae2bdad8450839da218cbc410070146a49a14cd57972",
        "urls": [
          "bzzr://378c34999997ed44ce1b737d3e20ccc1afb31a530798c3a543e2bd5d54d8e8c1"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Ownable.sol": {
        "keccak256": "0xa61d31759a177fc38a5dcf34387cfc9870bbe64f946c14c380d13ddcd9aa6113",
        "urls": [
          "bzzr://7d8b5611ce1d97b28de5d10d5569fe2bd710e851f55b02d628b7a881ca9a9b40"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/ReentrancyGuard.sol": {
        "keccak256": "0x70c68c35294a3f3e68ea99b9c64a6fef804f4f98a3f56312ddd5773ae5640ec3",
        "urls": [
          "bzzr://6a952821a114048c8ea64016981c5f124f90662dcc9ee10ab2de3cb6350fef27"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Sacrifice.sol": {
        "keccak256": "0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337",
        "urls": [
          "bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/TokenBridgeMediator.sol": {
        "keccak256": "0x9e92011b0d801d6b6e2fffbe93baf61b683f8c093e71e38795ece63069716d63",
        "urls": [
          "bzzr://8f7a1dfad76930bb6e9183cc6aa7dc6393756900912c6f6f99ce94184761aa51"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/TransferInfoStorage.sol": {
        "keccak256": "0xf284bf49c93b62b92ba14c5eb87c1f94b4893bf7c65499f254dd6a03363071f2",
        "urls": [
          "bzzr://6cdf94e9fd04016ed2a8d3ada76e413c0aefa1d2346259a4a4c60f5eff3dde1b"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/Upgradeable.sol": {
        "keccak256": "0xbfbec6c479103b324cc0c2ab115b3d9d3226abdfa0ab19fccbfdf223a38a6511",
        "urls": [
          "bzzr://fcde383760b302df8f3a6bf5bb8371d1138c2c7bf6d15e1abf972180c181af8b"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/VersionableBridge.sol": {
        "keccak256": "0x8cb48bea359fdd284cf6bf5eacc57596d57781b75f9c8eb662a6e799355f87e4",
        "urls": [
          "bzzr://0188ca66dd77c33b23e958848808408aeedc6a9881d1552252890d36720ef1fd"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol": {
        "keccak256": "0x575b183038b83c1c06ac498cb852bd2f1f89b11899c6e0955fc8d48487399228",
        "urls": [
          "bzzr://6d0df48dad9bc05c350f4f3779b4b007ba49e6e620ba09037f3f63d3768c319a"
        ],
        "license": null
      },
      "contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol": {
        "keccak256": "0xc90843367c8e988d02697eb76bf0c40830c12ff82a17980f2300ee04cf4d7c0e",
        "urls": [
          "bzzr://c407ced59767665e01f70a9138df0549462b9001d7de94b746ea83751e6ef086"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol": {
        "keccak256": "0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56",
        "urls": [
          "bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol": {
        "keccak256": "0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef",
        "urls": [
          "bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b",
        "urls": [
          "bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad"
        ],
        "license": null
      },
      "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
        "keccak256": "0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419",
        "urls": [
          "bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol",
    "id": 14157,
    "exportedSymbols": {
      "ForeignAMBErc677ToErc677": [
        14156
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:4533:110",
    "nodes": [
      {
        "id": 13889,
        "nodeType": "PragmaDirective",
        "src": "0:23:110",
        "nodes": [],
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ]
      },
      {
        "id": 13890,
        "nodeType": "ImportDirective",
        "src": "25:38:110",
        "nodes": [],
        "absolutePath": "contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol",
        "file": "./BasicAMBErc677ToErc677.sol",
        "scope": 14157,
        "sourceUnit": 13888,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13891,
        "nodeType": "ImportDirective",
        "src": "64:39:110",
        "nodes": [],
        "absolutePath": "contracts/libraries/SafeERC20.sol",
        "file": "../../libraries/SafeERC20.sol",
        "scope": 14157,
        "sourceUnit": 5011,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13892,
        "nodeType": "ImportDirective",
        "src": "104:39:110",
        "nodes": [],
        "absolutePath": "contracts/upgradeable_contracts/MediatorBalanceStorage.sol",
        "file": "../MediatorBalanceStorage.sol",
        "scope": 14157,
        "sourceUnit": 12024,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14156,
        "nodeType": "ContractDefinition",
        "src": "381:4151:110",
        "nodes": [
          {
            "id": 13899,
            "nodeType": "UsingForDirective",
            "src": "471:27:110",
            "nodes": [],
            "libraryName": {
              "contractScope": null,
              "id": 13897,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5010,
              "src": "477:9:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$5010",
                "typeString": "library SafeERC20"
              }
            },
            "typeName": {
              "contractScope": null,
              "id": 13898,
              "name": "ERC677",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3705,
              "src": "491:6:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC677_$3705",
                "typeString": "contract ERC677"
              }
            }
          },
          {
            "id": 13939,
            "nodeType": "FunctionDefinition",
            "src": "711:354:110",
            "nodes": [],
            "body": {
              "id": 13938,
              "nodeType": "Block",
              "src": "794:271:110",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13907
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13907,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 13939,
                      "src": "804:13:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13906,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "804:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13911,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13909,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13903,
                        "src": "834:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13908,
                      "name": "_unshiftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10871,
                      "src": "820:13:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 13910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "820:21:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "804:37:110"
                },
                {
                  "assignments": [
                    13913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13913,
                      "name": "_messageId",
                      "nodeType": "VariableDeclaration",
                      "scope": 13939,
                      "src": "851:18:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 13912,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "851:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13916,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13914,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8854,
                      "src": "872:9:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 13915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:11:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "851:32:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13921,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13907,
                            "src": "936:5:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13918,
                              "name": "mediatorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12010,
                              "src": "914:15:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 13919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "914:17:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 13920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19197,
                          "src": "914:21:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 13922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:28:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13917,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12022,
                      "src": "894:19:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 13923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:49:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13924,
                  "nodeType": "ExpressionStatement",
                  "src": "894:49:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13928,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13901,
                        "src": "980:10:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13929,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13907,
                        "src": "992:5:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13925,
                          "name": "erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13600,
                          "src": "953:11:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$3705_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 13926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "953:13:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$3705",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 13927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4987,
                      "src": "953:26:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:45:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13931,
                  "nodeType": "ExpressionStatement",
                  "src": "953:45:110"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13933,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13901,
                        "src": "1028:10:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13934,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13907,
                        "src": "1040:5:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13935,
                        "name": "_messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13913,
                        "src": "1047:10:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 13932,
                      "name": "TokensBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12840,
                      "src": "1014:13:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 13936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1014:44:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13937,
                  "nodeType": "EmitStatement",
                  "src": "1009:49:110"
                }
              ]
            },
            "documentation": "@dev Executes action on the request to withdraw tokens relayed from the other network\n@param _recipient address of tokens receiver\n@param _value amount of bridged tokens",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnBridgedTokens",
            "parameters": {
              "id": 13904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13901,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 13939,
                  "src": "749:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13903,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 13939,
                  "src": "769:14:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "748:36:110"
            },
            "payable": false,
            "returnParameters": {
              "id": 13905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:110"
            },
            "scope": 14156,
            "stateMutability": "nonpayable",
            "superFunction": 13043,
            "visibility": "internal"
          },
          {
            "id": 13997,
            "nodeType": "FunctionDefinition",
            "src": "1453:680:110",
            "nodes": [],
            "body": {
              "id": 13996,
              "nodeType": "Block",
              "src": "1518:615:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1786:7:110",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13947,
                            "name": "lock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12227,
                            "src": "1787:4:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 13948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1787:6:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "1778:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:16:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13951,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:16:110"
                },
                {
                  "assignments": [
                    13953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13953,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 13997,
                      "src": "1804:12:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC677_$3705",
                        "typeString": "contract ERC677"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 13952,
                        "name": "ERC677",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3705,
                        "src": "1804:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$3705",
                          "typeString": "contract ERC677"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13956,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13954,
                      "name": "erc677token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13600,
                      "src": "1819:11:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$3705_$",
                        "typeString": "function () view returns (contract ERC677)"
                      }
                    },
                    "id": 13955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$3705",
                      "typeString": "contract ERC677"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1804:28:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13959,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13943,
                            "src": "1862:6:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 13958,
                          "name": "withinLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9942,
                          "src": "1850:11:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 13960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1850:19:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "1842:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:28:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13962,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:28:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13964,
                          "name": "getCurrentDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9980,
                          "src": "1900:13:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 13965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1900:15:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13966,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13943,
                        "src": "1917:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13963,
                      "name": "addTotalSpentPerDay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10005,
                      "src": "1880:19:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:44:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13968,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:44:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 13970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1943:4:110",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13969,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12234,
                      "src": "1935:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 13971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:13:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13972,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:13:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13976,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19966,
                          "src": "1981:3:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1981:10:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13978,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13943,
                        "src": "1993:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13973,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13953,
                        "src": "1958:5:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$3705",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 13975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5009,
                      "src": "1958:22:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:42:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13980,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:42:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 13982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2018:5:110",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13981,
                      "name": "setLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12234,
                      "src": "2010:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 13983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:14:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13984,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:14:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13986,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13953,
                        "src": "2071:5:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$3705",
                          "typeString": "contract ERC677"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13987,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19966,
                          "src": "2078:3:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2078:10:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13989,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13943,
                        "src": "2090:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13992,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13941,
                            "src": "2115:9:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13990,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19953,
                            "src": "2098:3:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2098:16:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 13993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2098:27:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC677_$3705",
                          "typeString": "contract ERC677"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13985,
                      "name": "bridgeSpecificActionsOnTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14108
                      ],
                      "referencedDeclaration": 14108,
                      "src": "2034:36:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC677_$3705_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ERC677,address,uint256,bytes memory)"
                      }
                    },
                    "id": 13994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2034:92:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13995,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:92:110"
                }
              ]
            },
            "documentation": "@dev Initiates the bridge operation that will lock the amount of tokens transferred and mint the tokens on\nthe other network. The user should first call Approve method of the ERC677 token.\n@param _receiver address that will receive the minted tokens on the other network.\n@param _value amount of tokens to be transferred to the other network.",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "relayTokens",
            "parameters": {
              "id": 13944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13941,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 13997,
                  "src": "1474:17:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13943,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 13997,
                  "src": "1493:14:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1473:35:110"
            },
            "payable": false,
            "returnParameters": {
              "id": 13945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:110"
            },
            "scope": 14156,
            "stateMutability": "nonpayable",
            "superFunction": 13674,
            "visibility": "external"
          },
          {
            "id": 14074,
            "nodeType": "FunctionDefinition",
            "src": "2409:637:110",
            "nodes": [],
            "body": {
              "id": 14073,
              "nodeType": "Block",
              "src": "2515:531:110",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    14008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14008,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 14074,
                      "src": "2525:15:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14007,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2525:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14016,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14013,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20253,
                            "src": "2576:4:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForeignAMBErc677ToErc677_$14156",
                              "typeString": "contract ForeignAMBErc677ToErc677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForeignAMBErc677ToErc677_$14156",
                              "typeString": "contract ForeignAMBErc677ToErc677"
                            }
                          ],
                          "id": 14012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2568:7:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 14014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2568:13:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14009,
                          "name": "_erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8265,
                          "src": "2543:12:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$3705_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 14010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:14:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$3705",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 14011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19566,
                      "src": "2543:24:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 14015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2543:39:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2525:57:110"
                },
                {
                  "assignments": [
                    14018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14018,
                      "name": "expectedBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 14074,
                      "src": "2592:23:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2592:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14021,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14019,
                      "name": "mediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12010,
                      "src": "2618:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 14020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:17:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2592:43:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14023,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14008,
                          "src": "2653:7:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 14024,
                          "name": "expectedBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14018,
                          "src": "2663:15:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2653:25:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "2645:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2645:34:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14027,
                  "nodeType": "ExpressionStatement",
                  "src": "2645:34:110"
                },
                {
                  "assignments": [
                    14029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14029,
                      "name": "diff",
                      "nodeType": "VariableDeclaration",
                      "scope": 14074,
                      "src": "2689:12:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14028,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2689:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14033,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 14030,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14008,
                      "src": "2704:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 14031,
                      "name": "expectedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14018,
                      "src": "2714:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2704:25:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2689:40:110"
                },
                {
                  "assignments": [
                    14035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14035,
                      "name": "available",
                      "nodeType": "VariableDeclaration",
                      "scope": 14074,
                      "src": "2739:17:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14034,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2739:7:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14038,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14036,
                      "name": "maxAvailablePerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10211,
                      "src": "2759:17:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 14037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:19:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2739:39:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14040,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14035,
                          "src": "2796:9:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 14041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2808:1:110",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2796:13:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "2788:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:22:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14044,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:22:110"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 14045,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14029,
                      "src": "2824:4:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 14046,
                      "name": "available",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14035,
                      "src": "2831:9:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2824:16:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 14053,
                  "nodeType": "IfStatement",
                  "src": "2820:63:110",
                  "trueBody": {
                    "id": 14052,
                    "nodeType": "Block",
                    "src": "2842:41:110",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 14050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 14048,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14029,
                            "src": "2856:4:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 14049,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14035,
                            "src": "2863:9:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2856:16:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14051,
                        "nodeType": "ExpressionStatement",
                        "src": "2856:16:110"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14055,
                          "name": "getCurrentDay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9980,
                          "src": "2912:13:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 14056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2912:15:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14057,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14029,
                        "src": "2929:4:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14054,
                      "name": "addTotalSpentPerDay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10005,
                      "src": "2892:19:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 14058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:42:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14059,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:42:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14063,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14029,
                            "src": "2984:4:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 14061,
                            "name": "expectedBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14018,
                            "src": "2964:15:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 14062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19221,
                          "src": "2964:19:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 14064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2964:25:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14060,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12022,
                      "src": "2944:19:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:46:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14066,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:46:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14068,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13999,
                        "src": "3012:9:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14069,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13999,
                        "src": "3023:9:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14070,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14029,
                        "src": "3034:4:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14067,
                      "name": "passMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12893,
                      "src": "3000:11:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3000:39:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14072,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:39:110"
                }
              ]
            },
            "documentation": "@dev Allows to send to the other network the amount of locked tokens that can be forced into the contract\nwithout the invocation of the required methods.\n@param _receiver the address that will receive the tokens on the other network",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 14002,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14001,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13187,
                  "src": "2465:25:110",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2465:25:110"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 14004,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13999,
                    "src": "2504:9:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 14005,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14003,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10730,
                  "src": "2491:12:110",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2491:23:110"
              }
            ],
            "name": "fixMediatorBalance",
            "parameters": {
              "id": 14000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13999,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 14074,
                  "src": "2437:17:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2437:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2436:19:110"
            },
            "payable": false,
            "returnParameters": {
              "id": 14006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2515:0:110"
            },
            "scope": 14156,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 14108,
            "nodeType": "FunctionDefinition",
            "src": "3280:332:110",
            "nodes": [],
            "body": {
              "id": 14107,
              "nodeType": "Block",
              "src": "3438:174:110",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 14087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3452:7:110",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14085,
                        "name": "lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12227,
                        "src": "3453:4:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 14086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3453:6:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 14106,
                  "nodeType": "IfStatement",
                  "src": "3448:158:110",
                  "trueBody": {
                    "id": 14105,
                    "nodeType": "Block",
                    "src": "3461:145:110",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 14092,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14080,
                                  "src": "3517:6:110",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 14089,
                                    "name": "mediatorBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12010,
                                    "src": "3495:15:110",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 14090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3495:17:110",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 14091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19221,
                                "src": "3495:21:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 14093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3495:29:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14088,
                            "name": "_setMediatorBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12022,
                            "src": "3475:19:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 14094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3475:50:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14095,
                        "nodeType": "ExpressionStatement",
                        "src": "3475:50:110"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 14097,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14078,
                              "src": "3551:5:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 14099,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14078,
                                  "src": "3573:5:110",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 14100,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14082,
                                  "src": "3580:5:110",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14098,
                                "name": "chooseReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10703,
                                "src": "3558:14:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) view returns (address)"
                                }
                              },
                              "id": 14101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3558:28:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 14102,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14080,
                              "src": "3588:6:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14096,
                            "name": "passMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12893,
                            "src": "3539:11:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 14103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3539:56:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14104,
                        "nodeType": "ExpressionStatement",
                        "src": "3539:56:110"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Executes action on deposit of bridged tokens\n@param _from address of tokens sender\n@param _value requsted amount of bridged tokens\n@param _data alternative receiver, if specified",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "bridgeSpecificActionsOnTokenTransfer",
            "parameters": {
              "id": 14083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14076,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 14108,
                  "src": "3335:6:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC677_$3705",
                    "typeString": "contract ERC677"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14075,
                    "name": "ERC677",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3705,
                    "src": "3335:6:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC677_$3705",
                      "typeString": "contract ERC677"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14078,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 14108,
                  "src": "3364:13:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14080,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 14108,
                  "src": "3387:14:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14082,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 14108,
                  "src": "3411:11:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14081,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3411:5:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3325:103:110"
            },
            "payable": false,
            "returnParameters": {
              "id": 14084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3438:0:110"
            },
            "scope": 14156,
            "stateMutability": "nonpayable",
            "superFunction": 8342,
            "visibility": "internal"
          },
          {
            "id": 14131,
            "nodeType": "FunctionDefinition",
            "src": "3841:204:110",
            "nodes": [],
            "body": {
              "id": 14130,
              "nodeType": "Block",
              "src": "3922:123:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14119,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14112,
                            "src": "3974:6:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 14116,
                              "name": "mediatorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12010,
                              "src": "3952:15:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 14117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3952:17:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 14118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19197,
                          "src": "3952:21:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 14120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3952:29:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14115,
                      "name": "_setMediatorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12022,
                      "src": "3932:19:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 14121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3932:50:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14122,
                  "nodeType": "ExpressionStatement",
                  "src": "3932:50:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14126,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14110,
                        "src": "4019:10:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14127,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14112,
                        "src": "4031:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 14123,
                          "name": "erc677token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13600,
                          "src": "3992:11:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$3705_$",
                            "typeString": "function () view returns (contract ERC677)"
                          }
                        },
                        "id": 14124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3992:13:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC677_$3705",
                          "typeString": "contract ERC677"
                        }
                      },
                      "id": 14125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4987,
                      "src": "3992:26:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3992:46:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14129,
                  "nodeType": "ExpressionStatement",
                  "src": "3992:46:110"
                }
              ]
            },
            "documentation": "@dev Unlock back the amount of tokens that were bridged to the other network but failed.\n@param _recipient address that will receive the tokens\n@param _value amount of tokens to be received",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeActionOnFixedTokens",
            "parameters": {
              "id": 14113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14110,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 14131,
                  "src": "3877:18:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14112,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 14131,
                  "src": "3897:14:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3897:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3876:36:110"
            },
            "payable": false,
            "returnParameters": {
              "id": 14114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3922:0:110"
            },
            "scope": 14156,
            "stateMutability": "nonpayable",
            "superFunction": 13050,
            "visibility": "internal"
          },
          {
            "id": 14155,
            "nodeType": "FunctionDefinition",
            "src": "4352:178:110",
            "nodes": [],
            "body": {
              "id": 14154,
              "nodeType": "Block",
              "src": "4437:93:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14141,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14133,
                          "src": "4455:6:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 14143,
                                "name": "_erc677token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8265,
                                "src": "4473:12:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC677_$3705_$",
                                  "typeString": "function () view returns (contract ERC677)"
                                }
                              },
                              "id": 14144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4473:14:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC677_$3705",
                                "typeString": "contract ERC677"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC677_$3705",
                                "typeString": "contract ERC677"
                              }
                            ],
                            "id": 14142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4465:7:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 14145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4465:23:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4455:33:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19969,
                        19970
                      ],
                      "referencedDeclaration": 19969,
                      "src": "4447:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:42:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14148,
                  "nodeType": "ExpressionStatement",
                  "src": "4447:42:110"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14150,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14133,
                        "src": "4511:6:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14151,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14135,
                        "src": "4519:3:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14149,
                      "name": "claimValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10758,
                      "src": "4499:11:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 14152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4499:24:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14153,
                  "nodeType": "ExpressionStatement",
                  "src": "4499:24:110"
                }
              ]
            },
            "documentation": "@dev Allows to transfer any locked token on this contract that is not part of the bridge operations.\n@param _token address of the token, if it is not provided, native tokens will be transferred.\n@param _to address that will receive the locked tokens on this contract.",
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 14138,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14137,
                  "name": "onlyIfUpgradeabilityOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13187,
                  "src": "4411:25:110",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4411:25:110"
              }
            ],
            "name": "claimTokens",
            "parameters": {
              "id": 14136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14133,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 14155,
                  "src": "4373:14:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14135,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 14155,
                  "src": "4389:11:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4372:29:110"
            },
            "payable": false,
            "returnParameters": {
              "id": 14139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4437:0:110"
            },
            "scope": 14156,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13893,
              "name": "BasicAMBErc677ToErc677",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13887,
              "src": "418:22:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicAMBErc677ToErc677_$13887",
                "typeString": "contract BasicAMBErc677ToErc677"
              }
            },
            "id": 13894,
            "nodeType": "InheritanceSpecifier",
            "src": "418:22:110"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13895,
              "name": "MediatorBalanceStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12023,
              "src": "442:22:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MediatorBalanceStorage_$12023",
                "typeString": "contract MediatorBalanceStorage"
              }
            },
            "id": 13896,
            "nodeType": "InheritanceSpecifier",
            "src": "442:22:110"
          }
        ],
        "contractDependencies": [
          3736,
          7519,
          8343,
          8675,
          8866,
          10314,
          10709,
          10807,
          10927,
          11033,
          11705,
          12023,
          12218,
          12235,
          13051,
          13169,
          13188,
          13491,
          13887
        ],
        "contractKind": "contract",
        "documentation": "@title ForeignAMBErc677ToErc677\n@dev Foreign side implementation for erc677-to-erc677 mediator intended to work on top of AMB bridge.\nIt is designed to be used as an implementation contract of EternalStorageProxy contract.",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          14156,
          12023,
          13887,
          13051,
          13169,
          8343,
          10709,
          11033,
          3736,
          10314,
          10927,
          8866,
          12218,
          8675,
          13491,
          10807,
          13188,
          12235,
          11705,
          7519
        ],
        "name": "ForeignAMBErc677ToErc677",
        "scope": 14157
      }
    ]
  },
  "id": 110
}