{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "contracts",
    "tests": "test/foundry",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "contracts/ERC677BridgeToken.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "a4cd8efd5add5530e8f0a94051f09c87",
      "sourceName": "contracts/ERC677BridgeToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBurnableMintableERC677Token.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC677BridgeToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677BridgeToken.sol/ERC677BridgeToken.json"
        }
      }
    },
    "contracts/ERC677BridgeTokenRewardable.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "c29896ef97d109bff2295bec5e309c4d",
      "sourceName": "contracts/ERC677BridgeTokenRewardable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/ERC677BridgeToken.sol",
        "contracts/ERC677MultiBridgeToken.sol",
        "contracts/PermittableToken.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBurnableMintableERC677Token.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC677BridgeTokenRewardable": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677BridgeTokenRewardable.sol/ERC677BridgeTokenRewardable.json"
        }
      }
    },
    "contracts/ERC677MultiBridgeToken.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "68af3af4a81b7c3414ef79113a1570c2",
      "sourceName": "contracts/ERC677MultiBridgeToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/ERC677BridgeToken.sol",
        "contracts/PermittableToken.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBurnableMintableERC677Token.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC677MultiBridgeToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677MultiBridgeToken.sol/ERC677MultiBridgeToken.json"
        }
      }
    },
    "contracts/Migrations.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "a38d82453340c835d4a8983976de1816",
      "sourceName": "contracts/Migrations.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Migrations": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Migrations.sol/Migrations.json"
        }
      }
    },
    "contracts/PermittableToken.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "d02ab82fe01f430224ec17666796fd53",
      "sourceName": "contracts/PermittableToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/ERC677BridgeToken.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBurnableMintableERC677Token.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "PermittableToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "PermittableToken.sol/PermittableToken.json"
        }
      }
    },
    "contracts/gsn/BasePaymaster.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "1f5b7104cde05aaafa6035879aadbd86",
      "sourceName": "contracts/gsn/BasePaymaster.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/forwarder/IForwarder.sol",
        "contracts/gsn/interfaces/GsnTypes.sol",
        "contracts/gsn/interfaces/IPaymaster.sol",
        "contracts/gsn/interfaces/IRelayHub.sol",
        "contracts/gsn/interfaces/IRelayRecipient.sol",
        "contracts/gsn/interfaces/IStakeManager.sol",
        "contracts/gsn/utils/GsnEip712Library.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/Ownable.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasePaymaster": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasePaymaster.sol/BasePaymaster.json"
        }
      }
    },
    "contracts/gsn/BaseRelayRecipient.sol": {
      "lastModificationDate": 1692633556426,
      "contentHash": "ddb8ac42259f5681fb51b818926c9ac9",
      "sourceName": "contracts/gsn/BaseRelayRecipient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/interfaces/IRelayRecipient.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BaseRelayRecipient": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BaseRelayRecipient.sol/BaseRelayRecipient.json"
        }
      }
    },
    "contracts/gsn/forwarder/IForwarder.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "f1a859d1e2a0e6f7f80c055a5c2ac0dc",
      "sourceName": "contracts/gsn/forwarder/IForwarder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IForwarder": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IForwarder.sol/IForwarder.json"
        }
      }
    },
    "contracts/gsn/interfaces/GsnTypes.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "203cb339874df68ffcacb7f9352805c9",
      "sourceName": "contracts/gsn/interfaces/GsnTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/forwarder/IForwarder.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "GsnTypes": {
          "0.4.24+commit.e67f0147.Linux.gcc": "GsnTypes.sol/GsnTypes.json"
        }
      }
    },
    "contracts/gsn/interfaces/IKnowForwarderAddress.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "d8a605cc6eb8a2eb83681ee641daa009",
      "sourceName": "contracts/gsn/interfaces/IKnowForwarderAddress.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IKnowForwarderAddress": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IKnowForwarderAddress.sol/IKnowForwarderAddress.json"
        }
      }
    },
    "contracts/gsn/interfaces/IPaymaster.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "6a72d28eb55224bb2cb9a8b1b9012c0a",
      "sourceName": "contracts/gsn/interfaces/IPaymaster.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/forwarder/IForwarder.sol",
        "contracts/gsn/interfaces/GsnTypes.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IPaymaster": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IPaymaster.sol/IPaymaster.json"
        }
      }
    },
    "contracts/gsn/interfaces/IRelayHub.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "97d7dc393024ab39629149e1376ea43c",
      "sourceName": "contracts/gsn/interfaces/IRelayHub.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/forwarder/IForwarder.sol",
        "contracts/gsn/interfaces/GsnTypes.sol",
        "contracts/gsn/interfaces/IStakeManager.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IRelayHub": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IRelayHub.sol/IRelayHub.json"
        }
      }
    },
    "contracts/gsn/interfaces/IRelayRecipient.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "00131682d71d151e42525c9ddfd3aeda",
      "sourceName": "contracts/gsn/interfaces/IRelayRecipient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IRelayRecipient": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IRelayRecipient.sol/IRelayRecipient.json"
        }
      }
    },
    "contracts/gsn/interfaces/IStakeManager.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "917538ce42962dbb9a1bfc89375881f0",
      "sourceName": "contracts/gsn/interfaces/IStakeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IStakeManager": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IStakeManager.sol/IStakeManager.json"
        }
      }
    },
    "contracts/gsn/token_paymaster/IUniswapV2Router02.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "6346ddc55152d01ddbbcf91b651a17fa",
      "sourceName": "contracts/gsn/token_paymaster/IUniswapV2Router02.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IUniswapV2Router02": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IUniswapV2Router02.sol/IUniswapV2Router02.json"
        }
      }
    },
    "contracts/gsn/token_paymaster/TokenPaymaster.sol": {
      "lastModificationDate": 1692287293689,
      "lastModificationDate": 1692287293689,
      "contentHash": "0c6dca607f9e87dfa1d24201c074d50c",
      "sourceName": "contracts/gsn/token_paymaster/TokenPaymaster.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/BasePaymaster.sol",
        "contracts/gsn/BaseRelayRecipient.sol",
        "contracts/gsn/forwarder/IForwarder.sol",
        "contracts/gsn/interfaces/GsnTypes.sol",
        "contracts/gsn/interfaces/IKnowForwarderAddress.sol",
        "contracts/gsn/interfaces/IPaymaster.sol",
        "contracts/gsn/interfaces/IRelayHub.sol",
        "contracts/gsn/interfaces/IRelayRecipient.sol",
        "contracts/gsn/interfaces/IStakeManager.sol",
        "contracts/gsn/token_paymaster/IUniswapV2Router02.sol",
        "contracts/gsn/utils/GsnEip712Library.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/GSNForeignERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "TokenPaymaster": {
          "0.4.24+commit.e67f0147.Linux.gcc": "TokenPaymaster.sol/TokenPaymaster.json"
        }
      }
    },
    "contracts/gsn/utils/GsnEip712Library.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "ce2fded70e4efa643d9a3d0230a0c761",
      "sourceName": "contracts/gsn/utils/GsnEip712Library.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/forwarder/IForwarder.sol",
        "contracts/gsn/interfaces/GsnTypes.sol",
        "contracts/gsn/interfaces/IRelayRecipient.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "GsnEip712Library": {
          "0.4.24+commit.e67f0147.Linux.gcc": "GsnEip712Library.sol/GsnEip712Library.json"
        }
      }
    },
    "contracts/helpers/AMBBridgeHelper.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "a3b642a895413db4c89c568c9d797910",
      "sourceName": "contracts/helpers/AMBBridgeHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "AMBBridgeHelper": {
          "0.4.24+commit.e67f0147.Linux.gcc": "AMBBridgeHelper.sol/AMBBridgeHelper.json"
        },
        "Helper": {
          "0.4.24+commit.e67f0147.Linux.gcc": "AMBBridgeHelper.sol/Helper.json"
        },
        "IHomeBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "AMBBridgeHelper.sol/IHomeBridge.json"
        }
      }
    },
    "contracts/helpers/Erc20ToNativeBridgeHelper.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "b88d13ec90287860c49bbd995302929e",
      "sourceName": "contracts/helpers/Erc20ToNativeBridgeHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Erc20ToNativeBridgeHelper": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Erc20ToNativeBridgeHelper.sol/Erc20ToNativeBridgeHelper.json"
        },
        "Helper": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Erc20ToNativeBridgeHelper.sol/Helper.json"
        },
        "IHomeErc20ToNativeBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Erc20ToNativeBridgeHelper.sol/IHomeErc20ToNativeBridge.json"
        }
      }
    },
    "contracts/interfaces/ERC677.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "82876fa990d2db4f00625456190ec78f",
      "sourceName": "contracts/interfaces/ERC677.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC677": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677.sol/ERC677.json"
        },
        "LegacyERC20": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677.sol/LegacyERC20.json"
        }
      }
    },
    "contracts/interfaces/ERC677Receiver.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "48d64f78dd8c96884b8b8965fbf3ac70",
      "sourceName": "contracts/interfaces/ERC677Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC677Receiver": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677Receiver.sol/ERC677Receiver.json"
        }
      }
    },
    "contracts/interfaces/IAMB.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "6620610deef0eadd541ee5df715f52a5",
      "sourceName": "contracts/interfaces/IAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IAMB": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IAMB.sol/IAMB.json"
        }
      }
    },
    "contracts/interfaces/IAMBInformationReceiver.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "5204bb5fcc23362a90bd90291f68b785",
      "sourceName": "contracts/interfaces/IAMBInformationReceiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IAMBInformationReceiver": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IAMBInformationReceiver.sol/IAMBInformationReceiver.json"
        }
      }
    },
    "contracts/interfaces/IBlockReward.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "7547e1dc6dbe4add4887b506e9b05f67",
      "sourceName": "contracts/interfaces/IBlockReward.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IBlockReward": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IBlockReward.sol/IBlockReward.json"
        }
      }
    },
    "contracts/interfaces/IBridgeValidators.sol": {
      "lastModificationDate": 1692287293689,
      "contentHash": "9898b3aeb00f3e4ce34f1dbb8df1a756",
      "sourceName": "contracts/interfaces/IBridgeValidators.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IBridgeValidators": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IBridgeValidators.sol/IBridgeValidators.json"
        }
      }
    },
    "contracts/interfaces/IBurnableMintableERC677Token.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "d3a891855ade15135540845db67abbee",
      "sourceName": "contracts/interfaces/IBurnableMintableERC677Token.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IBurnableMintableERC677Token": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IBurnableMintableERC677Token.sol/IBurnableMintableERC677Token.json"
        }
      }
    },
    "contracts/interfaces/ICToken.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "2d8ff9abdf448dcb375d0e206cdd5070",
      "sourceName": "contracts/interfaces/ICToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ICToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ICToken.sol/ICToken.json"
        }
      }
    },
    "contracts/interfaces/IComptroller.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "101bca25399e025c8b1aad021637f96a",
      "sourceName": "contracts/interfaces/IComptroller.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IComptroller": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IComptroller.sol/IComptroller.json"
        }
      }
    },
    "contracts/interfaces/IGasToken.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "5c56ba968fe87c7f8e6c1f4f55b1b16c",
      "sourceName": "contracts/interfaces/IGasToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IGasToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IGasToken.sol/IGasToken.json"
        }
      }
    },
    "contracts/interfaces/IInterestReceiver.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "1e66313147cf5e60d2cf740ecef70f6e",
      "sourceName": "contracts/interfaces/IInterestReceiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IInterestReceiver": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IInterestReceiver.sol/IInterestReceiver.json"
        }
      }
    },
    "contracts/interfaces/IMediatorFeeManager.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "a200ba0dc8329000df597901bb2fd28b",
      "sourceName": "contracts/interfaces/IMediatorFeeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IMediatorFeeManager": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IMediatorFeeManager.sol/IMediatorFeeManager.json"
        }
      }
    },
    "contracts/interfaces/IMintHandler.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "cdc5fe31d21237f53176639d583df27c",
      "sourceName": "contracts/interfaces/IMintHandler.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IMintHandler": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IMintHandler.sol/IMintHandler.json"
        }
      }
    },
    "contracts/interfaces/IRewardableValidators.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "bd3ddfae2acd122ae40763688901d5d7",
      "sourceName": "contracts/interfaces/IRewardableValidators.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IRewardableValidators": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IRewardableValidators.sol/IRewardableValidators.json"
        }
      }
    },
    "contracts/interfaces/ISavingsDai.sol": {
      "lastModificationDate": 1692287402177,
      "contentHash": "7c792f068109e4f3adaeb106ac2675b0",
      "sourceName": "contracts/interfaces/ISavingsDai.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ISavingsDai": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ISavingsDai.sol/ISavingsDai.json"
        }
      }
    },
    "contracts/interfaces/IUniswapRouterV2.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "79dd81af3a883427d9ddb011d939cb0e",
      "sourceName": "contracts/interfaces/IUniswapRouterV2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IUniswapRouterV2": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IUniswapRouterV2.sol/IUniswapRouterV2.json"
        }
      }
    },
    "contracts/interfaces/IUpgradeabilityOwnerStorage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "a1b852b2259df568abd9bc8f5304912a",
      "sourceName": "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IUpgradeabilityOwnerStorage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IUpgradeabilityOwnerStorage.sol/IUpgradeabilityOwnerStorage.json"
        }
      }
    },
    "contracts/libraries/Address.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "50b923e9f94939b6b43daab293eb0de9",
      "sourceName": "contracts/libraries/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeable_contracts/Sacrifice.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Address": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Address.sol/Address.json"
        }
      }
    },
    "contracts/libraries/ArbitraryMessage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "f1fe5cd4bf6e2764e5677b56f2738f79",
      "sourceName": "contracts/libraries/ArbitraryMessage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ArbitraryMessage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ArbitraryMessage.sol/ArbitraryMessage.json"
        }
      }
    },
    "contracts/libraries/Bytes.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "9c8ddc7de049dcdda97714c3ba94bd96",
      "sourceName": "contracts/libraries/Bytes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Bytes": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Bytes.sol/Bytes.json"
        }
      }
    },
    "contracts/libraries/Message.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "e80ce928050d3eac68333b793f3a68ef",
      "sourceName": "contracts/libraries/Message.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBridgeValidators.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Message": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Message.sol/Message.json"
        }
      }
    },
    "contracts/libraries/SafeERC20.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "2200d709f4ef5666e98ba0d2ff308b23",
      "sourceName": "contracts/libraries/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "SafeERC20": {
          "0.4.24+commit.e67f0147.Linux.gcc": "SafeERC20.sol/SafeERC20.json"
        }
      }
    },
    "contracts/mocks/AMBMock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "fec7d176f4e340850a4866ec12dbc754",
      "sourceName": "contracts/mocks/AMBMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libraries/Bytes.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "AMBMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "AMBMock.sol/AMBMock.json"
        }
      }
    },
    "contracts/mocks/BlockRewardMock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "0f498f85e4fa4a6c984c2c255739490b",
      "sourceName": "contracts/mocks/BlockRewardMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBlockReward.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BlockRewardMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BlockRewardMock.sol/BlockRewardMock.json"
        }
      }
    },
    "contracts/mocks/Box.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "bf16508a63fd00cffd5fa72a980805c2",
      "sourceName": "contracts/mocks/Box.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IAMB.sol",
        "contracts/interfaces/IAMBInformationReceiver.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Box": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Box.sol/Box.json"
        }
      }
    },
    "contracts/mocks/BridgeValidatorsDeterministic.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "ce6230656571119959f69fdfbb416c88",
      "sourceName": "contracts/mocks/BridgeValidatorsDeterministic.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseBridgeValidators.sol",
        "contracts/upgradeable_contracts/BridgeValidators.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BridgeValidatorsDeterministic": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BridgeValidatorsDeterministic.sol/BridgeValidatorsDeterministic.json"
        }
      }
    },
    "contracts/mocks/ERC20Mock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "a699f5a1180bb63f473d7dc64284de17",
      "sourceName": "contracts/mocks/ERC20Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC20Mock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC20Mock.sol/ERC20Mock.json"
        }
      }
    },
    "contracts/mocks/ERC677BridgeTokenRewardableMock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "e645c9e829f8b07caadda83c06380f5e",
      "sourceName": "contracts/mocks/ERC677BridgeTokenRewardableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/ERC677BridgeToken.sol",
        "contracts/ERC677BridgeTokenRewardable.sol",
        "contracts/ERC677MultiBridgeToken.sol",
        "contracts/PermittableToken.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBurnableMintableERC677Token.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC677BridgeTokenRewardableMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677BridgeTokenRewardableMock.sol/ERC677BridgeTokenRewardableMock.json"
        }
      }
    },
    "contracts/mocks/ERC677ReceiverTest.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "8453a2c316e453f29da95f5b14d7609f",
      "sourceName": "contracts/mocks/ERC677ReceiverTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677Receiver.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC677ReceiverTest": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677ReceiverTest.sol/ERC677ReceiverTest.json"
        }
      }
    },
    "contracts/mocks/FeeManagerMock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "653693fa862d14b75ff876f1cd950212",
      "sourceName": "contracts/mocks/FeeManagerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IRewardableValidators.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseFeeManager.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "FeeManagerMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "FeeManagerMock.sol/FeeManagerMock.json"
        }
      }
    },
    "contracts/mocks/FeeReceiverMock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "75618f675dcf31edae6508678404e354",
      "sourceName": "contracts/mocks/FeeReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "FeeReceiverMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "FeeReceiverMock.sol/FeeReceiverMock.json"
        }
      }
    },
    "contracts/mocks/ForeignAMBWithGasTokenMock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "67e9d9f4538cb5e6f4ade764edb39c33",
      "sourceName": "contracts/mocks/ForeignAMBWithGasTokenMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IGasToken.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/ArbitraryMessage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/GasTokenConnector.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicForeignAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/ForeignAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/ForeignAMBWithGasToken.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ForeignAMBWithGasTokenMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ForeignAMBWithGasTokenMock.sol/ForeignAMBWithGasTokenMock.json"
        }
      }
    },
    "contracts/mocks/GasTokenMock.sol": {
      "lastModificationDate": 1692287402177,
      "contentHash": "438ea0e1f0643a6d031a808a9dbf9f74",
      "sourceName": "contracts/mocks/GasTokenMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "GasTokenMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "GasTokenMock.sol/GasTokenMock.json"
        },
        "Rlp": {
          "0.4.24+commit.e67f0147.Linux.gcc": "GasTokenMock.sol/Rlp.json"
        }
      }
    },
    "contracts/mocks/IHarnessComptroller.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "1ae504076ec28812b71ce2845d5c7559",
      "sourceName": "contracts/mocks/IHarnessComptroller.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "IHarnessComptroller": {
          "0.4.24+commit.e67f0147.Linux.gcc": "IHarnessComptroller.sol/IHarnessComptroller.json"
        }
      }
    },
    "contracts/mocks/MessageTest.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "cb8df41c55352cc527cbd74485b01388",
      "sourceName": "contracts/mocks/MessageTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libraries/ArbitraryMessage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "MessageTest": {
          "0.4.24+commit.e67f0147.Linux.gcc": "MessageTest.sol/MessageTest.json"
        }
      }
    },
    "contracts/mocks/MintHandlerMock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "8bc4e2aeb6428d49c182fbebb7111642",
      "sourceName": "contracts/mocks/MintHandlerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBurnableMintableERC677Token.sol",
        "contracts/interfaces/IMintHandler.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "MintHandlerMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "MintHandlerMock.sol/MintHandlerMock.json"
        }
      }
    },
    "contracts/mocks/NoReturnTransferTokenMock.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "9af81a5119139a9346ecc01e0fc6e82e",
      "sourceName": "contracts/mocks/NoReturnTransferTokenMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "NoReturnTransferTokenMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "NoReturnTransferTokenMock.sol/NoReturnTransferTokenMock.json"
        }
      }
    },
    "contracts/mocks/OldBlockReward.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "63569cf603c8184bef1c6799e1195adf",
      "sourceName": "contracts/mocks/OldBlockReward.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "OldBlockReward": {
          "0.4.24+commit.e67f0147.Linux.gcc": "OldBlockReward.sol/OldBlockReward.json"
        }
      }
    },
    "contracts/mocks/RevertFallback.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "b7c30d9afe33cf4f6ee77168667f67e6",
      "sourceName": "contracts/mocks/RevertFallback.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libraries/Address.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "RevertFallback": {
          "0.4.24+commit.e67f0147.Linux.gcc": "RevertFallback.sol/RevertFallback.json"
        }
      }
    },
    "contracts/mocks/Staking.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "f8b4a2e9f153f6eb4045971d7064f56b",
      "sourceName": "contracts/mocks/Staking.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Staking": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Staking.sol/Staking.json"
        }
      }
    },
    "contracts/mocks/UniswapRouterMock.sol": {
      "lastModificationDate": 1692287293693,
      "lastModificationDate": 1692287293693,
      "contentHash": "ea6c1e4278772b68e57ed4418a62d25d",
      "sourceName": "contracts/mocks/UniswapRouterMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/BasePaymaster.sol",
        "contracts/gsn/BaseRelayRecipient.sol",
        "contracts/gsn/forwarder/IForwarder.sol",
        "contracts/gsn/interfaces/GsnTypes.sol",
        "contracts/gsn/interfaces/IKnowForwarderAddress.sol",
        "contracts/gsn/interfaces/IPaymaster.sol",
        "contracts/gsn/interfaces/IRelayHub.sol",
        "contracts/gsn/interfaces/IRelayRecipient.sol",
        "contracts/gsn/interfaces/IStakeManager.sol",
        "contracts/gsn/token_paymaster/IUniswapV2Router02.sol",
        "contracts/gsn/token_paymaster/TokenPaymaster.sol",
        "contracts/gsn/utils/GsnEip712Library.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/GSNForeignERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "UniswapRouterMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "UniswapRouterMock.sol/UniswapRouterMock.json"
        }
      }
    },
    "contracts/mocks/XDaiForeignBridgeMock.sol": {
      "lastModificationDate": 1692287402177,
      "lastModificationDate": 1692287402177,
      "contentHash": "cd3a39de77491952acfafa2265551a3b",
      "sourceName": "contracts/mocks/XDaiForeignBridgeMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/BaseRelayRecipient.sol",
        "contracts/gsn/interfaces/IKnowForwarderAddress.sol",
        "contracts/gsn/interfaces/IRelayRecipient.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IInterestReceiver.sol",
        "contracts/interfaces/ISavingsDai.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/GSNForeignERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/OtherSideBridgeStorage.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/erc20_to_native/ForeignBridgeErcToNative.sol",
        "contracts/upgradeable_contracts/erc20_to_native/InterestConnector.sol",
        "contracts/upgradeable_contracts/erc20_to_native/SavingsDaiConnector.sol",
        "contracts/upgradeable_contracts/erc20_to_native/XDaiForeignBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "XDaiForeignBridgeMock": {
          "0.4.24+commit.e67f0147.Linux.gcc": "XDaiForeignBridgeMock.sol/XDaiForeignBridgeMock.json"
        }
      }
    },
    "contracts/upgradeability/EternalStorage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "ec04ffa4b497a651b86568d411591fe2",
      "sourceName": "contracts/upgradeability/EternalStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "EternalStorage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "EternalStorage.sol/EternalStorage.json"
        }
      }
    },
    "contracts/upgradeability/EternalStorageProxy.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "fb631de3f75f7ad146da45a7777bddfb",
      "sourceName": "contracts/upgradeability/EternalStorageProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeability/OwnedUpgradeabilityProxy.sol",
        "contracts/upgradeability/Proxy.sol",
        "contracts/upgradeability/UpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/UpgradeabilityProxy.sol",
        "contracts/upgradeability/UpgradeabilityStorage.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "EternalStorageProxy": {
          "0.4.24+commit.e67f0147.Linux.gcc": "EternalStorageProxy.sol/EternalStorageProxy.json"
        }
      }
    },
    "contracts/upgradeability/OwnedUpgradeabilityProxy.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "9f546fc2237833702418123d02002208",
      "sourceName": "contracts/upgradeability/OwnedUpgradeabilityProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/Proxy.sol",
        "contracts/upgradeability/UpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/UpgradeabilityProxy.sol",
        "contracts/upgradeability/UpgradeabilityStorage.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "OwnedUpgradeabilityProxy": {
          "0.4.24+commit.e67f0147.Linux.gcc": "OwnedUpgradeabilityProxy.sol/OwnedUpgradeabilityProxy.json"
        }
      }
    },
    "contracts/upgradeability/Proxy.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "f168519a7ad5de80153017ba72f1e26c",
      "sourceName": "contracts/upgradeability/Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Proxy": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Proxy.sol/Proxy.json"
        }
      }
    },
    "contracts/upgradeability/UpgradeabilityOwnerStorage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "9029b14bd65c142d5e6bb030ad690218",
      "sourceName": "contracts/upgradeability/UpgradeabilityOwnerStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "UpgradeabilityOwnerStorage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "UpgradeabilityOwnerStorage.sol/UpgradeabilityOwnerStorage.json"
        }
      }
    },
    "contracts/upgradeability/UpgradeabilityProxy.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "cd59218a986ba26000facad162187087",
      "sourceName": "contracts/upgradeability/UpgradeabilityProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/Proxy.sol",
        "contracts/upgradeability/UpgradeabilityStorage.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "UpgradeabilityProxy": {
          "0.4.24+commit.e67f0147.Linux.gcc": "UpgradeabilityProxy.sol/UpgradeabilityProxy.json"
        }
      }
    },
    "contracts/upgradeability/UpgradeabilityStorage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "a04304e6bb876137e5f4e715d1f4415b",
      "sourceName": "contracts/upgradeability/UpgradeabilityStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "UpgradeabilityStorage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "UpgradeabilityStorage.sol/UpgradeabilityStorage.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BaseBridgeValidators.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "285bab80d8811778eec98e247270cc58",
      "sourceName": "contracts/upgradeable_contracts/BaseBridgeValidators.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BaseBridgeValidators": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BaseBridgeValidators.sol/BaseBridgeValidators.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BaseERC677Bridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "68fe3370b528057d60228c4c750b0a88",
      "sourceName": "contracts/upgradeable_contracts/BaseERC677Bridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/ERC677Receiver.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/ChooseReceiverHelper.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC677Storage.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BaseERC677Bridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BaseERC677Bridge.sol/BaseERC677Bridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BaseFeeManager.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "02e0c0bba634d87fc096eb4816cc8efd",
      "sourceName": "contracts/upgradeable_contracts/BaseFeeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IRewardableValidators.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BaseFeeManager": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BaseFeeManager.sol/BaseFeeManager.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BaseOverdrawManagement.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "0003fb0586ed2456539c6c6a2e4a67ad",
      "sourceName": "contracts/upgradeable_contracts/BaseOverdrawManagement.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BaseOverdrawManagement": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BaseOverdrawManagement.sol/BaseOverdrawManagement.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BasicAMBMediator.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "5aa8a058be85d09eef85317659aa23d6",
      "sourceName": "contracts/upgradeable_contracts/BasicAMBMediator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IAMB.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicAMBMediator": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicAMBMediator.sol/BasicAMBMediator.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BasicBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "acd8071a503d1d2e78afa6023a26e99c",
      "sourceName": "contracts/upgradeable_contracts/BasicBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicBridge.sol/BasicBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BasicForeignBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "0cdd8749adcc42b1f3c86a642f0f6016",
      "sourceName": "contracts/upgradeable_contracts/BasicForeignBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicForeignBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicForeignBridge.sol/BasicForeignBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BasicHomeBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "3fb02cd14d522ad32d4926d44d40b5f1",
      "sourceName": "contracts/upgradeable_contracts/BasicHomeBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicHomeBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicHomeBridge.sol/BasicHomeBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BasicTokenBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "e97e3eddf332f9e21acaeb102741a2fb",
      "sourceName": "contracts/upgradeable_contracts/BasicTokenBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicTokenBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicTokenBridge.sol/BasicTokenBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BlockRewardBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "687b7b84ef1002563202859b96fe045c",
      "sourceName": "contracts/upgradeable_contracts/BlockRewardBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBlockReward.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BlockRewardBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BlockRewardBridge.sol/BlockRewardBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BlockRewardFeeManager.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "2e955e634fb8acc6778d9ae7df43c259",
      "sourceName": "contracts/upgradeable_contracts/BlockRewardFeeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBlockReward.sol",
        "contracts/interfaces/IRewardableValidators.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseFeeManager.sol",
        "contracts/upgradeable_contracts/BlockRewardBridge.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BlockRewardFeeManager": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BlockRewardFeeManager.sol/BlockRewardFeeManager.json"
        }
      }
    },
    "contracts/upgradeable_contracts/BridgeValidators.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "dfe29835418e084b71b12280e849aef2",
      "sourceName": "contracts/upgradeable_contracts/BridgeValidators.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseBridgeValidators.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BridgeValidators": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BridgeValidators.sol/BridgeValidators.json"
        }
      }
    },
    "contracts/upgradeable_contracts/ChooseReceiverHelper.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "4f8978220d71937a2df1b3342334fdd1",
      "sourceName": "contracts/upgradeable_contracts/ChooseReceiverHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libraries/Bytes.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ChooseReceiverHelper": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ChooseReceiverHelper.sol/ChooseReceiverHelper.json"
        }
      }
    },
    "contracts/upgradeable_contracts/Claimable.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "56c6b0f587a234a2b0d0f4cb932e51c0",
      "sourceName": "contracts/upgradeable_contracts/Claimable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Claimable": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Claimable.sol/Claimable.json"
        }
      }
    },
    "contracts/upgradeable_contracts/DecimalShiftBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "3901d15f7ca2936191f67076b0340306",
      "sourceName": "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "DecimalShiftBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "DecimalShiftBridge.sol/DecimalShiftBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/ERC20Bridge.sol": {
      "lastModificationDate": 1692287402177,
      "contentHash": "d9c7378794a876cf2555a5ad84c8a2a9",
      "sourceName": "contracts/upgradeable_contracts/ERC20Bridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC20Bridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC20Bridge.sol/ERC20Bridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/ERC677Storage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "5f8d99d542ab9a92d5ff735645bfdc9a",
      "sourceName": "contracts/upgradeable_contracts/ERC677Storage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ERC677Storage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC677Storage.sol/ERC677Storage.json"
        }
      }
    },
    "contracts/upgradeable_contracts/FeeTypes.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "6b988fb6c1a66af110ec41a98c34192d",
      "sourceName": "contracts/upgradeable_contracts/FeeTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "FeeTypes": {
          "0.4.24+commit.e67f0147.Linux.gcc": "FeeTypes.sol/FeeTypes.json"
        }
      }
    },
    "contracts/upgradeable_contracts/GSNForeignERC20Bridge.sol": {
      "lastModificationDate": 1692287293693,
      "lastModificationDate": 1692287293693,
      "contentHash": "8f0cae009589d5243b85464287727ca4",
      "sourceName": "contracts/upgradeable_contracts/GSNForeignERC20Bridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/BaseRelayRecipient.sol",
        "contracts/gsn/interfaces/IKnowForwarderAddress.sol",
        "contracts/gsn/interfaces/IRelayRecipient.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "GSNForeignERC20Bridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "GSNForeignERC20Bridge.sol/GSNForeignERC20Bridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/GasTokenConnector.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "29d8243d2c6437c36d51dba9460e839f",
      "sourceName": "contracts/upgradeable_contracts/GasTokenConnector.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IGasToken.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/Ownable.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "GasTokenConnector": {
          "0.4.24+commit.e67f0147.Linux.gcc": "GasTokenConnector.sol/GasTokenConnector.json"
        }
      }
    },
    "contracts/upgradeable_contracts/HomeOverdrawManagement.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "e4364cf326944f7ffa029be5b2ce2b71",
      "sourceName": "contracts/upgradeable_contracts/HomeOverdrawManagement.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseOverdrawManagement.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicHomeBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/RewardableBridge.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "HomeOverdrawManagement": {
          "0.4.24+commit.e67f0147.Linux.gcc": "HomeOverdrawManagement.sol/HomeOverdrawManagement.json"
        }
      }
    },
    "contracts/upgradeable_contracts/Initializable.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "3b01f21db3e5be317ca9b2b4709ac695",
      "sourceName": "contracts/upgradeable_contracts/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Initializable": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Initializable.sol/Initializable.json"
        }
      }
    },
    "contracts/upgradeable_contracts/InitializableBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "915210c1c019f0e97f012c62161b7d7b",
      "sourceName": "contracts/upgradeable_contracts/InitializableBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/Initializable.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "InitializableBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "InitializableBridge.sol/InitializableBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/InterestReceiverBase.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "6e034a4df55a4327fb1d53df2bc4cc65",
      "sourceName": "contracts/upgradeable_contracts/InterestReceiverBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IInterestReceiver.sol",
        "contracts/interfaces/IUniswapRouterV2.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "InterestReceiverBase": {
          "0.4.24+commit.e67f0147.Linux.gcc": "InterestReceiverBase.sol/InterestReceiverBase.json"
        }
      }
    },
    "contracts/upgradeable_contracts/InterestReceiverStakeBuyback.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "091b01cd894d7db29e2d5bfd9039de87",
      "sourceName": "contracts/upgradeable_contracts/InterestReceiverStakeBuyback.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IInterestReceiver.sol",
        "contracts/interfaces/IUniswapRouterV2.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/InterestReceiverBase.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "InterestReceiverStakeBuyback": {
          "0.4.24+commit.e67f0147.Linux.gcc": "InterestReceiverStakeBuyback.sol/InterestReceiverStakeBuyback.json"
        }
      }
    },
    "contracts/upgradeable_contracts/InterestReceiverSwapToETH.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "bf405706750f0184b190475391c55c9a",
      "sourceName": "contracts/upgradeable_contracts/InterestReceiverSwapToETH.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IInterestReceiver.sol",
        "contracts/interfaces/IUniswapRouterV2.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/InterestReceiverBase.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "InterestReceiverSwapToETH": {
          "0.4.24+commit.e67f0147.Linux.gcc": "InterestReceiverSwapToETH.sol/InterestReceiverSwapToETH.json"
        }
      }
    },
    "contracts/upgradeable_contracts/MediatorBalanceStorage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "48af7831ba227bb2c083c7de4e202916",
      "sourceName": "contracts/upgradeable_contracts/MediatorBalanceStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "MediatorBalanceStorage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "MediatorBalanceStorage.sol/MediatorBalanceStorage.json"
        }
      }
    },
    "contracts/upgradeable_contracts/MessageRelay.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "ef2d281aaafe8c0d8a41fbf2fcf2aa83",
      "sourceName": "contracts/upgradeable_contracts/MessageRelay.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "MessageRelay": {
          "0.4.24+commit.e67f0147.Linux.gcc": "MessageRelay.sol/MessageRelay.json"
        }
      }
    },
    "contracts/upgradeable_contracts/OtherSideBridgeStorage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "f2ad7c6f668864256f35099f582a0974",
      "sourceName": "contracts/upgradeable_contracts/OtherSideBridgeStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "OtherSideBridgeStorage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "OtherSideBridgeStorage.sol/OtherSideBridgeStorage.json"
        }
      }
    },
    "contracts/upgradeable_contracts/Ownable.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "bba4c0cc990e5cf8d8a4e1af0ea8ca4d",
      "sourceName": "contracts/upgradeable_contracts/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Ownable": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Ownable.sol/Ownable.json"
        }
      }
    },
    "contracts/upgradeable_contracts/ReentrancyGuard.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "89666b7019b5162aa484fa09f9c768e0",
      "sourceName": "contracts/upgradeable_contracts/ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ReentrancyGuard": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ReentrancyGuard.sol/ReentrancyGuard.json"
        }
      }
    },
    "contracts/upgradeable_contracts/RewardableBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "31fa186497b44eaec79d006615f10271",
      "sourceName": "contracts/upgradeable_contracts/RewardableBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "RewardableBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "RewardableBridge.sol/RewardableBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/RewardableValidators.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "9134aeb97a48a6df5af7ebac6c4b1659",
      "sourceName": "contracts/upgradeable_contracts/RewardableValidators.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseBridgeValidators.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "RewardableValidators": {
          "0.4.24+commit.e67f0147.Linux.gcc": "RewardableValidators.sol/RewardableValidators.json"
        }
      }
    },
    "contracts/upgradeable_contracts/Sacrifice.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "3bf62ba672f99418fe64c92cd22c0522",
      "sourceName": "contracts/upgradeable_contracts/Sacrifice.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Sacrifice": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Sacrifice.sol/Sacrifice.json"
        }
      }
    },
    "contracts/upgradeable_contracts/TokenBridgeMediator.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "720ad8dd6da70c973e6660f40d4527b6",
      "sourceName": "contracts/upgradeable_contracts/TokenBridgeMediator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IAMB.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicAMBMediator.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/TransferInfoStorage.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "TokenBridgeMediator": {
          "0.4.24+commit.e67f0147.Linux.gcc": "TokenBridgeMediator.sol/TokenBridgeMediator.json"
        }
      }
    },
    "contracts/upgradeable_contracts/TransferInfoStorage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "c4f4a16bf862e8aa3ffa7e4243d52138",
      "sourceName": "contracts/upgradeable_contracts/TransferInfoStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeability/EternalStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "TransferInfoStorage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "TransferInfoStorage.sol/TransferInfoStorage.json"
        }
      }
    },
    "contracts/upgradeable_contracts/Upgradeable.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "19dab6202c61e6bcefa14198f3cf145c",
      "sourceName": "contracts/upgradeable_contracts/Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Upgradeable": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Upgradeable.sol/Upgradeable.json"
        }
      }
    },
    "contracts/upgradeable_contracts/Validatable.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "eb100ec21640fc8f9f18435fc55c08a3",
      "sourceName": "contracts/upgradeable_contracts/Validatable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "Validatable": {
          "0.4.24+commit.e67f0147.Linux.gcc": "Validatable.sol/Validatable.json"
        }
      }
    },
    "contracts/upgradeable_contracts/ValidatorStorage.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "57a54dce58052b0d0ae76fbf4c42c235",
      "sourceName": "contracts/upgradeable_contracts/ValidatorStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ValidatorStorage": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ValidatorStorage.sol/ValidatorStorage.json"
        }
      }
    },
    "contracts/upgradeable_contracts/ValidatorsFeeManager.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "b67d13adf8816685efe29b68a7137bd5",
      "sourceName": "contracts/upgradeable_contracts/ValidatorsFeeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IRewardableValidators.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseFeeManager.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ValidatorsFeeManager": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ValidatorsFeeManager.sol/ValidatorsFeeManager.json"
        }
      }
    },
    "contracts/upgradeable_contracts/VersionableBridge.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "9293925e4ec2182284b8fd9d990a9cdd",
      "sourceName": "contracts/upgradeable_contracts/VersionableBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "VersionableBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "VersionableBridge.sol/VersionableBridge.json"
        }
      }
    },
    "contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "0d642d757daab89809aea10eac631c28",
      "sourceName": "contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/ERC677Receiver.sol",
        "contracts/interfaces/IAMB.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseERC677Bridge.sol",
        "contracts/upgradeable_contracts/BaseOverdrawManagement.sol",
        "contracts/upgradeable_contracts/BasicAMBMediator.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/ChooseReceiverHelper.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC677Storage.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/ReentrancyGuard.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/TokenBridgeMediator.sol",
        "contracts/upgradeable_contracts/TransferInfoStorage.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicAMBErc677ToErc677": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicAMBErc677ToErc677.sol/BasicAMBErc677ToErc677.json"
        }
      }
    },
    "contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "7c3c576c2f0077539745aab8e90a9ed2",
      "sourceName": "contracts/upgradeable_contracts/amb_erc677_to_erc677/ForeignAMBErc677ToErc677.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/ERC677Receiver.sol",
        "contracts/interfaces/IAMB.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseERC677Bridge.sol",
        "contracts/upgradeable_contracts/BaseOverdrawManagement.sol",
        "contracts/upgradeable_contracts/BasicAMBMediator.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/ChooseReceiverHelper.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC677Storage.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/MediatorBalanceStorage.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/ReentrancyGuard.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/TokenBridgeMediator.sol",
        "contracts/upgradeable_contracts/TransferInfoStorage.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ForeignAMBErc677ToErc677": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ForeignAMBErc677ToErc677.sol/ForeignAMBErc677ToErc677.json"
        }
      }
    },
    "contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeAMBErc677ToErc677.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "19efc40a43ee41435f8e180829cc2778",
      "sourceName": "contracts/upgradeable_contracts/amb_erc677_to_erc677/HomeAMBErc677ToErc677.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/ERC677Receiver.sol",
        "contracts/interfaces/IAMB.sol",
        "contracts/interfaces/IBurnableMintableERC677Token.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseERC677Bridge.sol",
        "contracts/upgradeable_contracts/BaseOverdrawManagement.sol",
        "contracts/upgradeable_contracts/BasicAMBMediator.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/ChooseReceiverHelper.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC677Storage.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/ReentrancyGuard.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/TokenBridgeMediator.sol",
        "contracts/upgradeable_contracts/TransferInfoStorage.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/amb_erc677_to_erc677/BasicAMBErc677ToErc677.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "HomeAMBErc677ToErc677": {
          "0.4.24+commit.e67f0147.Linux.gcc": "HomeAMBErc677ToErc677.sol/HomeAMBErc677ToErc677.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/AsyncInformationProcessor.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "5f095669db42905f3b690ebb9e343a14",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/AsyncInformationProcessor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IAMBInformationReceiver.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/ArbitraryMessage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicHomeAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "AsyncInformationProcessor": {
          "0.4.24+commit.e67f0147.Linux.gcc": "AsyncInformationProcessor.sol/AsyncInformationProcessor.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "9637db7a4997ac1671f352472fb24090",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicAMB": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicAMB.sol/BasicAMB.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/BasicForeignAMB.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "d14f62d6fdb711f1d762e02a220e77bd",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/BasicForeignAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/ArbitraryMessage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicForeignAMB": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicForeignAMB.sol/BasicForeignAMB.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/BasicHomeAMB.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "fedefe34da9be31b89706a9ac67e4fd8",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/BasicHomeAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/ArbitraryMessage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "BasicHomeAMB": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicHomeAMB.sol/BasicHomeAMB.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/ForeignAMB.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "da040a1c6f02569555c86bffd498ce3c",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/ForeignAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/ArbitraryMessage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicForeignAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ForeignAMB": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ForeignAMB.sol/ForeignAMB.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/ForeignAMBWithGasToken.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "587e832e68ca2d158c114a68a74aed5f",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/ForeignAMBWithGasToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IGasToken.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/ArbitraryMessage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/GasTokenConnector.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicForeignAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/ForeignAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ForeignAMBWithGasToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ForeignAMBWithGasToken.sol/ForeignAMBWithGasToken.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/HomeAMB.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "d95f1ebb0a6b8b55c6270628942da4ea",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/HomeAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IAMBInformationReceiver.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/ArbitraryMessage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/AsyncInformationProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicHomeAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "HomeAMB": {
          "0.4.24+commit.e67f0147.Linux.gcc": "HomeAMB.sol/HomeAMB.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol": {
      "lastModificationDate": 1692287293693,
      "contentHash": "c54835d297acbf03b92116a7b7a25ba7",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/MessageDelivery.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/ArbitraryMessage.sol",
        "contracts/libraries/Bytes.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/arbitrary_message/BasicAMB.sol",
        "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
        "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "MessageDelivery": {
          "0.4.24+commit.e67f0147.Linux.gcc": "MessageDelivery.sol/MessageDelivery.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol": {
      "lastModificationDate": 1692287293697,
      "contentHash": "a26f94210943126dc4375f5052e9b742",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/MessageProcessor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libraries/Bytes.sol",
        "contracts/upgradeability/EternalStorage.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "MessageProcessor": {
          "0.4.24+commit.e67f0147.Linux.gcc": "MessageProcessor.sol/MessageProcessor.json"
        }
      }
    },
    "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol": {
      "lastModificationDate": 1692287293697,
      "contentHash": "3a25de34b19cb6504476928551ab9568",
      "sourceName": "contracts/upgradeable_contracts/arbitrary_message/VersionableAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/upgradeable_contracts/VersionableBridge.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "VersionableAMB": {
          "0.4.24+commit.e67f0147.Linux.gcc": "VersionableAMB.sol/VersionableAMB.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/CompoundConnector.sol": {
      "lastModificationDate": 1692287293697,
      "contentHash": "06ae3cd0373eda50964ebdb00e1ff868",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/CompoundConnector.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/ICToken.sol",
        "contracts/interfaces/IComptroller.sol",
        "contracts/interfaces/IInterestReceiver.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/erc20_to_native/InterestConnector.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "CompoundConnector": {
          "0.4.24+commit.e67f0147.Linux.gcc": "CompoundConnector.sol/CompoundConnector.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/FeeManagerErcToNative.sol": {
      "lastModificationDate": 1692287293697,
      "contentHash": "21003152d04b8ff1d35cb427e5931615",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/FeeManagerErcToNative.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBlockReward.sol",
        "contracts/interfaces/IRewardableValidators.sol",
        "contracts/libraries/Address.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseFeeManager.sol",
        "contracts/upgradeable_contracts/BlockRewardBridge.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/ValidatorsFeeManager.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "FeeManagerErcToNative": {
          "0.4.24+commit.e67f0147.Linux.gcc": "FeeManagerErcToNative.sol/FeeManagerErcToNative.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/FeeManagerErcToNativePOSDAO.sol": {
      "lastModificationDate": 1692287293697,
      "contentHash": "cca88d620558ea6ea13657cce76af7bd",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/FeeManagerErcToNativePOSDAO.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBlockReward.sol",
        "contracts/interfaces/IRewardableValidators.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseFeeManager.sol",
        "contracts/upgradeable_contracts/BlockRewardBridge.sol",
        "contracts/upgradeable_contracts/BlockRewardFeeManager.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "FeeManagerErcToNativePOSDAO": {
          "0.4.24+commit.e67f0147.Linux.gcc": "FeeManagerErcToNativePOSDAO.sol/FeeManagerErcToNativePOSDAO.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/ForeignBridgeErcToNative.sol": {
      "lastModificationDate": 1692287402177,
      "lastModificationDate": 1692287402177,
      "contentHash": "4958a382f7eaf08e7ee1bbe52f3ffe73",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/ForeignBridgeErcToNative.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/OtherSideBridgeStorage.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "ForeignBridgeErcToNative": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ForeignBridgeErcToNative.sol/ForeignBridgeErcToNative.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/HomeBridgeErcToNative.sol": {
      "lastModificationDate": 1692287293697,
      "contentHash": "76d0a6325beaa0ef661f930acc9c0e84",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/HomeBridgeErcToNative.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBlockReward.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BaseOverdrawManagement.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicHomeBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/BlockRewardBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "contracts/upgradeable_contracts/HomeOverdrawManagement.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/RewardableBridge.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/erc20_to_native/RewardableHomeBridgeErcToNative.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "HomeBridgeErcToNative": {
          "0.4.24+commit.e67f0147.Linux.gcc": "HomeBridgeErcToNative.sol/HomeBridgeErcToNative.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/InterestConnector.sol": {
      "lastModificationDate": 1692287402177,
      "contentHash": "cdec02cc975d637928372bb4e89f011d",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/InterestConnector.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IInterestReceiver.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "InterestConnector": {
          "0.4.24+commit.e67f0147.Linux.gcc": "InterestConnector.sol/InterestConnector.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/RewardableHomeBridgeErcToNative.sol": {
      "lastModificationDate": 1692287293697,
      "contentHash": "c89f9a7c246003a1e0e23da78aa9339c",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/RewardableHomeBridgeErcToNative.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/FeeTypes.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/RewardableBridge.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "RewardableHomeBridgeErcToNative": {
          "0.4.24+commit.e67f0147.Linux.gcc": "RewardableHomeBridgeErcToNative.sol/RewardableHomeBridgeErcToNative.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/SavingsDaiConnector.sol": {
      "lastModificationDate": 1692639395727,
      "contentHash": "44ed7ea849724e458ac27850fcd847f8",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/SavingsDaiConnector.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IInterestReceiver.sol",
        "contracts/interfaces/ISavingsDai.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/erc20_to_native/InterestConnector.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "SavingsDaiConnector": {
          "0.4.24+commit.e67f0147.Linux.gcc": "SavingsDaiConnector.sol/SavingsDaiConnector.json"
        }
      }
    },
    "contracts/upgradeable_contracts/erc20_to_native/XDaiForeignBridge.sol": {
      "lastModificationDate": 1692632966995,
      "contentHash": "3bbda626db647399c1015f478655c94b",
      "sourceName": "contracts/upgradeable_contracts/erc20_to_native/XDaiForeignBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/gsn/BaseRelayRecipient.sol",
        "contracts/gsn/interfaces/IKnowForwarderAddress.sol",
        "contracts/gsn/interfaces/IRelayRecipient.sol",
        "contracts/interfaces/ERC677.sol",
        "contracts/interfaces/IBridgeValidators.sol",
        "contracts/interfaces/IInterestReceiver.sol",
        "contracts/interfaces/ISavingsDai.sol",
        "contracts/interfaces/IUpgradeabilityOwnerStorage.sol",
        "contracts/libraries/Address.sol",
        "contracts/libraries/Message.sol",
        "contracts/libraries/SafeERC20.sol",
        "contracts/upgradeability/EternalStorage.sol",
        "contracts/upgradeable_contracts/BasicBridge.sol",
        "contracts/upgradeable_contracts/BasicForeignBridge.sol",
        "contracts/upgradeable_contracts/BasicTokenBridge.sol",
        "contracts/upgradeable_contracts/Claimable.sol",
        "contracts/upgradeable_contracts/DecimalShiftBridge.sol",
        "contracts/upgradeable_contracts/ERC20Bridge.sol",
        "contracts/upgradeable_contracts/GSNForeignERC20Bridge.sol",
        "contracts/upgradeable_contracts/Initializable.sol",
        "contracts/upgradeable_contracts/InitializableBridge.sol",
        "contracts/upgradeable_contracts/MessageRelay.sol",
        "contracts/upgradeable_contracts/OtherSideBridgeStorage.sol",
        "contracts/upgradeable_contracts/Ownable.sol",
        "contracts/upgradeable_contracts/Sacrifice.sol",
        "contracts/upgradeable_contracts/Upgradeable.sol",
        "contracts/upgradeable_contracts/Validatable.sol",
        "contracts/upgradeable_contracts/ValidatorStorage.sol",
        "contracts/upgradeable_contracts/VersionableBridge.sol",
        "contracts/upgradeable_contracts/erc20_to_native/ForeignBridgeErcToNative.sol",
        "contracts/upgradeable_contracts/erc20_to_native/InterestConnector.sol",
        "contracts/upgradeable_contracts/erc20_to_native/SavingsDaiConnector.sol",
        "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "=0.4.24",
      "artifacts": {
        "XDaiForeignBridge": {
          "0.4.24+commit.e67f0147.Linux.gcc": "XDaiForeignBridge.sol/XDaiForeignBridge.json"
        }
      }
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1692635549104,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.21+commit.d9974bed.Linux.gcc": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "lastModificationDate": 1692635547684,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.21+commit.d9974bed.Linux.gcc": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.21+commit.d9974bed.Linux.gcc": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.21+commit.d9974bed.Linux.gcc": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1692635549116,
      "contentHash": "aff0685683a41d8e314d64aef646fe6f",
      "lastModificationDate": 1692635549116,
      "contentHash": "aff0685683a41d8e314d64aef646fe6f",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1692635549116,
      "contentHash": "27745bb24c5568c75c3043277ee18bcb",
      "lastModificationDate": 1692635549116,
      "contentHash": "27745bb24c5568c75c3043277ee18bcb",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "6d12d54c05754ad4e03066726dca3a84",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1692635547684,
      "lastModificationDate": 1692635547684,
      "contentHash": "2e1d13674e152408867795362d833c24",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1692635547684,
      "lastModificationDate": 1692635547684,
      "contentHash": "4fc0ff0cb196a405e5a4c9fa1c6acccb",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1692635547684,
      "lastModificationDate": 1692635547684,
      "contentHash": "6281165a12aa639705c691fccefd855e",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1692635547684,
      "lastModificationDate": 1692635547684,
      "contentHash": "3ce83748fd76644688f916c9cced545b",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.21+commit.d9974bed.Linux.gcc": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1692635549116,
      "lastModificationDate": 1692635549116,
      "contentHash": "c67db2c47c2e757cc33d38d6db0b1562",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.21+commit.d9974bed.Linux.gcc": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1692635549120,
      "contentHash": "b098c2721502365797aae8d0ee1babb8",
      "lastModificationDate": 1692635549120,
      "contentHash": "b098c2721502365797aae8d0ee1babb8",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.21+commit.d9974bed.Linux.gcc": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.21+commit.d9974bed.Linux.gcc": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.21+commit.d9974bed.Linux.gcc": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "491ca717c1915995e78cc361485a3067",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.21+commit.d9974bed.Linux.gcc": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IERC20.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "8099161d518e5862a76750349d58e801",
      "sourceName": "lib/forge-std/src/interfaces/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2",
      "artifacts": {
        "IERC20": {
          "0.8.21+commit.d9974bed.Linux.gcc": "IERC20.sol/IERC20.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.21+commit.d9974bed.Linux.gcc": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1692635547684,
      "contentHash": "ac3b1bf5a444db5db3656021830258a8",
      "sourceName": "lib/forge-std/src/safeconsole.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.21+commit.d9974bed.Linux.gcc": "safeconsole.sol/safeconsole.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "3aa0dcd0332c762047968d1ea4e470c5",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/AddressUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "AddressUtils": {
          "0.4.24+commit.e67f0147.Linux.gcc": "AddressUtils.sol/AddressUtils.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "6821789357d96d3ba8f3ddaf60ac5646",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "SafeMath": {
          "0.4.24+commit.e67f0147.Linux.gcc": "SafeMath.sol/SafeMath.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "44882316add3bcc07f5671dcd62915e4",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "Ownable": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ownership/Ownable.sol/Ownable.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "c66e00795d3958e3d72517c9e6b2248b",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "BasicToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BasicToken.sol/BasicToken.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "26f30e64d55dcb027dae98e32dfa4bd4",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "BurnableToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "BurnableToken.sol/BurnableToken.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "1c4d51f9d7ffc17eae46c51b59f9c7aa",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "DetailedERC20": {
          "0.4.24+commit.e67f0147.Linux.gcc": "DetailedERC20.sol/DetailedERC20.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "12257092e5646ef33392b6eb6d5833ee",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "ERC20": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC20.sol/ERC20.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "26aafcd0f20f4c6f8b695d3fb6884ac0",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "ERC20Basic": {
          "0.4.24+commit.e67f0147.Linux.gcc": "ERC20Basic.sol/ERC20Basic.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "1525032c7fe107fed8dd438fa3f35ec2",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol"
      ],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "MintableToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "MintableToken.sol/MintableToken.json"
        }
      }
    },
    "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol": {
      "lastModificationDate": 1690892408753,
      "contentHash": "6ec4e1c946f6e4eed46d346bea65d2b9",
      "sourceName": "node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol"
      ],
      "versionRequirement": "^0.4.24",
      "artifacts": {
        "StandardToken": {
          "0.4.24+commit.e67f0147.Linux.gcc": "StandardToken.sol/StandardToken.json"
        }
      }
    },
    "test/foundry/Setup.t.sol": {
      "lastModificationDate": 1692639751682,
      "contentHash": "671d364120f0fff24f3d10c795b0891a",
      "sourceName": "test/foundry/Setup.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IERC20.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "test/foundry/interfaces/IEternalStorageProxy.sol",
        "test/foundry/interfaces/ISavingsDai.sol",
        "test/foundry/interfaces/IXDaiForeignBridge.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "SetupTest": {
          "0.8.21+commit.d9974bed.Linux.gcc": "Setup.t.sol/SetupTest.json"
        }
      }
    },
    "test/foundry/XDaiForeignBridge.t.sol": {
      "lastModificationDate": 1692639116558,
      "contentHash": "6dd1862d62f62e385bac8b7407eca37b",
      "sourceName": "test/foundry/XDaiForeignBridge.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IERC20.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "test/foundry/Setup.t.sol",
        "test/foundry/interfaces/IEternalStorageProxy.sol",
        "test/foundry/interfaces/ISavingsDai.sol",
        "test/foundry/interfaces/IXDaiForeignBridge.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "XDaiForeignBridgeTest": {
          "0.8.21+commit.d9974bed.Linux.gcc": "XDaiForeignBridge.t.sol/XDaiForeignBridgeTest.json"
        }
      }
    },
    "test/foundry/interfaces/IEternalStorageProxy.sol": {
      "lastModificationDate": 1692287402177,
      "contentHash": "888b93e855c288650c69f377a4407808",
      "sourceName": "test/foundry/interfaces/IEternalStorageProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.10",
      "artifacts": {
        "IEternalStorageProxy": {
          "0.8.21+commit.d9974bed.Linux.gcc": "IEternalStorageProxy.sol/IEternalStorageProxy.json"
        }
      }
    },
    "test/foundry/interfaces/ISavingsDai.sol": {
      "lastModificationDate": 1692287402177,
      "contentHash": "0403b923c6d6f133f44a0d88a426b037",
      "sourceName": "test/foundry/interfaces/ISavingsDai.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.10",
      "artifacts": {
        "ISavingsDai": {
          "0.8.21+commit.d9974bed.Linux.gcc": "interfaces/ISavingsDai.sol/ISavingsDai.json"
        }
      }
    },
    "test/foundry/interfaces/IXDaiForeignBridge.sol": {
      "lastModificationDate": 1692621496600,
      "contentHash": "a17494f38fab6a2dc88ba21e4d2e1838",
      "sourceName": "test/foundry/interfaces/IXDaiForeignBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 10000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.10",
      "artifacts": {
        "IXDaiForeignBridge": {
          "0.8.21+commit.d9974bed.Linux.gcc": "IXDaiForeignBridge.sol/IXDaiForeignBridge.json"
        }
      }
    }
  }
}